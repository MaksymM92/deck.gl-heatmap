{"ast":null,"code":"import { createElement } from 'react';\nimport { View } from '@deck.gl/core';\nimport { inheritsFrom } from './inherits-from';\nimport evaluateChildren, { isComponent } from './evaluate-children';\nexport default function positionChildrenUnderViews(_ref) {\n  let {\n    children,\n    deck,\n    ContextProvider\n  } = _ref;\n  const {\n    viewManager\n  } = deck || {};\n  if (!viewManager || !viewManager.views.length) {\n    return [];\n  }\n  const views = {};\n  const defaultViewId = viewManager.views[0].id;\n  for (const child of children) {\n    let viewId = defaultViewId;\n    let viewChildren = child;\n    if (isComponent(child) && inheritsFrom(child.type, View)) {\n      viewId = child.props.id || defaultViewId;\n      viewChildren = child.props.children;\n    }\n    const viewport = viewManager.getViewport(viewId);\n    const viewState = viewManager.getViewState(viewId);\n    if (viewport) {\n      viewState.padding = viewport.padding;\n      const {\n        x,\n        y,\n        width,\n        height\n      } = viewport;\n      viewChildren = evaluateChildren(viewChildren, {\n        x,\n        y,\n        width,\n        height,\n        viewport,\n        viewState\n      });\n      if (!views[viewId]) {\n        views[viewId] = {\n          viewport,\n          children: []\n        };\n      }\n      views[viewId].children.push(viewChildren);\n    }\n  }\n  return Object.keys(views).map(viewId => {\n    const {\n      viewport,\n      children: viewChildren\n    } = views[viewId];\n    const {\n      x,\n      y,\n      width,\n      height\n    } = viewport;\n    const style = {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width,\n      height\n    };\n    const key = \"view-\".concat(viewId);\n    const viewElement = createElement('div', {\n      key,\n      id: key,\n      style\n    }, ...viewChildren);\n    if (ContextProvider) {\n      const contextValue = {\n        viewport,\n        container: deck.canvas.offsetParent,\n        eventManager: deck.eventManager,\n        onViewStateChange: params => {\n          params.viewId = viewId;\n          deck._onViewStateChange(params);\n        }\n      };\n      return createElement(ContextProvider, {\n        key,\n        value: contextValue\n      }, viewElement);\n    }\n    return viewElement;\n  });\n}","map":{"version":3,"names":["createElement","View","inheritsFrom","evaluateChildren","isComponent","positionChildrenUnderViews","_ref","children","deck","ContextProvider","viewManager","views","length","defaultViewId","id","child","viewId","viewChildren","type","props","viewport","getViewport","viewState","getViewState","padding","x","y","width","height","push","Object","keys","map","style","position","left","top","key","concat","viewElement","contextValue","container","canvas","offsetParent","eventManager","onViewStateChange","params","_onViewStateChange","value"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@deck.gl/react/src/utils/position-children-under-views.ts"],"sourcesContent":["import * as React from 'react';\nimport {createElement} from 'react';\nimport {View} from '@deck.gl/core';\nimport {inheritsFrom} from './inherits-from';\nimport evaluateChildren, {isComponent} from './evaluate-children';\n\nimport type {Deck, DeckProps, Viewport} from '@deck.gl/core';\nimport type {EventManager} from 'mjolnir.js';\n\nexport type DeckGLContextValue = {\n  viewport: Viewport;\n  container: HTMLElement;\n  eventManager: EventManager;\n  onViewStateChange: DeckProps['onViewStateChange'];\n};\n\n// Iterate over views and reposition children associated with views\n// TODO - Can we supply a similar function for the non-React case?\nexport default function positionChildrenUnderViews({\n  children,\n  deck,\n  ContextProvider\n}: {\n  children: React.ReactNode[];\n  deck?: Deck;\n  ContextProvider?: React.Context<DeckGLContextValue>['Provider'];\n}): React.ReactNode[] {\n  // @ts-expect-error accessing protected property\n  const {viewManager} = deck || {};\n\n  if (!viewManager || !viewManager.views.length) {\n    return [];\n  }\n\n  const views: Record<\n    string,\n    {\n      viewport: Viewport;\n      children: React.ReactNode[];\n    }\n  > = {};\n  const defaultViewId = (viewManager.views[0] as View).id;\n\n  // Sort children by view id\n  for (const child of children) {\n    // Unless child is a View, position / render as part of the default view\n    let viewId = defaultViewId;\n    let viewChildren = child;\n\n    if (isComponent(child) && inheritsFrom(child.type, View)) {\n      viewId = child.props.id || defaultViewId;\n      viewChildren = child.props.children;\n    }\n\n    const viewport = viewManager.getViewport(viewId) as Viewport;\n    const viewState = viewManager.getViewState(viewId);\n\n    // Drop (auto-hide) elements with viewId that are not matched by any current view\n    if (viewport) {\n      viewState.padding = viewport.padding;\n      const {x, y, width, height} = viewport;\n      // Resolve potentially relative dimensions using the deck.gl container size\n      viewChildren = evaluateChildren(viewChildren, {\n        x,\n        y,\n        width,\n        height,\n        viewport,\n        viewState\n      });\n\n      if (!views[viewId]) {\n        views[viewId] = {\n          viewport,\n          children: []\n        };\n      }\n      views[viewId].children.push(viewChildren);\n    }\n  }\n\n  // Render views\n  return Object.keys(views).map(viewId => {\n    const {viewport, children: viewChildren} = views[viewId];\n    const {x, y, width, height} = viewport;\n    const style = {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width,\n      height\n    };\n\n    const key = `view-${viewId}`;\n    // If children is passed as an array, React will throw the \"each element in a list needs\n    // a key\" warning. Sending each child as separate arguments removes this requirement.\n    const viewElement = createElement('div', {key, id: key, style}, ...viewChildren);\n\n    if (ContextProvider) {\n      const contextValue: DeckGLContextValue = {\n        viewport,\n        // @ts-expect-error accessing protected property\n        container: deck.canvas.offsetParent,\n        // @ts-expect-error accessing protected property\n        eventManager: deck.eventManager,\n        onViewStateChange: params => {\n          params.viewId = viewId;\n          // @ts-expect-error accessing protected method\n          deck._onViewStateChange(params);\n        }\n      };\n      return createElement(ContextProvider, {key, value: contextValue}, viewElement);\n    }\n\n    return viewElement;\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}