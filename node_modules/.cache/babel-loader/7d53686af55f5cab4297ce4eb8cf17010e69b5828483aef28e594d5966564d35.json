{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Layer, project32, picking, UNIT } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/core';\nimport PathTesselator from './path-tesselator';\nimport vs from './path-layer-vertex.glsl';\nimport fs from './path-layer-fragment.glsl';\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n  widthUnits: 'meters',\n  widthScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  widthMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  widthMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  jointRounded: false,\n  capRounded: false,\n  miterLimit: {\n    type: 'number',\n    min: 0,\n    value: 4\n  },\n  billboard: false,\n  _pathType: null,\n  getPath: {\n    type: 'accessor',\n    value: object => object.path\n  },\n  getColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  rounded: {\n    deprecatedFor: ['jointRounded', 'capRounded']\n  }\n};\nconst ATTRIBUTE_TRANSITION = {\n  enter: (value, chunk) => {\n    return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n  }\n};\nexport default class PathLayer extends Layer {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", void 0);\n  }\n  getShaders() {\n    return super.getShaders({\n      vs,\n      fs,\n      modules: [project32, picking]\n    });\n  }\n  get wrapLongitude() {\n    return false;\n  }\n  initializeState() {\n    const noAlloc = true;\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      positions: {\n        size: 3,\n        vertexOffset: 1,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPath',\n        update: this.calculatePositions,\n        noAlloc,\n        shaderAttributes: {\n          instanceLeftPositions: {\n            vertexOffset: 0\n          },\n          instanceStartPositions: {\n            vertexOffset: 1\n          },\n          instanceEndPositions: {\n            vertexOffset: 2\n          },\n          instanceRightPositions: {\n            vertexOffset: 3\n          }\n        }\n      },\n      instanceTypes: {\n        size: 1,\n        type: 5121,\n        update: this.calculateSegmentTypes,\n        noAlloc\n      },\n      instanceStrokeWidths: {\n        size: 1,\n        accessor: 'getWidth',\n        transition: ATTRIBUTE_TRANSITION,\n        defaultValue: 1\n      },\n      instanceColors: {\n        size: this.props.colorFormat.length,\n        type: 5121,\n        normalized: true,\n        accessor: 'getColor',\n        transition: ATTRIBUTE_TRANSITION,\n        defaultValue: DEFAULT_COLOR\n      },\n      instancePickingColors: {\n        size: 3,\n        type: 5121,\n        accessor: (object, _ref) => {\n          let {\n            index,\n            target: value\n          } = _ref;\n          return this.encodePickingColor(object && object.__source ? object.__source.index : index, value);\n        }\n      }\n    });\n    this.setState({\n      pathTesselator: new PathTesselator({\n        fp64: this.use64bitPositions()\n      })\n    });\n  }\n  updateState(params) {\n    super.updateState(params);\n    const {\n      props,\n      changeFlags\n    } = params;\n    const attributeManager = this.getAttributeManager();\n    const geometryChanged = changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPath);\n    if (geometryChanged) {\n      const {\n        pathTesselator\n      } = this.state;\n      const buffers = props.data.attributes || {};\n      pathTesselator.updateGeometry({\n        data: props.data,\n        geometryBuffer: buffers.getPath,\n        buffers,\n        normalize: !props._pathType,\n        loop: props._pathType === 'loop',\n        getGeometry: props.getPath,\n        positionFormat: props.positionFormat,\n        wrapLongitude: props.wrapLongitude,\n        resolution: this.context.viewport.resolution,\n        dataChanged: changeFlags.dataChanged\n      });\n      this.setState({\n        numInstances: pathTesselator.instanceCount,\n        startIndices: pathTesselator.vertexStarts\n      });\n      if (!changeFlags.dataChanged) {\n        attributeManager.invalidateAll();\n      }\n    }\n    if (changeFlags.extensionsChanged) {\n      var _this$state$model;\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      attributeManager.invalidateAll();\n    }\n  }\n  getPickingInfo(params) {\n    const info = super.getPickingInfo(params);\n    const {\n      index\n    } = info;\n    const {\n      data\n    } = this.props;\n    if (data[0] && data[0].__source) {\n      info.object = data.find(d => d.__source.index === index);\n    }\n    return info;\n  }\n  disablePickingIndex(objectIndex) {\n    const {\n      data\n    } = this.props;\n    if (data[0] && data[0].__source) {\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].__source.index === objectIndex) {\n          this._disablePickingIndex(i);\n        }\n      }\n    } else {\n      this._disablePickingIndex(objectIndex);\n    }\n  }\n  draw(_ref2) {\n    let {\n      uniforms\n    } = _ref2;\n    const {\n      jointRounded,\n      capRounded,\n      billboard,\n      miterLimit,\n      widthUnits,\n      widthScale,\n      widthMinPixels,\n      widthMaxPixels\n    } = this.props;\n    this.state.model.setUniforms(uniforms).setUniforms({\n      jointType: Number(jointRounded),\n      capType: Number(capRounded),\n      billboard,\n      widthUnits: UNIT[widthUnits],\n      widthScale,\n      miterLimit,\n      widthMinPixels,\n      widthMaxPixels\n    }).draw();\n  }\n  _getModel(gl) {\n    const SEGMENT_INDICES = [0, 1, 2, 1, 4, 2, 1, 3, 4, 3, 5, 4];\n    const SEGMENT_POSITIONS = [0, 0, 0, -1, 0, 1, 1, -1, 1, 1, 1, 0];\n    return new Model(gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: 4,\n        attributes: {\n          indices: new Uint16Array(SEGMENT_INDICES),\n          positions: {\n            value: new Float32Array(SEGMENT_POSITIONS),\n            size: 2\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n  calculatePositions(attribute) {\n    const {\n      pathTesselator\n    } = this.state;\n    attribute.startIndices = pathTesselator.vertexStarts;\n    attribute.value = pathTesselator.get('positions');\n  }\n  calculateSegmentTypes(attribute) {\n    const {\n      pathTesselator\n    } = this.state;\n    attribute.startIndices = pathTesselator.vertexStarts;\n    attribute.value = pathTesselator.get('segmentTypes');\n  }\n}\n_defineProperty(PathLayer, \"defaultProps\", defaultProps);\n_defineProperty(PathLayer, \"layerName\", 'PathLayer');","map":{"version":3,"names":["_defineProperty","Layer","project32","picking","UNIT","Model","Geometry","PathTesselator","vs","fs","DEFAULT_COLOR","defaultProps","widthUnits","widthScale","type","min","value","widthMinPixels","widthMaxPixels","Number","MAX_SAFE_INTEGER","jointRounded","capRounded","miterLimit","billboard","_pathType","getPath","object","path","getColor","getWidth","rounded","deprecatedFor","ATTRIBUTE_TRANSITION","enter","chunk","length","subarray","PathLayer","constructor","arguments","getShaders","modules","wrapLongitude","initializeState","noAlloc","attributeManager","getAttributeManager","addInstanced","positions","size","vertexOffset","fp64","use64bitPositions","transition","accessor","update","calculatePositions","shaderAttributes","instanceLeftPositions","instanceStartPositions","instanceEndPositions","instanceRightPositions","instanceTypes","calculateSegmentTypes","instanceStrokeWidths","defaultValue","instanceColors","props","colorFormat","normalized","instancePickingColors","_ref","index","target","encodePickingColor","__source","setState","pathTesselator","updateState","params","changeFlags","geometryChanged","dataChanged","updateTriggersChanged","all","state","buffers","data","attributes","updateGeometry","geometryBuffer","normalize","loop","getGeometry","positionFormat","resolution","context","viewport","numInstances","instanceCount","startIndices","vertexStarts","invalidateAll","extensionsChanged","_this$state$model","gl","model","delete","_getModel","getPickingInfo","info","find","d","disablePickingIndex","objectIndex","i","_disablePickingIndex","draw","_ref2","uniforms","setUniforms","jointType","capType","SEGMENT_INDICES","SEGMENT_POSITIONS","id","geometry","drawMode","indices","Uint16Array","Float32Array","isInstanced","attribute","get"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Layer, project32, picking, UNIT } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/core';\nimport PathTesselator from './path-tesselator';\nimport vs from './path-layer-vertex.glsl';\nimport fs from './path-layer-fragment.glsl';\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n  widthUnits: 'meters',\n  widthScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  widthMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  widthMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  jointRounded: false,\n  capRounded: false,\n  miterLimit: {\n    type: 'number',\n    min: 0,\n    value: 4\n  },\n  billboard: false,\n  _pathType: null,\n  getPath: {\n    type: 'accessor',\n    value: object => object.path\n  },\n  getColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  rounded: {\n    deprecatedFor: ['jointRounded', 'capRounded']\n  }\n};\nconst ATTRIBUTE_TRANSITION = {\n  enter: (value, chunk) => {\n    return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n  }\n};\nexport default class PathLayer extends Layer {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", void 0);\n  }\n\n  getShaders() {\n    return super.getShaders({\n      vs,\n      fs,\n      modules: [project32, picking]\n    });\n  }\n\n  get wrapLongitude() {\n    return false;\n  }\n\n  initializeState() {\n    const noAlloc = true;\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      positions: {\n        size: 3,\n        vertexOffset: 1,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPath',\n        update: this.calculatePositions,\n        noAlloc,\n        shaderAttributes: {\n          instanceLeftPositions: {\n            vertexOffset: 0\n          },\n          instanceStartPositions: {\n            vertexOffset: 1\n          },\n          instanceEndPositions: {\n            vertexOffset: 2\n          },\n          instanceRightPositions: {\n            vertexOffset: 3\n          }\n        }\n      },\n      instanceTypes: {\n        size: 1,\n        type: 5121,\n        update: this.calculateSegmentTypes,\n        noAlloc\n      },\n      instanceStrokeWidths: {\n        size: 1,\n        accessor: 'getWidth',\n        transition: ATTRIBUTE_TRANSITION,\n        defaultValue: 1\n      },\n      instanceColors: {\n        size: this.props.colorFormat.length,\n        type: 5121,\n        normalized: true,\n        accessor: 'getColor',\n        transition: ATTRIBUTE_TRANSITION,\n        defaultValue: DEFAULT_COLOR\n      },\n      instancePickingColors: {\n        size: 3,\n        type: 5121,\n        accessor: (object, {\n          index,\n          target: value\n        }) => this.encodePickingColor(object && object.__source ? object.__source.index : index, value)\n      }\n    });\n    this.setState({\n      pathTesselator: new PathTesselator({\n        fp64: this.use64bitPositions()\n      })\n    });\n  }\n\n  updateState(params) {\n    super.updateState(params);\n    const {\n      props,\n      changeFlags\n    } = params;\n    const attributeManager = this.getAttributeManager();\n    const geometryChanged = changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPath);\n\n    if (geometryChanged) {\n      const {\n        pathTesselator\n      } = this.state;\n      const buffers = props.data.attributes || {};\n      pathTesselator.updateGeometry({\n        data: props.data,\n        geometryBuffer: buffers.getPath,\n        buffers,\n        normalize: !props._pathType,\n        loop: props._pathType === 'loop',\n        getGeometry: props.getPath,\n        positionFormat: props.positionFormat,\n        wrapLongitude: props.wrapLongitude,\n        resolution: this.context.viewport.resolution,\n        dataChanged: changeFlags.dataChanged\n      });\n      this.setState({\n        numInstances: pathTesselator.instanceCount,\n        startIndices: pathTesselator.vertexStarts\n      });\n\n      if (!changeFlags.dataChanged) {\n        attributeManager.invalidateAll();\n      }\n    }\n\n    if (changeFlags.extensionsChanged) {\n      var _this$state$model;\n\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      attributeManager.invalidateAll();\n    }\n  }\n\n  getPickingInfo(params) {\n    const info = super.getPickingInfo(params);\n    const {\n      index\n    } = info;\n    const {\n      data\n    } = this.props;\n\n    if (data[0] && data[0].__source) {\n      info.object = data.find(d => d.__source.index === index);\n    }\n\n    return info;\n  }\n\n  disablePickingIndex(objectIndex) {\n    const {\n      data\n    } = this.props;\n\n    if (data[0] && data[0].__source) {\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].__source.index === objectIndex) {\n          this._disablePickingIndex(i);\n        }\n      }\n    } else {\n      this._disablePickingIndex(objectIndex);\n    }\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      jointRounded,\n      capRounded,\n      billboard,\n      miterLimit,\n      widthUnits,\n      widthScale,\n      widthMinPixels,\n      widthMaxPixels\n    } = this.props;\n    this.state.model.setUniforms(uniforms).setUniforms({\n      jointType: Number(jointRounded),\n      capType: Number(capRounded),\n      billboard,\n      widthUnits: UNIT[widthUnits],\n      widthScale,\n      miterLimit,\n      widthMinPixels,\n      widthMaxPixels\n    }).draw();\n  }\n\n  _getModel(gl) {\n    const SEGMENT_INDICES = [0, 1, 2, 1, 4, 2, 1, 3, 4, 3, 5, 4];\n    const SEGMENT_POSITIONS = [0, 0, 0, -1, 0, 1, 1, -1, 1, 1, 1, 0];\n    return new Model(gl, { ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: 4,\n        attributes: {\n          indices: new Uint16Array(SEGMENT_INDICES),\n          positions: {\n            value: new Float32Array(SEGMENT_POSITIONS),\n            size: 2\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n\n  calculatePositions(attribute) {\n    const {\n      pathTesselator\n    } = this.state;\n    attribute.startIndices = pathTesselator.vertexStarts;\n    attribute.value = pathTesselator.get('positions');\n  }\n\n  calculateSegmentTypes(attribute) {\n    const {\n      pathTesselator\n    } = this.state;\n    attribute.startIndices = pathTesselator.vertexStarts;\n    attribute.value = pathTesselator.get('segmentTypes');\n  }\n\n}\n\n_defineProperty(PathLayer, \"defaultProps\", defaultProps);\n\n_defineProperty(PathLayer, \"layerName\", 'PathLayer');\n//# sourceMappingURL=path-layer.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}