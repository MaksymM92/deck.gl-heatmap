{"ast":null,"code":"import { isWebGL, createGLContext, instrumentGLContext, resizeGLContext, resetParameters } from '@luma.gl/gltools';\nimport { requestAnimationFrame, cancelAnimationFrame, Query, lumaStats, Framebuffer, log, assert } from '@luma.gl/webgl';\nimport { isBrowser } from '@probe.gl/env';\nconst isPage = isBrowser() && typeof document !== 'undefined';\nlet statIdCounter = 0;\nexport default class AnimationLoop {\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      onCreateContext = opts => createGLContext(opts),\n      onAddHTML = null,\n      onInitialize = () => {},\n      onRender = () => {},\n      onFinalize = () => {},\n      onError,\n      gl = null,\n      glOptions = {},\n      debug = false,\n      createFramebuffer = false,\n      autoResizeViewport = true,\n      autoResizeDrawingBuffer = true,\n      stats = lumaStats.get(\"animation-loop-\".concat(statIdCounter++))\n    } = props;\n    let {\n      useDevicePixels = true\n    } = props;\n    if ('useDevicePixelRatio' in props) {\n      log.deprecated('useDevicePixelRatio', 'useDevicePixels')();\n      useDevicePixels = props.useDevicePixelRatio;\n    }\n    this.props = {\n      onCreateContext,\n      onAddHTML,\n      onInitialize,\n      onRender,\n      onFinalize,\n      onError,\n      gl,\n      glOptions,\n      debug,\n      createFramebuffer\n    };\n    this.gl = gl;\n    this.needsRedraw = null;\n    this.timeline = null;\n    this.stats = stats;\n    this.cpuTime = this.stats.get('CPU Time');\n    this.gpuTime = this.stats.get('GPU Time');\n    this.frameRate = this.stats.get('Frame Rate');\n    this._initialized = false;\n    this._running = false;\n    this._animationFrameId = null;\n    this._nextFramePromise = null;\n    this._resolveNextFrame = null;\n    this._cpuStartTime = 0;\n    this.setProps({\n      autoResizeViewport,\n      autoResizeDrawingBuffer,\n      useDevicePixels\n    });\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this._pageLoadPromise = null;\n    this._onMousemove = this._onMousemove.bind(this);\n    this._onMouseleave = this._onMouseleave.bind(this);\n  }\n  delete() {\n    this.stop();\n    this._setDisplay(null);\n  }\n  setNeedsRedraw(reason) {\n    assert(typeof reason === 'string');\n    this.needsRedraw = this.needsRedraw || reason;\n    return this;\n  }\n  setProps(props) {\n    if ('autoResizeViewport' in props) {\n      this.autoResizeViewport = props.autoResizeViewport;\n    }\n    if ('autoResizeDrawingBuffer' in props) {\n      this.autoResizeDrawingBuffer = props.autoResizeDrawingBuffer;\n    }\n    if ('useDevicePixels' in props) {\n      this.useDevicePixels = props.useDevicePixels;\n    }\n    return this;\n  }\n  start() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this._running) {\n      return this;\n    }\n    this._running = true;\n    const startPromise = this._getPageLoadPromise().then(() => {\n      if (!this._running || this._initialized) {\n        return null;\n      }\n      this._createWebGLContext(opts);\n      this._createFramebuffer();\n      this._startEventHandling();\n      this._initializeCallbackData();\n      this._updateCallbackData();\n      this._resizeCanvasDrawingBuffer();\n      this._resizeViewport();\n      this._gpuTimeQuery = Query.isSupported(this.gl, ['timers']) ? new Query(this.gl) : null;\n      this._initialized = true;\n      return this.onInitialize(this.animationProps);\n    }).then(appContext => {\n      if (this._running) {\n        this._addCallbackData(appContext || {});\n        if (appContext !== false) {\n          this._startLoop();\n        }\n      }\n    });\n    if (this.props.onError) {\n      startPromise.catch(this.props.onError);\n    }\n    return this;\n  }\n  redraw() {\n    if (this.isContextLost()) {\n      return this;\n    }\n    this._beginTimers();\n    this._setupFrame();\n    this._updateCallbackData();\n    this._renderFrame(this.animationProps);\n    this._clearNeedsRedraw();\n    if (this.offScreen && this.gl.commit) {\n      this.gl.commit();\n    }\n    if (this._resolveNextFrame) {\n      this._resolveNextFrame(this);\n      this._nextFramePromise = null;\n      this._resolveNextFrame = null;\n    }\n    this._endTimers();\n    return this;\n  }\n  stop() {\n    if (this._running) {\n      this._finalizeCallbackData();\n      this._cancelAnimationFrame(this._animationFrameId);\n      this._nextFramePromise = null;\n      this._resolveNextFrame = null;\n      this._animationFrameId = null;\n      this._running = false;\n    }\n    return this;\n  }\n  attachTimeline(timeline) {\n    this.timeline = timeline;\n    return this.timeline;\n  }\n  detachTimeline() {\n    this.timeline = null;\n  }\n  waitForRender() {\n    this.setNeedsRedraw('waitForRender');\n    if (!this._nextFramePromise) {\n      this._nextFramePromise = new Promise(resolve => {\n        this._resolveNextFrame = resolve;\n      });\n    }\n    return this._nextFramePromise;\n  }\n  async toDataURL() {\n    this.setNeedsRedraw('toDataURL');\n    await this.waitForRender();\n    return this.gl.canvas.toDataURL();\n  }\n  isContextLost() {\n    return this.gl.isContextLost();\n  }\n  onCreateContext() {\n    return this.props.onCreateContext(...arguments);\n  }\n  onInitialize() {\n    return this.props.onInitialize(...arguments);\n  }\n  onRender() {\n    return this.props.onRender(...arguments);\n  }\n  onFinalize() {\n    return this.props.onFinalize(...arguments);\n  }\n  getHTMLControlValue(id) {\n    let defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    const element = document.getElementById(id);\n    return element ? Number(element.value) : defaultValue;\n  }\n  setViewParameters() {\n    log.removed('AnimationLoop.setViewParameters', 'AnimationLoop.setProps')();\n    return this;\n  }\n  _startLoop() {\n    const renderFrame = () => {\n      if (!this._running) {\n        return;\n      }\n      this.redraw();\n      this._animationFrameId = this._requestAnimationFrame(renderFrame);\n    };\n    this._cancelAnimationFrame(this._animationFrameId);\n    this._animationFrameId = this._requestAnimationFrame(renderFrame);\n  }\n  _getPageLoadPromise() {\n    if (!this._pageLoadPromise) {\n      this._pageLoadPromise = isPage ? new Promise((resolve, reject) => {\n        if (isPage && document.readyState === 'complete') {\n          resolve(document);\n          return;\n        }\n        window.addEventListener('load', () => {\n          resolve(document);\n        });\n      }) : Promise.resolve({});\n    }\n    return this._pageLoadPromise;\n  }\n  _setDisplay(display) {\n    if (this.display) {\n      this.display.delete();\n      this.display.animationLoop = null;\n    }\n    if (display) {\n      display.animationLoop = this;\n    }\n    this.display = display;\n  }\n  _cancelAnimationFrame(animationFrameId) {\n    if (this.display && this.display.cancelAnimationFrame) {\n      return this.display.cancelAnimationFrame(animationFrameId);\n    }\n    return cancelAnimationFrame(animationFrameId);\n  }\n  _requestAnimationFrame(renderFrameCallback) {\n    if (this._running) {\n      if (this.display && this.display.requestAnimationFrame) {\n        return this.display.requestAnimationFrame(renderFrameCallback);\n      }\n      return requestAnimationFrame(renderFrameCallback);\n    }\n    return undefined;\n  }\n  _renderFrame() {\n    if (this.display) {\n      this.display._renderFrame(...arguments);\n      return;\n    }\n    this.onRender(...arguments);\n  }\n  _clearNeedsRedraw() {\n    this.needsRedraw = null;\n  }\n  _setupFrame() {\n    this._resizeCanvasDrawingBuffer();\n    this._resizeViewport();\n    this._resizeFramebuffer();\n  }\n  _initializeCallbackData() {\n    this.animationProps = {\n      gl: this.gl,\n      stop: this.stop,\n      canvas: this.gl.canvas,\n      framebuffer: this.framebuffer,\n      useDevicePixels: this.useDevicePixels,\n      needsRedraw: null,\n      startTime: Date.now(),\n      engineTime: 0,\n      tick: 0,\n      tock: 0,\n      time: 0,\n      _timeline: this.timeline,\n      _loop: this,\n      _animationLoop: this,\n      _mousePosition: null\n    };\n  }\n  _updateCallbackData() {\n    const {\n      width,\n      height,\n      aspect\n    } = this._getSizeAndAspect();\n    if (width !== this.animationProps.width || height !== this.animationProps.height) {\n      this.setNeedsRedraw('drawing buffer resized');\n    }\n    if (aspect !== this.animationProps.aspect) {\n      this.setNeedsRedraw('drawing buffer aspect changed');\n    }\n    this.animationProps.width = width;\n    this.animationProps.height = height;\n    this.animationProps.aspect = aspect;\n    this.animationProps.needsRedraw = this.needsRedraw;\n    this.animationProps.engineTime = Date.now() - this.animationProps.startTime;\n    if (this.timeline) {\n      this.timeline.update(this.animationProps.engineTime);\n    }\n    this.animationProps.tick = Math.floor(this.animationProps.time / 1000 * 60);\n    this.animationProps.tock++;\n    this.animationProps.time = this.timeline ? this.timeline.getTime() : this.animationProps.engineTime;\n    this.animationProps._offScreen = this.offScreen;\n  }\n  _finalizeCallbackData() {\n    this.onFinalize(this.animationProps);\n  }\n  _addCallbackData(appContext) {\n    if (typeof appContext === 'object' && appContext !== null) {\n      this.animationProps = Object.assign({}, this.animationProps, appContext);\n    }\n  }\n  _createWebGLContext(opts) {\n    this.offScreen = opts.canvas && typeof OffscreenCanvas !== 'undefined' && opts.canvas instanceof OffscreenCanvas;\n    opts = Object.assign({}, opts, this.props.glOptions);\n    this.gl = this.props.gl ? instrumentGLContext(this.props.gl, opts) : this.onCreateContext(opts);\n    if (!isWebGL(this.gl)) {\n      throw new Error('AnimationLoop.onCreateContext - illegal context returned');\n    }\n    resetParameters(this.gl);\n    this._createInfoDiv();\n  }\n  _createInfoDiv() {\n    if (this.gl.canvas && this.props.onAddHTML) {\n      const wrapperDiv = document.createElement('div');\n      document.body.appendChild(wrapperDiv);\n      wrapperDiv.style.position = 'relative';\n      const div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '10px';\n      div.style.bottom = '10px';\n      div.style.width = '300px';\n      div.style.background = 'white';\n      wrapperDiv.appendChild(this.gl.canvas);\n      wrapperDiv.appendChild(div);\n      const html = this.props.onAddHTML(div);\n      if (html) {\n        div.innerHTML = html;\n      }\n    }\n  }\n  _getSizeAndAspect() {\n    const width = this.gl.drawingBufferWidth;\n    const height = this.gl.drawingBufferHeight;\n    let aspect = 1;\n    const {\n      canvas\n    } = this.gl;\n    if (canvas && canvas.clientHeight) {\n      aspect = canvas.clientWidth / canvas.clientHeight;\n    } else if (width > 0 && height > 0) {\n      aspect = width / height;\n    }\n    return {\n      width,\n      height,\n      aspect\n    };\n  }\n  _resizeViewport() {\n    if (this.autoResizeViewport) {\n      this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\n    }\n  }\n  _resizeCanvasDrawingBuffer() {\n    if (this.autoResizeDrawingBuffer) {\n      resizeGLContext(this.gl, {\n        useDevicePixels: this.useDevicePixels\n      });\n    }\n  }\n  _createFramebuffer() {\n    if (this.props.createFramebuffer) {\n      this.framebuffer = new Framebuffer(this.gl);\n    }\n  }\n  _resizeFramebuffer() {\n    if (this.framebuffer) {\n      this.framebuffer.resize({\n        width: this.gl.drawingBufferWidth,\n        height: this.gl.drawingBufferHeight\n      });\n    }\n  }\n  _beginTimers() {\n    this.frameRate.timeEnd();\n    this.frameRate.timeStart();\n    if (this._gpuTimeQuery && this._gpuTimeQuery.isResultAvailable() && !this._gpuTimeQuery.isTimerDisjoint()) {\n      this.stats.get('GPU Time').addTime(this._gpuTimeQuery.getTimerMilliseconds());\n    }\n    if (this._gpuTimeQuery) {\n      this._gpuTimeQuery.beginTimeElapsedQuery();\n    }\n    this.cpuTime.timeStart();\n  }\n  _endTimers() {\n    this.cpuTime.timeEnd();\n    if (this._gpuTimeQuery) {\n      this._gpuTimeQuery.end();\n    }\n  }\n  _startEventHandling() {\n    const {\n      canvas\n    } = this.gl;\n    if (canvas) {\n      canvas.addEventListener('mousemove', this._onMousemove);\n      canvas.addEventListener('mouseleave', this._onMouseleave);\n    }\n  }\n  _onMousemove(e) {\n    this.animationProps._mousePosition = [e.offsetX, e.offsetY];\n  }\n  _onMouseleave(e) {\n    this.animationProps._mousePosition = null;\n  }\n}","map":{"version":3,"names":["isWebGL","createGLContext","instrumentGLContext","resizeGLContext","resetParameters","requestAnimationFrame","cancelAnimationFrame","Query","lumaStats","Framebuffer","log","assert","isBrowser","isPage","document","statIdCounter","AnimationLoop","constructor","props","arguments","length","undefined","onCreateContext","opts","onAddHTML","onInitialize","onRender","onFinalize","onError","gl","glOptions","debug","createFramebuffer","autoResizeViewport","autoResizeDrawingBuffer","stats","get","concat","useDevicePixels","deprecated","useDevicePixelRatio","needsRedraw","timeline","cpuTime","gpuTime","frameRate","_initialized","_running","_animationFrameId","_nextFramePromise","_resolveNextFrame","_cpuStartTime","setProps","start","bind","stop","_pageLoadPromise","_onMousemove","_onMouseleave","delete","_setDisplay","setNeedsRedraw","reason","startPromise","_getPageLoadPromise","then","_createWebGLContext","_createFramebuffer","_startEventHandling","_initializeCallbackData","_updateCallbackData","_resizeCanvasDrawingBuffer","_resizeViewport","_gpuTimeQuery","isSupported","animationProps","appContext","_addCallbackData","_startLoop","catch","redraw","isContextLost","_beginTimers","_setupFrame","_renderFrame","_clearNeedsRedraw","offScreen","commit","_endTimers","_finalizeCallbackData","_cancelAnimationFrame","attachTimeline","detachTimeline","waitForRender","Promise","resolve","toDataURL","canvas","getHTMLControlValue","id","defaultValue","element","getElementById","Number","value","setViewParameters","removed","renderFrame","_requestAnimationFrame","reject","readyState","window","addEventListener","display","animationLoop","animationFrameId","renderFrameCallback","_resizeFramebuffer","framebuffer","startTime","Date","now","engineTime","tick","tock","time","_timeline","_loop","_animationLoop","_mousePosition","width","height","aspect","_getSizeAndAspect","update","Math","floor","getTime","_offScreen","Object","assign","OffscreenCanvas","Error","_createInfoDiv","wrapperDiv","createElement","body","appendChild","style","position","div","left","bottom","background","html","innerHTML","drawingBufferWidth","drawingBufferHeight","clientHeight","clientWidth","viewport","resize","timeEnd","timeStart","isResultAvailable","isTimerDisjoint","addTime","getTimerMilliseconds","beginTimeElapsedQuery","end","e","offsetX","offsetY"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@luma.gl/engine/src/lib/animation-loop.js"],"sourcesContent":["import {\n  isWebGL,\n  createGLContext,\n  instrumentGLContext,\n  resizeGLContext,\n  resetParameters\n} from '@luma.gl/gltools';\n\nimport {\n  requestAnimationFrame,\n  cancelAnimationFrame,\n  Query,\n  lumaStats,\n  // TODO - remove dependency on framebuffer (bundle size impact)\n  Framebuffer,\n  log,\n  assert\n} from '@luma.gl/webgl';\n\nimport {isBrowser} from '@probe.gl/env';\n\nconst isPage = isBrowser() && typeof document !== 'undefined';\n\nlet statIdCounter = 0;\n\nexport default class AnimationLoop {\n  /*\n   * @param {HTMLCanvasElement} canvas - if provided, width and height will be passed to context\n   */\n  constructor(props = {}) {\n    const {\n      onCreateContext = opts => createGLContext(opts),\n      onAddHTML = null,\n      onInitialize = () => {},\n      onRender = () => {},\n      onFinalize = () => {},\n      onError,\n\n      gl = null,\n      glOptions = {},\n      debug = false,\n\n      createFramebuffer = false,\n\n      // view parameters\n      autoResizeViewport = true,\n      autoResizeDrawingBuffer = true,\n      stats = lumaStats.get(`animation-loop-${statIdCounter++}`)\n    } = props;\n\n    let {useDevicePixels = true} = props;\n\n    if ('useDevicePixelRatio' in props) {\n      log.deprecated('useDevicePixelRatio', 'useDevicePixels')();\n      // @ts-ignore\n      useDevicePixels = props.useDevicePixelRatio;\n    }\n\n    this.props = {\n      onCreateContext,\n      onAddHTML,\n      onInitialize,\n      onRender,\n      onFinalize,\n      onError,\n\n      gl,\n      glOptions,\n      debug,\n      createFramebuffer\n    };\n\n    // state\n    this.gl = gl;\n    this.needsRedraw = null;\n    this.timeline = null;\n    this.stats = stats;\n    this.cpuTime = this.stats.get('CPU Time');\n    this.gpuTime = this.stats.get('GPU Time');\n    this.frameRate = this.stats.get('Frame Rate');\n\n    this._initialized = false;\n    this._running = false;\n    this._animationFrameId = null;\n    this._nextFramePromise = null;\n    this._resolveNextFrame = null;\n    this._cpuStartTime = 0;\n\n    this.setProps({\n      autoResizeViewport,\n      autoResizeDrawingBuffer,\n      useDevicePixels\n    });\n\n    // Bind methods\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n\n    this._pageLoadPromise = null;\n\n    this._onMousemove = this._onMousemove.bind(this);\n    this._onMouseleave = this._onMouseleave.bind(this);\n  }\n\n  delete() {\n    this.stop();\n    this._setDisplay(null);\n  }\n\n  setNeedsRedraw(reason) {\n    assert(typeof reason === 'string');\n    this.needsRedraw = this.needsRedraw || reason;\n    return this;\n  }\n\n  setProps(props) {\n    if ('autoResizeViewport' in props) {\n      this.autoResizeViewport = props.autoResizeViewport;\n    }\n    if ('autoResizeDrawingBuffer' in props) {\n      this.autoResizeDrawingBuffer = props.autoResizeDrawingBuffer;\n    }\n    if ('useDevicePixels' in props) {\n      this.useDevicePixels = props.useDevicePixels;\n    }\n    return this;\n  }\n\n  // Starts a render loop if not already running\n  // @param {Object} context - contains frame specific info (E.g. tick, width, height, etc)\n  start(opts = {}) {\n    if (this._running) {\n      return this;\n    }\n    this._running = true;\n    // console.debug(`Starting ${this.constructor.name}`);\n    // Wait for start promise before rendering frame\n    const startPromise = this._getPageLoadPromise()\n      .then(() => {\n        if (!this._running || this._initialized) {\n          return null;\n        }\n\n        // Create the WebGL context\n        this._createWebGLContext(opts);\n        this._createFramebuffer();\n        this._startEventHandling();\n\n        // Initialize the callback data\n        this._initializeCallbackData();\n        this._updateCallbackData();\n\n        // Default viewport setup, in case onInitialize wants to render\n        this._resizeCanvasDrawingBuffer();\n        this._resizeViewport();\n\n        this._gpuTimeQuery = Query.isSupported(this.gl, ['timers']) ? new Query(this.gl) : null;\n\n        this._initialized = true;\n\n        // Note: onIntialize can return a promise (in case it needs to load resources)\n        return this.onInitialize(this.animationProps);\n      })\n      .then(appContext => {\n        if (this._running) {\n          this._addCallbackData(appContext || {});\n          if (appContext !== false) {\n            this._startLoop();\n          }\n        }\n      });\n\n    if (this.props.onError) {\n      startPromise.catch(this.props.onError);\n    }\n\n    return this;\n  }\n\n  // Redraw now\n  redraw() {\n    if (this.isContextLost()) {\n      return this;\n    }\n\n    this._beginTimers();\n\n    this._setupFrame();\n    this._updateCallbackData();\n\n    this._renderFrame(this.animationProps);\n\n    // clear needsRedraw flag\n    this._clearNeedsRedraw();\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/commit\n    // Chrome's offscreen canvas does not require gl.commit\n    if (this.offScreen && this.gl.commit) {\n      this.gl.commit();\n    }\n\n    if (this._resolveNextFrame) {\n      this._resolveNextFrame(this);\n      this._nextFramePromise = null;\n      this._resolveNextFrame = null;\n    }\n\n    this._endTimers();\n\n    return this;\n  }\n\n  // Stops a render loop if already running, finalizing\n  stop() {\n    // console.debug(`Stopping ${this.constructor.name}`);\n    if (this._running) {\n      this._finalizeCallbackData();\n      this._cancelAnimationFrame(this._animationFrameId);\n      this._nextFramePromise = null;\n      this._resolveNextFrame = null;\n      this._animationFrameId = null;\n      this._running = false;\n    }\n    return this;\n  }\n\n  attachTimeline(timeline) {\n    this.timeline = timeline;\n\n    return this.timeline;\n  }\n\n  detachTimeline() {\n    this.timeline = null;\n  }\n\n  waitForRender() {\n    this.setNeedsRedraw('waitForRender');\n\n    if (!this._nextFramePromise) {\n      this._nextFramePromise = new Promise(resolve => {\n        this._resolveNextFrame = resolve;\n      });\n    }\n    return this._nextFramePromise;\n  }\n\n  async toDataURL() {\n    this.setNeedsRedraw('toDataURL');\n\n    await this.waitForRender();\n\n    return this.gl.canvas.toDataURL();\n  }\n\n  isContextLost() {\n    return this.gl.isContextLost();\n  }\n\n  onCreateContext(...args) {\n    return this.props.onCreateContext(...args);\n  }\n\n  onInitialize(...args) {\n    return this.props.onInitialize(...args);\n  }\n\n  onRender(...args) {\n    return this.props.onRender(...args);\n  }\n\n  onFinalize(...args) {\n    return this.props.onFinalize(...args);\n  }\n\n  // DEPRECATED/REMOVED METHODS\n\n  getHTMLControlValue(id, defaultValue = 1) {\n    const element = document.getElementById(id);\n    // @ts-ignore Not all html elements have value\n    return element ? Number(element.value) : defaultValue;\n  }\n\n  // Update parameters\n  setViewParameters() {\n    log.removed('AnimationLoop.setViewParameters', 'AnimationLoop.setProps')();\n    return this;\n  }\n\n  // PRIVATE METHODS\n\n  _startLoop() {\n    const renderFrame = () => {\n      if (!this._running) {\n        return;\n      }\n      this.redraw();\n      this._animationFrameId = this._requestAnimationFrame(renderFrame);\n    };\n\n    // cancel any pending renders to ensure only one loop can ever run\n    this._cancelAnimationFrame(this._animationFrameId);\n    this._animationFrameId = this._requestAnimationFrame(renderFrame);\n  }\n\n  // PRIVATE METHODS\n\n  _getPageLoadPromise() {\n    if (!this._pageLoadPromise) {\n      this._pageLoadPromise = isPage\n        ? new Promise((resolve, reject) => {\n            if (isPage && document.readyState === 'complete') {\n              resolve(document);\n              return;\n            }\n            window.addEventListener('load', () => {\n              resolve(document);\n            });\n          })\n        : Promise.resolve({});\n    }\n    return this._pageLoadPromise;\n  }\n\n  _setDisplay(display) {\n    if (this.display) {\n      this.display.delete();\n      this.display.animationLoop = null;\n    }\n\n    // store animation loop on the display\n    if (display) {\n      display.animationLoop = this;\n    }\n\n    this.display = display;\n  }\n\n  _cancelAnimationFrame(animationFrameId) {\n    // E.g. VR display has a separate animation frame to sync with headset\n    if (this.display && this.display.cancelAnimationFrame) {\n      return this.display.cancelAnimationFrame(animationFrameId);\n    }\n\n    return cancelAnimationFrame(animationFrameId);\n  }\n\n  _requestAnimationFrame(renderFrameCallback) {\n    if (this._running) {\n      // E.g. VR display has a separate animation frame to sync with headset\n      if (this.display && this.display.requestAnimationFrame) {\n        return this.display.requestAnimationFrame(renderFrameCallback);\n      }\n\n      return requestAnimationFrame(renderFrameCallback);\n    }\n    return undefined;\n  }\n\n  // Called on each frame, can be overridden to call onRender multiple times\n  // to support e.g. stereoscopic rendering\n  _renderFrame(...args) {\n    // Allow e.g. VR display to render multiple frames.\n    if (this.display) {\n      this.display._renderFrame(...args);\n      return;\n    }\n\n    // call callback\n    this.onRender(...args);\n    // end callback\n  }\n\n  _clearNeedsRedraw() {\n    this.needsRedraw = null;\n  }\n\n  _setupFrame() {\n    this._resizeCanvasDrawingBuffer();\n    this._resizeViewport();\n    this._resizeFramebuffer();\n  }\n\n  // Initialize the  object that will be passed to app callbacks\n  _initializeCallbackData() {\n    this.animationProps = {\n      gl: this.gl,\n\n      stop: this.stop,\n      canvas: this.gl.canvas,\n      framebuffer: this.framebuffer,\n\n      // Initial values\n      useDevicePixels: this.useDevicePixels,\n      needsRedraw: null,\n\n      // Animation props\n      startTime: Date.now(),\n      engineTime: 0,\n      tick: 0,\n      tock: 0,\n\n      // Timeline time for back compatibility\n      time: 0,\n\n      // Experimental\n      _timeline: this.timeline,\n      _loop: this,\n      _animationLoop: this,\n      _mousePosition: null // Event props\n    };\n  }\n\n  // Update the context object that will be passed to app callbacks\n  _updateCallbackData() {\n    const {width, height, aspect} = this._getSizeAndAspect();\n    if (width !== this.animationProps.width || height !== this.animationProps.height) {\n      this.setNeedsRedraw('drawing buffer resized');\n    }\n    if (aspect !== this.animationProps.aspect) {\n      this.setNeedsRedraw('drawing buffer aspect changed');\n    }\n\n    this.animationProps.width = width;\n    this.animationProps.height = height;\n    this.animationProps.aspect = aspect;\n\n    this.animationProps.needsRedraw = this.needsRedraw;\n\n    // Update time properties\n    this.animationProps.engineTime = Date.now() - this.animationProps.startTime;\n\n    if (this.timeline) {\n      this.timeline.update(this.animationProps.engineTime);\n    }\n\n    this.animationProps.tick = Math.floor((this.animationProps.time / 1000) * 60);\n    this.animationProps.tock++;\n\n    // For back compatibility\n    this.animationProps.time = this.timeline\n      ? this.timeline.getTime()\n      : this.animationProps.engineTime;\n\n    // experimental\n    this.animationProps._offScreen = this.offScreen;\n  }\n\n  _finalizeCallbackData() {\n    // call callback\n    this.onFinalize(this.animationProps);\n    // end callback\n  }\n\n  // Add application's data to the app context object\n  _addCallbackData(appContext) {\n    if (typeof appContext === 'object' && appContext !== null) {\n      this.animationProps = Object.assign({}, this.animationProps, appContext);\n    }\n  }\n\n  // Either uses supplied or existing context, or calls provided callback to create one\n  _createWebGLContext(opts) {\n    this.offScreen =\n      opts.canvas &&\n      typeof OffscreenCanvas !== 'undefined' &&\n      opts.canvas instanceof OffscreenCanvas;\n\n    // Create the WebGL context if necessary\n    opts = Object.assign({}, opts, this.props.glOptions);\n    this.gl = this.props.gl ? instrumentGLContext(this.props.gl, opts) : this.onCreateContext(opts);\n\n    if (!isWebGL(this.gl)) {\n      throw new Error('AnimationLoop.onCreateContext - illegal context returned');\n    }\n\n    // Reset the WebGL context.\n    resetParameters(this.gl);\n\n    this._createInfoDiv();\n  }\n\n  _createInfoDiv() {\n    if (this.gl.canvas && this.props.onAddHTML) {\n      const wrapperDiv = document.createElement('div');\n      document.body.appendChild(wrapperDiv);\n      wrapperDiv.style.position = 'relative';\n      const div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '10px';\n      div.style.bottom = '10px';\n      div.style.width = '300px';\n      div.style.background = 'white';\n      wrapperDiv.appendChild(this.gl.canvas);\n      wrapperDiv.appendChild(div);\n      const html = this.props.onAddHTML(div);\n      if (html) {\n        div.innerHTML = html;\n      }\n    }\n  }\n\n  _getSizeAndAspect() {\n    // https://webglfundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html\n    const width = this.gl.drawingBufferWidth;\n    const height = this.gl.drawingBufferHeight;\n\n    // https://webglfundamentals.org/webgl/lessons/webgl-anti-patterns.html\n    let aspect = 1;\n    const {canvas} = this.gl;\n\n    if (canvas && canvas.clientHeight) {\n      aspect = canvas.clientWidth / canvas.clientHeight;\n    } else if (width > 0 && height > 0) {\n      aspect = width / height;\n    }\n\n    return {width, height, aspect};\n  }\n\n  // Default viewport setup\n  _resizeViewport() {\n    if (this.autoResizeViewport) {\n      this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\n    }\n  }\n\n  // Resize the render buffer of the canvas to match canvas client size\n  // Optionally multiplying with devicePixel ratio\n  _resizeCanvasDrawingBuffer() {\n    if (this.autoResizeDrawingBuffer) {\n      resizeGLContext(this.gl, {useDevicePixels: this.useDevicePixels});\n    }\n  }\n\n  // TBD - deprecated?\n  _createFramebuffer() {\n    // Setup default framebuffer\n    if (this.props.createFramebuffer) {\n      this.framebuffer = new Framebuffer(this.gl);\n    }\n  }\n\n  _resizeFramebuffer() {\n    if (this.framebuffer) {\n      this.framebuffer.resize({\n        width: this.gl.drawingBufferWidth,\n        height: this.gl.drawingBufferHeight\n      });\n    }\n  }\n\n  _beginTimers() {\n    this.frameRate.timeEnd();\n    this.frameRate.timeStart();\n\n    // Check if timer for last frame has completed.\n    // GPU timer results are never available in the same\n    // frame they are captured.\n    if (\n      this._gpuTimeQuery &&\n      this._gpuTimeQuery.isResultAvailable() &&\n      !this._gpuTimeQuery.isTimerDisjoint()\n    ) {\n      this.stats.get('GPU Time').addTime(this._gpuTimeQuery.getTimerMilliseconds());\n    }\n\n    if (this._gpuTimeQuery) {\n      // GPU time query start\n      this._gpuTimeQuery.beginTimeElapsedQuery();\n    }\n\n    this.cpuTime.timeStart();\n  }\n\n  _endTimers() {\n    this.cpuTime.timeEnd();\n\n    if (this._gpuTimeQuery) {\n      // GPU time query end. Results will be available on next frame.\n      this._gpuTimeQuery.end();\n    }\n  }\n\n  // Event handling\n\n  _startEventHandling() {\n    const {canvas} = this.gl;\n    if (canvas) {\n      canvas.addEventListener('mousemove', this._onMousemove);\n      canvas.addEventListener('mouseleave', this._onMouseleave);\n    }\n  }\n\n  _onMousemove(e) {\n    this.animationProps._mousePosition = [e.offsetX, e.offsetY];\n  }\n  _onMouseleave(e) {\n    this.animationProps._mousePosition = null;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}