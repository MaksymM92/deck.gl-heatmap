{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Layer, project32, picking, UNIT } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/core';\nimport vs from './text-background-layer-vertex.glsl';\nimport fs from './text-background-layer-fragment.glsl';\nconst defaultProps = {\n  billboard: true,\n  sizeScale: 1,\n  sizeUnits: 'pixels',\n  sizeMinPixels: 0,\n  sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n  padding: {\n    type: 'array',\n    value: [0, 0, 0, 0]\n  },\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  getSize: {\n    type: 'accessor',\n    value: 1\n  },\n  getAngle: {\n    type: 'accessor',\n    value: 0\n  },\n  getPixelOffset: {\n    type: 'accessor',\n    value: [0, 0]\n  },\n  getBoundingRect: {\n    type: 'accessor',\n    value: [0, 0, 0, 0]\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: [0, 0, 0, 255]\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: [0, 0, 0, 255]\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  }\n};\nexport default class TextBackgroundLayer extends Layer {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", void 0);\n  }\n  getShaders() {\n    return super.getShaders({\n      vs,\n      fs,\n      modules: [project32, picking]\n    });\n  }\n  initializeState() {\n    this.getAttributeManager().addInstanced({\n      instancePositions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceSizes: {\n        size: 1,\n        transition: true,\n        accessor: 'getSize',\n        defaultValue: 1\n      },\n      instanceAngles: {\n        size: 1,\n        transition: true,\n        accessor: 'getAngle'\n      },\n      instanceRects: {\n        size: 4,\n        accessor: 'getBoundingRect'\n      },\n      instancePixelOffsets: {\n        size: 2,\n        transition: true,\n        accessor: 'getPixelOffset'\n      },\n      instanceFillColors: {\n        size: 4,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getFillColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineColors: {\n        size: 4,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getLineColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getLineWidth',\n        defaultValue: 1\n      }\n    });\n  }\n  updateState(params) {\n    super.updateState(params);\n    const {\n      changeFlags\n    } = params;\n    if (changeFlags.extensionsChanged) {\n      var _this$state$model;\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n  draw(_ref) {\n    let {\n      uniforms\n    } = _ref;\n    const {\n      billboard,\n      sizeScale,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      getLineWidth\n    } = this.props;\n    let {\n      padding\n    } = this.props;\n    if (padding.length < 4) {\n      padding = [padding[0], padding[1], padding[0], padding[1]];\n    }\n    this.state.model.setUniforms(uniforms).setUniforms({\n      billboard,\n      stroked: Boolean(getLineWidth),\n      padding,\n      sizeUnits: UNIT[sizeUnits],\n      sizeScale,\n      sizeMinPixels,\n      sizeMaxPixels\n    }).draw();\n  }\n  _getModel(gl) {\n    const positions = [0, 0, 1, 0, 1, 1, 0, 1];\n    return new Model(gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: 6,\n        vertexCount: 4,\n        attributes: {\n          positions: {\n            size: 2,\n            value: new Float32Array(positions)\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n}\n_defineProperty(TextBackgroundLayer, \"defaultProps\", defaultProps);\n_defineProperty(TextBackgroundLayer, \"layerName\", 'TextBackgroundLayer');","map":{"version":3,"names":["_defineProperty","Layer","project32","picking","UNIT","Model","Geometry","vs","fs","defaultProps","billboard","sizeScale","sizeUnits","sizeMinPixels","sizeMaxPixels","Number","MAX_SAFE_INTEGER","padding","type","value","getPosition","x","position","getSize","getAngle","getPixelOffset","getBoundingRect","getFillColor","getLineColor","getLineWidth","TextBackgroundLayer","constructor","arguments","getShaders","modules","initializeState","getAttributeManager","addInstanced","instancePositions","size","fp64","use64bitPositions","transition","accessor","instanceSizes","defaultValue","instanceAngles","instanceRects","instancePixelOffsets","instanceFillColors","normalized","instanceLineColors","instanceLineWidths","updateState","params","changeFlags","extensionsChanged","_this$state$model","gl","context","state","model","delete","_getModel","invalidateAll","draw","_ref","uniforms","props","length","setUniforms","stroked","Boolean","positions","id","geometry","drawMode","vertexCount","attributes","Float32Array","isInstanced"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Layer, project32, picking, UNIT } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/core';\nimport vs from './text-background-layer-vertex.glsl';\nimport fs from './text-background-layer-fragment.glsl';\nconst defaultProps = {\n  billboard: true,\n  sizeScale: 1,\n  sizeUnits: 'pixels',\n  sizeMinPixels: 0,\n  sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n  padding: {\n    type: 'array',\n    value: [0, 0, 0, 0]\n  },\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  getSize: {\n    type: 'accessor',\n    value: 1\n  },\n  getAngle: {\n    type: 'accessor',\n    value: 0\n  },\n  getPixelOffset: {\n    type: 'accessor',\n    value: [0, 0]\n  },\n  getBoundingRect: {\n    type: 'accessor',\n    value: [0, 0, 0, 0]\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: [0, 0, 0, 255]\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: [0, 0, 0, 255]\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  }\n};\nexport default class TextBackgroundLayer extends Layer {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", void 0);\n  }\n\n  getShaders() {\n    return super.getShaders({\n      vs,\n      fs,\n      modules: [project32, picking]\n    });\n  }\n\n  initializeState() {\n    this.getAttributeManager().addInstanced({\n      instancePositions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceSizes: {\n        size: 1,\n        transition: true,\n        accessor: 'getSize',\n        defaultValue: 1\n      },\n      instanceAngles: {\n        size: 1,\n        transition: true,\n        accessor: 'getAngle'\n      },\n      instanceRects: {\n        size: 4,\n        accessor: 'getBoundingRect'\n      },\n      instancePixelOffsets: {\n        size: 2,\n        transition: true,\n        accessor: 'getPixelOffset'\n      },\n      instanceFillColors: {\n        size: 4,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getFillColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineColors: {\n        size: 4,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getLineColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getLineWidth',\n        defaultValue: 1\n      }\n    });\n  }\n\n  updateState(params) {\n    super.updateState(params);\n    const {\n      changeFlags\n    } = params;\n\n    if (changeFlags.extensionsChanged) {\n      var _this$state$model;\n\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      billboard,\n      sizeScale,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      getLineWidth\n    } = this.props;\n    let {\n      padding\n    } = this.props;\n\n    if (padding.length < 4) {\n      padding = [padding[0], padding[1], padding[0], padding[1]];\n    }\n\n    this.state.model.setUniforms(uniforms).setUniforms({\n      billboard,\n      stroked: Boolean(getLineWidth),\n      padding,\n      sizeUnits: UNIT[sizeUnits],\n      sizeScale,\n      sizeMinPixels,\n      sizeMaxPixels\n    }).draw();\n  }\n\n  _getModel(gl) {\n    const positions = [0, 0, 1, 0, 1, 1, 0, 1];\n    return new Model(gl, { ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: 6,\n        vertexCount: 4,\n        attributes: {\n          positions: {\n            size: 2,\n            value: new Float32Array(positions)\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n\n}\n\n_defineProperty(TextBackgroundLayer, \"defaultProps\", defaultProps);\n\n_defineProperty(TextBackgroundLayer, \"layerName\", 'TextBackgroundLayer');\n//# sourceMappingURL=text-background-layer.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}