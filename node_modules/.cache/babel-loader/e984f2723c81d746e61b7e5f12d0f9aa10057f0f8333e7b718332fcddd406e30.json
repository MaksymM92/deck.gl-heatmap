{"ast":null,"code":"import { log, COORDINATE_SYSTEM } from '@deck.gl/core';\nconst R_EARTH = 6378000;\nfunction toFinite(n) {\n  return Number.isFinite(n) ? n : 0;\n}\nexport function getBoundingBox(attributes, vertexCount) {\n  const positions = attributes.positions.value;\n  let yMin = Infinity;\n  let yMax = -Infinity;\n  let xMin = Infinity;\n  let xMax = -Infinity;\n  let y;\n  let x;\n  for (let i = 0; i < vertexCount; i++) {\n    x = positions[i * 3];\n    y = positions[i * 3 + 1];\n    yMin = y < yMin ? y : yMin;\n    yMax = y > yMax ? y : yMax;\n    xMin = x < xMin ? x : xMin;\n    xMax = x > xMax ? x : xMax;\n  }\n  const boundingBox = {\n    xMin: toFinite(xMin),\n    xMax: toFinite(xMax),\n    yMin: toFinite(yMin),\n    yMax: toFinite(yMax)\n  };\n  return boundingBox;\n}\nfunction getTranslation(boundingBox, gridOffset, coordinateSystem, viewport) {\n  const {\n    width,\n    height\n  } = viewport;\n  const worldOrigin = coordinateSystem === COORDINATE_SYSTEM.CARTESIAN ? [-width / 2, -height / 2] : [-180, -90];\n  log.assert(coordinateSystem === COORDINATE_SYSTEM.CARTESIAN || coordinateSystem === COORDINATE_SYSTEM.LNGLAT || coordinateSystem === COORDINATE_SYSTEM.DEFAULT);\n  const {\n    xMin,\n    yMin\n  } = boundingBox;\n  return [-1 * (alignToCell(xMin - worldOrigin[0], gridOffset.xOffset) + worldOrigin[0]), -1 * (alignToCell(yMin - worldOrigin[1], gridOffset.yOffset) + worldOrigin[1])];\n}\nexport function alignToCell(inValue, cellSize) {\n  const sign = inValue < 0 ? -1 : 1;\n  let value = sign < 0 ? Math.abs(inValue) + cellSize : Math.abs(inValue);\n  value = Math.floor(value / cellSize) * cellSize;\n  return value * sign;\n}\nexport function getGridOffset(boundingBox, cellSize) {\n  let convertToMeters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  if (!convertToMeters) {\n    return {\n      xOffset: cellSize,\n      yOffset: cellSize\n    };\n  }\n  const {\n    yMin,\n    yMax\n  } = boundingBox;\n  const centerLat = (yMin + yMax) / 2;\n  return calculateGridLatLonOffset(cellSize, centerLat);\n}\nexport function getGridParams(boundingBox, cellSize, viewport, coordinateSystem) {\n  const gridOffset = getGridOffset(boundingBox, cellSize, coordinateSystem !== COORDINATE_SYSTEM.CARTESIAN);\n  const translation = getTranslation(boundingBox, gridOffset, coordinateSystem, viewport);\n  const {\n    xMin,\n    yMin,\n    xMax,\n    yMax\n  } = boundingBox;\n  const width = xMax - xMin + gridOffset.xOffset;\n  const height = yMax - yMin + gridOffset.yOffset;\n  const numCol = Math.ceil(width / gridOffset.xOffset);\n  const numRow = Math.ceil(height / gridOffset.yOffset);\n  return {\n    gridOffset,\n    translation,\n    width,\n    height,\n    numCol,\n    numRow\n  };\n}\nfunction calculateGridLatLonOffset(cellSize, latitude) {\n  const yOffset = calculateLatOffset(cellSize);\n  const xOffset = calculateLonOffset(latitude, cellSize);\n  return {\n    yOffset,\n    xOffset\n  };\n}\nfunction calculateLatOffset(dy) {\n  return dy / R_EARTH * (180 / Math.PI);\n}\nfunction calculateLonOffset(lat, dx) {\n  return dx / R_EARTH * (180 / Math.PI) / Math.cos(lat * Math.PI / 180);\n}","map":{"version":3,"names":["log","COORDINATE_SYSTEM","R_EARTH","toFinite","n","Number","isFinite","getBoundingBox","attributes","vertexCount","positions","value","yMin","Infinity","yMax","xMin","xMax","y","x","i","boundingBox","getTranslation","gridOffset","coordinateSystem","viewport","width","height","worldOrigin","CARTESIAN","assert","LNGLAT","DEFAULT","alignToCell","xOffset","yOffset","inValue","cellSize","sign","Math","abs","floor","getGridOffset","convertToMeters","arguments","length","undefined","centerLat","calculateGridLatLonOffset","getGridParams","translation","numCol","ceil","numRow","latitude","calculateLatOffset","calculateLonOffset","dy","PI","lat","dx","cos"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@deck.gl/aggregation-layers/dist/esm/utils/grid-aggregation-utils.js"],"sourcesContent":["import { log, COORDINATE_SYSTEM } from '@deck.gl/core';\nconst R_EARTH = 6378000;\n\nfunction toFinite(n) {\n  return Number.isFinite(n) ? n : 0;\n}\n\nexport function getBoundingBox(attributes, vertexCount) {\n  const positions = attributes.positions.value;\n  let yMin = Infinity;\n  let yMax = -Infinity;\n  let xMin = Infinity;\n  let xMax = -Infinity;\n  let y;\n  let x;\n\n  for (let i = 0; i < vertexCount; i++) {\n    x = positions[i * 3];\n    y = positions[i * 3 + 1];\n    yMin = y < yMin ? y : yMin;\n    yMax = y > yMax ? y : yMax;\n    xMin = x < xMin ? x : xMin;\n    xMax = x > xMax ? x : xMax;\n  }\n\n  const boundingBox = {\n    xMin: toFinite(xMin),\n    xMax: toFinite(xMax),\n    yMin: toFinite(yMin),\n    yMax: toFinite(yMax)\n  };\n  return boundingBox;\n}\n\nfunction getTranslation(boundingBox, gridOffset, coordinateSystem, viewport) {\n  const {\n    width,\n    height\n  } = viewport;\n  const worldOrigin = coordinateSystem === COORDINATE_SYSTEM.CARTESIAN ? [-width / 2, -height / 2] : [-180, -90];\n  log.assert(coordinateSystem === COORDINATE_SYSTEM.CARTESIAN || coordinateSystem === COORDINATE_SYSTEM.LNGLAT || coordinateSystem === COORDINATE_SYSTEM.DEFAULT);\n  const {\n    xMin,\n    yMin\n  } = boundingBox;\n  return [-1 * (alignToCell(xMin - worldOrigin[0], gridOffset.xOffset) + worldOrigin[0]), -1 * (alignToCell(yMin - worldOrigin[1], gridOffset.yOffset) + worldOrigin[1])];\n}\n\nexport function alignToCell(inValue, cellSize) {\n  const sign = inValue < 0 ? -1 : 1;\n  let value = sign < 0 ? Math.abs(inValue) + cellSize : Math.abs(inValue);\n  value = Math.floor(value / cellSize) * cellSize;\n  return value * sign;\n}\nexport function getGridOffset(boundingBox, cellSize, convertToMeters = true) {\n  if (!convertToMeters) {\n    return {\n      xOffset: cellSize,\n      yOffset: cellSize\n    };\n  }\n\n  const {\n    yMin,\n    yMax\n  } = boundingBox;\n  const centerLat = (yMin + yMax) / 2;\n  return calculateGridLatLonOffset(cellSize, centerLat);\n}\nexport function getGridParams(boundingBox, cellSize, viewport, coordinateSystem) {\n  const gridOffset = getGridOffset(boundingBox, cellSize, coordinateSystem !== COORDINATE_SYSTEM.CARTESIAN);\n  const translation = getTranslation(boundingBox, gridOffset, coordinateSystem, viewport);\n  const {\n    xMin,\n    yMin,\n    xMax,\n    yMax\n  } = boundingBox;\n  const width = xMax - xMin + gridOffset.xOffset;\n  const height = yMax - yMin + gridOffset.yOffset;\n  const numCol = Math.ceil(width / gridOffset.xOffset);\n  const numRow = Math.ceil(height / gridOffset.yOffset);\n  return {\n    gridOffset,\n    translation,\n    width,\n    height,\n    numCol,\n    numRow\n  };\n}\n\nfunction calculateGridLatLonOffset(cellSize, latitude) {\n  const yOffset = calculateLatOffset(cellSize);\n  const xOffset = calculateLonOffset(latitude, cellSize);\n  return {\n    yOffset,\n    xOffset\n  };\n}\n\nfunction calculateLatOffset(dy) {\n  return dy / R_EARTH * (180 / Math.PI);\n}\n\nfunction calculateLonOffset(lat, dx) {\n  return dx / R_EARTH * (180 / Math.PI) / Math.cos(lat * Math.PI / 180);\n}\n//# sourceMappingURL=grid-aggregation-utils.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}