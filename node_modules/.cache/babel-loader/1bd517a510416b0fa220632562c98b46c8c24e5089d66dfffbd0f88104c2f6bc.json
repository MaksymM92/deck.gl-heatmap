{"ast":null,"code":"export function flatten(array) {\n  let filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => true;\n  if (!Array.isArray(array)) {\n    return filter(array) ? [array] : [];\n  }\n  return flattenArray(array, filter, []);\n}\nfunction flattenArray(array, filter, result) {\n  let index = -1;\n  while (++index < array.length) {\n    const value = array[index];\n    if (Array.isArray(value)) {\n      flattenArray(value, filter, result);\n    } else if (filter(value)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\nexport function fillArray(_ref) {\n  let {\n    target,\n    source,\n    start = 0,\n    count = 1\n  } = _ref;\n  const length = source.length;\n  const total = count * length;\n  let copied = 0;\n  for (let i = start; copied < length; copied++) {\n    target[i++] = source[copied];\n  }\n  while (copied < total) {\n    if (copied < total - copied) {\n      target.copyWithin(start + copied, start, start + copied);\n      copied *= 2;\n    } else {\n      target.copyWithin(start + copied, start, start + total - copied);\n      copied = total;\n    }\n  }\n  return target;\n}","map":{"version":3,"names":["flatten","array","filter","arguments","length","undefined","Array","isArray","flattenArray","result","index","value","push","fillArray","_ref","target","source","start","count","total","copied","i","copyWithin"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@deck.gl/core/src/utils/flatten.ts"],"sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\ntype NestedArray<T> = (T | NestedArray<T>)[];\n\n/**\n * Flattens a nested array into a single level array,\n * or a single value into an array with one value\n * @example flatten([[1, [2]], [3], 4]) => [1, 2, 3, 4]\n * @example flatten(1) => [1]\n * @param array The array to flatten.\n * @param filter= - Optional predicate called on each `value` to\n *   determine if it should be included (pushed onto) the resulting array.\n * @return Returns the new flattened array (new array or `result` if provided)\n */\nexport function flatten<T>(\n  array: T | NestedArray<T>,\n  filter: (element: T) => boolean = () => true\n): T[] {\n  // Wrap single object in array\n  if (!Array.isArray(array)) {\n    return filter(array) ? [array] : [];\n  }\n  // Deep flatten and filter the array\n  return flattenArray(array, filter, []);\n}\n\n/** Deep flattens an array. Helper to `flatten`, see its parameters */\nfunction flattenArray<T>(array: NestedArray<T>, filter: (element: T) => boolean, result: T[]): T[] {\n  let index = -1;\n  while (++index < array.length) {\n    const value = array[index];\n    if (Array.isArray(value)) {\n      flattenArray(value, filter, result);\n    } else if (filter(value)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/** Uses copyWithin to significantly speed up typed array value filling */\nexport function fillArray({target, source, start = 0, count = 1}) {\n  const length = source.length;\n  const total = count * length;\n  let copied = 0;\n  for (let i = start; copied < length; copied++) {\n    target[i++] = source[copied];\n  }\n\n  while (copied < total) {\n    // If we have copied less than half, copy everything we got\n    // else copy remaining in one operation\n    if (copied < total - copied) {\n      target.copyWithin(start + copied, start, start + copied);\n      copied *= 2;\n    } else {\n      target.copyWithin(start + copied, start, start + total - copied);\n      copied = total;\n    }\n  }\n\n  return target;\n}\n"],"mappings":"AAgCA,OAAO,SAASA,OAATA,CACLC,KADK,EAGA;EAAA,IADLC,MAA+B,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,MAAM,IAFnC;EAKL,IAAI,CAACG,KAAK,CAACC,OAAN,CAAcN,KAAd,CAAL,EAA2B;IACzB,OAAOC,MAAM,CAACD,KAAD,CAAN,GAAgB,CAACA,KAAD,CAAhB,GAA0B,EAAjC;EACD;EAED,OAAOO,YAAY,CAACP,KAAD,EAAQC,MAAR,EAAgB,EAAhB,CAAnB;AACD;AAGD,SAASM,YAATA,CAAyBP,KAAzB,EAAgDC,MAAhD,EAAiFO,MAAjF,EAAmG;EACjG,IAAIC,KAAK,GAAG,CAAC,CAAb;EACA,OAAO,EAAEA,KAAF,GAAUT,KAAK,CAACG,MAAvB,EAA+B;IAC7B,MAAMO,KAAK,GAAGV,KAAK,CAACS,KAAD,CAAnB;IACA,IAAIJ,KAAK,CAACC,OAAN,CAAcI,KAAd,CAAJ,EAA0B;MACxBH,YAAY,CAACG,KAAD,EAAQT,MAAR,EAAgBO,MAAhB,CAAZ;IACD,CAFD,MAEO,IAAIP,MAAM,CAACS,KAAD,CAAV,EAAmB;MACxBF,MAAM,CAACG,IAAP,CAAYD,KAAZ;IACD;EACF;EACD,OAAOF,MAAP;AACD;AAGD,OAAO,SAASI,SAATA,CAAAC,IAAA,EAA2D;EAAA,IAAxC;IAACC,MAAD;IAASC,MAAT;IAAiBC,KAAK,GAAG,CAAzB;IAA4BC,KAAK,GAAG;EAApC,CAAnB,GAAAJ,IAAA;EACL,MAAMV,MAAM,GAAGY,MAAM,CAACZ,MAAtB;EACA,MAAMe,KAAK,GAAGD,KAAK,GAAGd,MAAtB;EACA,IAAIgB,MAAM,GAAG,CAAb;EACA,KAAK,IAAIC,CAAC,GAAGJ,KAAb,EAAoBG,MAAM,GAAGhB,MAA7B,EAAqCgB,MAAM,EAA3C,EAA+C;IAC7CL,MAAM,CAACM,CAAC,EAAF,CAAN,GAAcL,MAAM,CAACI,MAAD,CAApB;EACD;EAED,OAAOA,MAAM,GAAGD,KAAhB,EAAuB;IAGrB,IAAIC,MAAM,GAAGD,KAAK,GAAGC,MAArB,EAA6B;MAC3BL,MAAM,CAACO,UAAP,CAAkBL,KAAK,GAAGG,MAA1B,EAAkCH,KAAlC,EAAyCA,KAAK,GAAGG,MAAjD;MACAA,MAAM,IAAI,CAAV;IACD,CAHD,MAGO;MACLL,MAAM,CAACO,UAAP,CAAkBL,KAAK,GAAGG,MAA1B,EAAkCH,KAAlC,EAAyCA,KAAK,GAAGE,KAAR,GAAgBC,MAAzD;MACAA,MAAM,GAAGD,KAAT;IACD;EACF;EAED,OAAOJ,MAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}