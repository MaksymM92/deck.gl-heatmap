{"ast":null,"code":"import deckLog from '../utils/log';\nimport { getLoggers } from './loggers';\nlet loggers = {};\nif (process.env.NODE_ENV !== 'production') {\n  loggers = getLoggers(deckLog);\n}\nexport function register(handlers) {\n  loggers = handlers;\n}\nexport default function debug(eventType, arg1, arg2, arg3) {\n  if (deckLog.level > 0 && loggers[eventType]) {\n    loggers[eventType].call(null, arg1, arg2, arg3);\n  }\n}","map":{"version":3,"names":["deckLog","getLoggers","loggers","process","env","NODE_ENV","register","handlers","debug","eventType","arg1","arg2","arg3","level","call"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@deck.gl/core/src/debug/index.ts"],"sourcesContent":["import deckLog from '../utils/log';\nimport {getLoggers} from './loggers';\n\n/* debug utility */\n\nlet loggers: Record<string, Function> = {};\n\n// Conditionally load default loggers in development mode\n// eslint-disable-next-line\nif (process.env.NODE_ENV !== 'production') {\n  loggers = getLoggers(deckLog);\n}\n\nexport function register(handlers: Record<string, Function>): void {\n  loggers = handlers;\n}\n\nexport default function debug(eventType: string, arg1?: any, arg2?: any, arg3?: any): void {\n  if (deckLog.level > 0 && loggers[eventType]) {\n    // Not using rest parameters to defeat perf hit from array construction\n    loggers[eventType].call(null, arg1, arg2, arg3);\n  }\n}\n"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,SAAQC,UAAR,QAAyB,WAAzB;AAIA,IAAIC,OAAiC,GAAG,EAAxC;AAIA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;EACzCH,OAAO,GAAGD,UAAU,CAACD,OAAD,CAApB;AACD;AAED,OAAO,SAASM,QAATA,CAAkBC,QAAlB,EAA4D;EACjEL,OAAO,GAAGK,QAAV;AACD;AAED,eAAe,SAASC,KAATA,CAAeC,SAAf,EAAkCC,IAAlC,EAA8CC,IAA9C,EAA0DC,IAA1D,EAA4E;EACzF,IAAIZ,OAAO,CAACa,KAAR,GAAgB,CAAhB,IAAqBX,OAAO,CAACO,SAAD,CAAhC,EAA6C;IAE3CP,OAAO,CAACO,SAAD,CAAP,CAAmBK,IAAnB,CAAwB,IAAxB,EAA8BJ,IAA9B,EAAoCC,IAApC,EAA0CC,IAA1C;EACD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}