{"ast":null,"code":"import { lights } from '../lights/lights';\nimport lightingShader from './phong-lighting.glsl';\nconst INITIAL_MODULE_OPTIONS = {};\nfunction getMaterialUniforms(material) {\n  const {\n    ambient = 0.35,\n    diffuse = 0.6,\n    shininess = 32,\n    specularColor = [30, 30, 30]\n  } = material;\n  return {\n    lighting_uAmbient: ambient,\n    lighting_uDiffuse: diffuse,\n    lighting_uShininess: shininess,\n    lighting_uSpecularColor: specularColor.map(x => x / 255)\n  };\n}\nfunction getUniforms() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_MODULE_OPTIONS;\n  if (!('material' in opts)) {\n    return {};\n  }\n  const {\n    material\n  } = opts;\n  if (!material) {\n    return {\n      lighting_uEnabled: false\n    };\n  }\n  return getMaterialUniforms(material);\n}\nexport const gouraudLighting = {\n  name: 'gouraud-lighting',\n  dependencies: [lights],\n  vs: lightingShader,\n  defines: {\n    LIGHTING_VERTEX: 1\n  },\n  getUniforms\n};\nexport const phongLighting = {\n  name: 'phong-lighting',\n  dependencies: [lights],\n  fs: lightingShader,\n  defines: {\n    LIGHTING_FRAGMENT: 1\n  },\n  getUniforms\n};","map":{"version":3,"names":["lights","lightingShader","INITIAL_MODULE_OPTIONS","getMaterialUniforms","material","ambient","diffuse","shininess","specularColor","lighting_uAmbient","lighting_uDiffuse","lighting_uShininess","lighting_uSpecularColor","map","x","getUniforms","opts","arguments","length","undefined","lighting_uEnabled","gouraudLighting","name","dependencies","vs","defines","LIGHTING_VERTEX","phongLighting","fs","LIGHTING_FRAGMENT"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@luma.gl/shadertools/src/modules/phong-lighting/phong-lighting.js"],"sourcesContent":["/** @typedef {import('../../types').ShaderModule} ShaderModule */\n\nimport {lights} from '../lights/lights';\nimport lightingShader from './phong-lighting.glsl';\n\nconst INITIAL_MODULE_OPTIONS = {};\n\nfunction getMaterialUniforms(material) {\n  const {ambient = 0.35, diffuse = 0.6, shininess = 32, specularColor = [30, 30, 30]} = material;\n\n  return {\n    lighting_uAmbient: ambient,\n    lighting_uDiffuse: diffuse,\n    lighting_uShininess: shininess,\n    lighting_uSpecularColor: specularColor.map(x => x / 255)\n  };\n}\n\nfunction getUniforms(opts = INITIAL_MODULE_OPTIONS) {\n  if (!('material' in opts)) {\n    return {};\n  }\n\n  const {material} = opts;\n\n  if (!material) {\n    return {lighting_uEnabled: false};\n  }\n\n  return getMaterialUniforms(material);\n}\n\n/** @type {ShaderModule} */\nexport const gouraudLighting = {\n  name: 'gouraud-lighting',\n  dependencies: [lights],\n  vs: lightingShader,\n  defines: {\n    LIGHTING_VERTEX: 1\n  },\n  getUniforms\n};\n\n/** @type {ShaderModule} */\nexport const phongLighting = {\n  name: 'phong-lighting',\n  dependencies: [lights],\n  fs: lightingShader,\n  defines: {\n    LIGHTING_FRAGMENT: 1\n  },\n  getUniforms\n};\n"],"mappings":"AAEA,SAAQA,MAAR,QAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,MAAMC,sBAAsB,GAAG,EAA/B;AAEA,SAASC,mBAATA,CAA6BC,QAA7B,EAAuC;EACrC,MAAM;IAACC,OAAO,GAAG,IAAX;IAAiBC,OAAO,GAAG,GAA3B;IAAgCC,SAAS,GAAG,EAA5C;IAAgDC,aAAa,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT;EAAhE,IAAgFJ,QAAtF;EAEA,OAAO;IACLK,iBAAiB,EAAEJ,OADd;IAELK,iBAAiB,EAAEJ,OAFd;IAGLK,mBAAmB,EAAEJ,SAHhB;IAILK,uBAAuB,EAAEJ,aAAa,CAACK,GAAd,CAAkBC,CAAC,IAAIA,CAAC,GAAG,GAA3B;EAJpB,CAAP;AAMD;AAED,SAASC,WAATA,CAAA,EAAoD;EAAA,IAA/BC,IAA+B,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAxBf,sBAAwB;EAClD,IAAI,EAAE,cAAcc,IAAhB,CAAJ,EAA2B;IACzB,OAAO,EAAP;EACD;EAED,MAAM;IAACZ;EAAD,IAAaY,IAAnB;EAEA,IAAI,CAACZ,QAAL,EAAe;IACb,OAAO;MAACgB,iBAAiB,EAAE;IAApB,CAAP;EACD;EAED,OAAOjB,mBAAmB,CAACC,QAAD,CAA1B;AACD;AAGD,OAAO,MAAMiB,eAAe,GAAG;EAC7BC,IAAI,EAAE,kBADuB;EAE7BC,YAAY,EAAE,CAACvB,MAAD,CAFe;EAG7BwB,EAAE,EAAEvB,cAHyB;EAI7BwB,OAAO,EAAE;IACPC,eAAe,EAAE;EADV,CAJoB;EAO7BX;AAP6B,CAAxB;AAWP,OAAO,MAAMY,aAAa,GAAG;EAC3BL,IAAI,EAAE,gBADqB;EAE3BC,YAAY,EAAE,CAACvB,MAAD,CAFa;EAG3B4B,EAAE,EAAE3B,cAHuB;EAI3BwB,OAAO,EAAE;IACPI,iBAAiB,EAAE;EADZ,CAJkB;EAO3Bd;AAP2B,CAAtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}