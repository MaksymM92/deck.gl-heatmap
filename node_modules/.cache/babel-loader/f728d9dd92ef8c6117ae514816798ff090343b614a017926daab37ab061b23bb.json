{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { clamp } from '@math.gl/core';\nimport Controller from './controller';\nimport { MapState } from './map-controller';\nimport { mod } from '../utils/math-utils';\nimport LinearInterpolator from '../transitions/linear-interpolator';\nclass GlobeState extends MapState {\n  applyConstraints(props) {\n    const {\n      maxZoom,\n      minZoom,\n      zoom\n    } = props;\n    props.zoom = clamp(zoom, minZoom, maxZoom);\n    const {\n      longitude,\n      latitude\n    } = props;\n    if (longitude < -180 || longitude > 180) {\n      props.longitude = mod(longitude + 180, 360) - 180;\n    }\n    props.latitude = clamp(latitude, -89, 89);\n    return props;\n  }\n}\nexport default class GlobeController extends Controller {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"ControllerState\", GlobeState);\n    _defineProperty(this, \"transition\", {\n      transitionDuration: 300,\n      transitionInterpolator: new LinearInterpolator(['longitude', 'latitude', 'zoom'])\n    });\n    _defineProperty(this, \"dragMode\", 'pan');\n  }\n  setProps(props) {\n    super.setProps(props);\n    this.dragRotate = false;\n    this.touchRotate = false;\n  }\n}","map":{"version":3,"names":["clamp","Controller","MapState","mod","LinearInterpolator","GlobeState","applyConstraints","props","maxZoom","minZoom","zoom","longitude","latitude","GlobeController","constructor","arguments","_defineProperty","transitionDuration","transitionInterpolator","setProps","dragRotate","touchRotate"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@deck.gl/core/src/controllers/globe-controller.ts"],"sourcesContent":["import {clamp} from '@math.gl/core';\nimport Controller, {ControllerProps} from './controller';\n\nimport {MapState, MapStateProps} from './map-controller';\nimport {mod} from '../utils/math-utils';\nimport LinearInterpolator from '../transitions/linear-interpolator';\n\nclass GlobeState extends MapState {\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  applyConstraints(props: Required<MapStateProps>): Required<MapStateProps> {\n    // Ensure zoom is within specified range\n    const {maxZoom, minZoom, zoom} = props;\n    props.zoom = clamp(zoom, minZoom, maxZoom);\n\n    const {longitude, latitude} = props;\n    if (longitude < -180 || longitude > 180) {\n      props.longitude = mod(longitude + 180, 360) - 180;\n    }\n    props.latitude = clamp(latitude, -89, 89);\n\n    return props;\n  }\n}\n\nexport default class GlobeController extends Controller<MapState> {\n  ControllerState = GlobeState;\n\n  transition = {\n    transitionDuration: 300,\n    transitionInterpolator: new LinearInterpolator(['longitude', 'latitude', 'zoom'])\n  };\n\n  dragMode: 'pan' | 'rotate' = 'pan';\n\n  setProps(props: ControllerProps) {\n    super.setProps(props);\n\n    // TODO - support pitching?\n    this.dragRotate = false;\n    this.touchRotate = false;\n  }\n}\n"],"mappings":";AAAA,SAAQA,KAAR,QAAoB,eAApB;AACA,OAAOC,UAAP,MAA0C,cAA1C;AAEA,SAAQC,QAAR,QAAsC,kBAAtC;AACA,SAAQC,GAAR,QAAkB,qBAAlB;AACA,OAAOC,kBAAP,MAA+B,oCAA/B;AAEA,MAAMC,UAAN,SAAyBH,QAAzB,CAAkC;EAEhCI,gBAAgBA,CAACC,KAAD,EAA0D;IAExE,MAAM;MAACC,OAAD;MAAUC,OAAV;MAAmBC;IAAnB,IAA2BH,KAAjC;IACAA,KAAK,CAACG,IAAN,GAAaV,KAAK,CAACU,IAAD,EAAOD,OAAP,EAAgBD,OAAhB,CAAlB;IAEA,MAAM;MAACG,SAAD;MAAYC;IAAZ,IAAwBL,KAA9B;IACA,IAAII,SAAS,GAAG,CAAC,GAAb,IAAoBA,SAAS,GAAG,GAApC,EAAyC;MACvCJ,KAAK,CAACI,SAAN,GAAkBR,GAAG,CAACQ,SAAS,GAAG,GAAb,EAAkB,GAAlB,CAAH,GAA4B,GAA9C;IACD;IACDJ,KAAK,CAACK,QAAN,GAAiBZ,KAAK,CAACY,QAAD,EAAW,CAAC,EAAZ,EAAgB,EAAhB,CAAtB;IAEA,OAAOL,KAAP;EACD;AAd+B;AAiBlC,eAAe,MAAMM,eAAN,SAA8BZ,UAA9B,CAAmD;EAAAa,YAAA;IAAA,SAAAC,SAAA;IAAAC,eAAA,0BAC9CX,UAD8C;IAAAW,eAAA,qBAGnD;MACXC,kBAAkB,EAAE,GADT;MAEXC,sBAAsB,EAAE,IAAId,kBAAJ,CAAuB,CAAC,WAAD,EAAc,UAAd,EAA0B,MAA1B,CAAvB;IAFb,CAHmD;IAAAY,eAAA,mBAQnC,KARmC;EAAA;EAUhEG,QAAQA,CAACZ,KAAD,EAAyB;IAC/B,MAAMY,QAAN,CAAeZ,KAAf;IAGA,KAAKa,UAAL,GAAkB,KAAlB;IACA,KAAKC,WAAL,GAAmB,KAAnB;EACD;AAhB+D"},"metadata":{},"sourceType":"module","externalDependencies":[]}