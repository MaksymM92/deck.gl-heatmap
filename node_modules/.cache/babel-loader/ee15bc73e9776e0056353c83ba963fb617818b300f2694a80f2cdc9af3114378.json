{"ast":null,"code":"import { getCompositeGLType } from '../webgl-utils/attribute-utils';\nexport function getDebugTableForProgramConfiguration(config) {\n  const table = {};\n  const header = \"Accessors for \".concat(config.id);\n  for (const attributeInfo of config.attributeInfos) {\n    if (attributeInfo) {\n      const glslDeclaration = getGLSLDeclaration(attributeInfo);\n      table[\"in \".concat(glslDeclaration)] = {\n        [header]: JSON.stringify(attributeInfo.accessor)\n      };\n    }\n  }\n  for (const varyingInfo of config.varyingInfos) {\n    if (varyingInfo) {\n      const glslDeclaration = getGLSLDeclaration(varyingInfo);\n      table[\"out \".concat(glslDeclaration)] = {\n        [header]: JSON.stringify(varyingInfo.accessor)\n      };\n    }\n  }\n  return table;\n}\nfunction getGLSLDeclaration(attributeInfo) {\n  const {\n    type,\n    size\n  } = attributeInfo.accessor;\n  const typeAndName = getCompositeGLType(type, size);\n  if (typeAndName) {\n    return \"\".concat(typeAndName.name, \" \").concat(attributeInfo.name);\n  }\n  return attributeInfo.name;\n}","map":{"version":3,"names":["getCompositeGLType","getDebugTableForProgramConfiguration","config","table","header","concat","id","attributeInfo","attributeInfos","glslDeclaration","getGLSLDeclaration","JSON","stringify","accessor","varyingInfo","varyingInfos","type","size","typeAndName","name"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@luma.gl/webgl/src/debug/debug-program-configuration.js"],"sourcesContent":["import {getCompositeGLType} from '../webgl-utils/attribute-utils';\n\nexport function getDebugTableForProgramConfiguration(config) {\n  const table = {};\n\n  const header = `Accessors for ${config.id}`;\n\n  for (const attributeInfo of config.attributeInfos) {\n    if (attributeInfo) {\n      const glslDeclaration = getGLSLDeclaration(attributeInfo);\n      table[`in ${glslDeclaration}`] = {[header]: JSON.stringify(attributeInfo.accessor)};\n    }\n  }\n\n  for (const varyingInfo of config.varyingInfos) {\n    if (varyingInfo) {\n      const glslDeclaration = getGLSLDeclaration(varyingInfo);\n      table[`out ${glslDeclaration}`] = {[header]: JSON.stringify(varyingInfo.accessor)};\n    }\n  }\n\n  return table;\n}\n\nfunction getGLSLDeclaration(attributeInfo) {\n  const {type, size} = attributeInfo.accessor;\n  const typeAndName = getCompositeGLType(type, size);\n  if (typeAndName) {\n    return `${typeAndName.name} ${attributeInfo.name}`;\n  }\n  return attributeInfo.name;\n}\n"],"mappings":"AAAA,SAAQA,kBAAR,QAAiC,gCAAjC;AAEA,OAAO,SAASC,oCAATA,CAA8CC,MAA9C,EAAsD;EAC3D,MAAMC,KAAK,GAAG,EAAd;EAEA,MAAMC,MAAM,oBAAAC,MAAA,CAAoBH,MAAM,CAACI,EAA3B,CAAZ;EAEA,KAAK,MAAMC,aAAX,IAA4BL,MAAM,CAACM,cAAnC,EAAmD;IACjD,IAAID,aAAJ,EAAmB;MACjB,MAAME,eAAe,GAAGC,kBAAkB,CAACH,aAAD,CAA1C;MACAJ,KAAK,OAAAE,MAAA,CAAOI,eAAP,EAAL,GAAiC;QAAC,CAACL,MAAD,GAAUO,IAAI,CAACC,SAAL,CAAeL,aAAa,CAACM,QAA7B;MAAX,CAAjC;IACD;EACF;EAED,KAAK,MAAMC,WAAX,IAA0BZ,MAAM,CAACa,YAAjC,EAA+C;IAC7C,IAAID,WAAJ,EAAiB;MACf,MAAML,eAAe,GAAGC,kBAAkB,CAACI,WAAD,CAA1C;MACAX,KAAK,QAAAE,MAAA,CAAQI,eAAR,EAAL,GAAkC;QAAC,CAACL,MAAD,GAAUO,IAAI,CAACC,SAAL,CAAeE,WAAW,CAACD,QAA3B;MAAX,CAAlC;IACD;EACF;EAED,OAAOV,KAAP;AACD;AAED,SAASO,kBAATA,CAA4BH,aAA5B,EAA2C;EACzC,MAAM;IAACS,IAAD;IAAOC;EAAP,IAAeV,aAAa,CAACM,QAAnC;EACA,MAAMK,WAAW,GAAGlB,kBAAkB,CAACgB,IAAD,EAAOC,IAAP,CAAtC;EACA,IAAIC,WAAJ,EAAiB;IACf,UAAAb,MAAA,CAAUa,WAAW,CAACC,IAAtB,OAAAd,MAAA,CAA8BE,aAAa,CAACY,IAA5C;EACD;EACD,OAAOZ,aAAa,CAACY,IAArB;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}