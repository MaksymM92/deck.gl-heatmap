{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nexport default class Transition {\n  constructor(timeline) {\n    _defineProperty(this, \"_inProgress\", void 0);\n    _defineProperty(this, \"_handle\", void 0);\n    _defineProperty(this, \"_timeline\", void 0);\n    _defineProperty(this, \"time\", void 0);\n    _defineProperty(this, \"settings\", void 0);\n    this._inProgress = false;\n    this._handle = null;\n    this._timeline = timeline;\n    this.time = 0;\n    this.settings = {\n      duration: 0\n    };\n  }\n  get inProgress() {\n    return this._inProgress;\n  }\n  start(settings) {\n    var _this$settings$onStar, _this$settings;\n    this.cancel();\n    this.settings = settings;\n    this._inProgress = true;\n    (_this$settings$onStar = (_this$settings = this.settings).onStart) === null || _this$settings$onStar === void 0 ? void 0 : _this$settings$onStar.call(_this$settings, this);\n  }\n  end() {\n    if (this._inProgress) {\n      var _this$settings$onEnd, _this$settings2;\n      this._timeline.removeChannel(this._handle);\n      this._handle = null;\n      this._inProgress = false;\n      (_this$settings$onEnd = (_this$settings2 = this.settings).onEnd) === null || _this$settings$onEnd === void 0 ? void 0 : _this$settings$onEnd.call(_this$settings2, this);\n    }\n  }\n  cancel() {\n    if (this._inProgress) {\n      var _this$settings$onInte, _this$settings3;\n      (_this$settings$onInte = (_this$settings3 = this.settings).onInterrupt) === null || _this$settings$onInte === void 0 ? void 0 : _this$settings$onInte.call(_this$settings3, this);\n      this._timeline.removeChannel(this._handle);\n      this._handle = null;\n      this._inProgress = false;\n    }\n  }\n  update() {\n    var _this$settings$onUpda, _this$settings4;\n    if (!this._inProgress) {\n      return false;\n    }\n    if (this._handle === null) {\n      const {\n        _timeline: timeline,\n        settings\n      } = this;\n      this._handle = timeline.addChannel({\n        delay: timeline.getTime(),\n        duration: settings.duration\n      });\n    }\n    this.time = this._timeline.getTime(this._handle);\n    this._onUpdate();\n    (_this$settings$onUpda = (_this$settings4 = this.settings).onUpdate) === null || _this$settings$onUpda === void 0 ? void 0 : _this$settings$onUpda.call(_this$settings4, this);\n    if (this._timeline.isFinished(this._handle)) {\n      this.end();\n    }\n    return true;\n  }\n  _onUpdate() {}\n}","map":{"version":3,"names":["Transition","constructor","timeline","_defineProperty","_inProgress","_handle","_timeline","time","settings","duration","inProgress","start","_this$settings$onStar","_this$settings","cancel","onStart","call","end","_this$settings$onEnd","_this$settings2","removeChannel","onEnd","_this$settings$onInte","_this$settings3","onInterrupt","update","_this$settings$onUpda","_this$settings4","addChannel","delay","getTime","_onUpdate","onUpdate","isFinished"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@deck.gl/core/src/transitions/transition.ts"],"sourcesContent":["import type {Timeline} from '@luma.gl/core';\n\nexport type TransitionSettings = {\n  duration: number;\n  onStart?: (transition: Transition) => void;\n  onUpdate?: (transition: Transition) => void;\n  onInterrupt?: (transition: Transition) => void;\n  onEnd?: (transition: Transition) => void;\n};\n\nexport default class Transition {\n  private _inProgress: boolean;\n  private _handle: number | null;\n  private _timeline: Timeline;\n\n  time: number;\n  settings: TransitionSettings;\n\n  /**\n   * @params timeline {Timeline}\n   */\n  constructor(timeline: Timeline) {\n    this._inProgress = false;\n    this._handle = null;\n    this._timeline = timeline;\n    this.time = 0;\n\n    // Defaults\n    this.settings = {duration: 0};\n  }\n\n  /* Public API */\n  get inProgress(): boolean {\n    return this._inProgress;\n  }\n\n  /**\n   * (re)start this transition.\n   * @params props {object} - optional overriding props. see constructor\n   */\n  start(settings: TransitionSettings) {\n    this.cancel();\n    this.settings = settings;\n    this._inProgress = true;\n    this.settings.onStart?.(this);\n  }\n\n  /**\n   * end this transition if it is in progress.\n   */\n  end() {\n    if (this._inProgress) {\n      this._timeline.removeChannel(this._handle);\n      this._handle = null;\n      this._inProgress = false;\n      this.settings.onEnd?.(this);\n    }\n  }\n\n  /**\n   * cancel this transition if it is in progress.\n   */\n  cancel() {\n    if (this._inProgress) {\n      this.settings.onInterrupt?.(this);\n      this._timeline.removeChannel(this._handle);\n      this._handle = null;\n      this._inProgress = false;\n    }\n  }\n\n  /**\n   * update this transition. Returns `true` if updated.\n   */\n  update() {\n    if (!this._inProgress) {\n      return false;\n    }\n\n    // It is important to initialize the handle during `update` instead of `start`.\n    // The CPU time that the `start` frame takes should not be counted towards the duration.\n    // On the other hand, `update` always happens during a render cycle. The clock starts when the\n    // transition is rendered for the first time.\n    if (this._handle === null) {\n      const {_timeline: timeline, settings} = this;\n      this._handle = timeline.addChannel({\n        delay: timeline.getTime(),\n        duration: settings.duration\n      });\n    }\n\n    this.time = this._timeline.getTime(this._handle);\n    // Call subclass method\n    this._onUpdate();\n    // Call user callback\n    this.settings.onUpdate?.(this);\n\n    // This only works if `settings.duration` is set\n    // Spring transition must call `end` manually\n    if (this._timeline.isFinished(this._handle)) {\n      this.end();\n    }\n    return true;\n  }\n\n  /* Private API */\n\n  protected _onUpdate() {\n    // for subclass override\n  }\n}\n"],"mappings":";AAUA,eAAe,MAAMA,UAAN,CAAiB;EAW9BC,WAAWA,CAACC,QAAD,EAAqB;IAAAC,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAC9B,KAAKC,WAAL,GAAmB,KAAnB;IACA,KAAKC,OAAL,GAAe,IAAf;IACA,KAAKC,SAAL,GAAiBJ,QAAjB;IACA,KAAKK,IAAL,GAAY,CAAZ;IAGA,KAAKC,QAAL,GAAgB;MAACC,QAAQ,EAAE;IAAX,CAAhB;EACD;EAGa,IAAVC,UAAUA,CAAA,EAAY;IACxB,OAAO,KAAKN,WAAZ;EACD;EAMDO,KAAKA,CAACH,QAAD,EAA+B;IAAA,IAAAI,qBAAA,EAAAC,cAAA;IAClC,KAAKC,MAAL;IACA,KAAKN,QAAL,GAAgBA,QAAhB;IACA,KAAKJ,WAAL,GAAmB,IAAnB;IACA,CAAAQ,qBAAA,IAAAC,cAAA,QAAKL,QAAL,EAAcO,OAAd,cAAAH,qBAAA,uBAAAA,qBAAA,CAAAI,IAAA,CAAAH,cAAA,EAAwB,IAAxB;EACD;EAKDI,GAAGA,CAAA,EAAG;IACJ,IAAI,KAAKb,WAAT,EAAsB;MAAA,IAAAc,oBAAA,EAAAC,eAAA;MACpB,KAAKb,SAAL,CAAec,aAAf,CAA6B,KAAKf,OAAlC;MACA,KAAKA,OAAL,GAAe,IAAf;MACA,KAAKD,WAAL,GAAmB,KAAnB;MACA,CAAAc,oBAAA,IAAAC,eAAA,QAAKX,QAAL,EAAca,KAAd,cAAAH,oBAAA,uBAAAA,oBAAA,CAAAF,IAAA,CAAAG,eAAA,EAAsB,IAAtB;IACD;EACF;EAKDL,MAAMA,CAAA,EAAG;IACP,IAAI,KAAKV,WAAT,EAAsB;MAAA,IAAAkB,qBAAA,EAAAC,eAAA;MACpB,CAAAD,qBAAA,IAAAC,eAAA,QAAKf,QAAL,EAAcgB,WAAd,cAAAF,qBAAA,uBAAAA,qBAAA,CAAAN,IAAA,CAAAO,eAAA,EAA4B,IAA5B;MACA,KAAKjB,SAAL,CAAec,aAAf,CAA6B,KAAKf,OAAlC;MACA,KAAKA,OAAL,GAAe,IAAf;MACA,KAAKD,WAAL,GAAmB,KAAnB;IACD;EACF;EAKDqB,MAAMA,CAAA,EAAG;IAAA,IAAAC,qBAAA,EAAAC,eAAA;IACP,IAAI,CAAC,KAAKvB,WAAV,EAAuB;MACrB,OAAO,KAAP;IACD;IAMD,IAAI,KAAKC,OAAL,KAAiB,IAArB,EAA2B;MACzB,MAAM;QAACC,SAAS,EAAEJ,QAAZ;QAAsBM;MAAtB,IAAkC,IAAxC;MACA,KAAKH,OAAL,GAAeH,QAAQ,CAAC0B,UAAT,CAAoB;QACjCC,KAAK,EAAE3B,QAAQ,CAAC4B,OAAT,EAD0B;QAEjCrB,QAAQ,EAAED,QAAQ,CAACC;MAFc,CAApB,CAAf;IAID;IAED,KAAKF,IAAL,GAAY,KAAKD,SAAL,CAAewB,OAAf,CAAuB,KAAKzB,OAA5B,CAAZ;IAEA,KAAK0B,SAAL;IAEA,CAAAL,qBAAA,IAAAC,eAAA,QAAKnB,QAAL,EAAcwB,QAAd,cAAAN,qBAAA,uBAAAA,qBAAA,CAAAV,IAAA,CAAAW,eAAA,EAAyB,IAAzB;IAIA,IAAI,KAAKrB,SAAL,CAAe2B,UAAf,CAA0B,KAAK5B,OAA/B,CAAJ,EAA6C;MAC3C,KAAKY,GAAL;IACD;IACD,OAAO,IAAP;EACD;EAISc,SAASA,CAAA,EAAG,CAErB;AAnG6B"},"metadata":{},"sourceType":"module","externalDependencies":[]}