{"ast":null,"code":"export function replaceInRange(_ref) {\n  let {\n    data,\n    getIndex,\n    dataRange,\n    replace\n  } = _ref;\n  const {\n    startRow = 0,\n    endRow = Infinity\n  } = dataRange;\n  const count = data.length;\n  let replaceStart = count;\n  let replaceEnd = count;\n  for (let i = 0; i < count; i++) {\n    const row = getIndex(data[i]);\n    if (replaceStart > i && row >= startRow) {\n      replaceStart = i;\n    }\n    if (row >= endRow) {\n      replaceEnd = i;\n      break;\n    }\n  }\n  let index = replaceStart;\n  const dataLengthChanged = replaceEnd - replaceStart !== replace.length;\n  const endChunk = dataLengthChanged ? data.slice(replaceEnd) : undefined;\n  for (let i = 0; i < replace.length; i++) {\n    data[index++] = replace[i];\n  }\n  if (endChunk) {\n    for (let i = 0; i < endChunk.length; i++) {\n      data[index++] = endChunk[i];\n    }\n    data.length = index;\n  }\n  return {\n    startRow: replaceStart,\n    endRow: replaceStart + replace.length\n  };\n}","map":{"version":3,"names":["replaceInRange","_ref","data","getIndex","dataRange","replace","startRow","endRow","Infinity","count","length","replaceStart","replaceEnd","i","row","index","dataLengthChanged","endChunk","slice","undefined"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@deck.gl/layers/dist/esm/utils.js"],"sourcesContent":["export function replaceInRange({\n  data,\n  getIndex,\n  dataRange,\n  replace\n}) {\n  const {\n    startRow = 0,\n    endRow = Infinity\n  } = dataRange;\n  const count = data.length;\n  let replaceStart = count;\n  let replaceEnd = count;\n\n  for (let i = 0; i < count; i++) {\n    const row = getIndex(data[i]);\n\n    if (replaceStart > i && row >= startRow) {\n      replaceStart = i;\n    }\n\n    if (row >= endRow) {\n      replaceEnd = i;\n      break;\n    }\n  }\n\n  let index = replaceStart;\n  const dataLengthChanged = replaceEnd - replaceStart !== replace.length;\n  const endChunk = dataLengthChanged ? data.slice(replaceEnd) : undefined;\n\n  for (let i = 0; i < replace.length; i++) {\n    data[index++] = replace[i];\n  }\n\n  if (endChunk) {\n    for (let i = 0; i < endChunk.length; i++) {\n      data[index++] = endChunk[i];\n    }\n\n    data.length = index;\n  }\n\n  return {\n    startRow: replaceStart,\n    endRow: replaceStart + replace.length\n  };\n}\n//# sourceMappingURL=utils.js.map"],"mappings":"AAAA,OAAO,SAASA,cAAcA,CAAAC,IAAA,EAK3B;EAAA,IAL4B;IAC7BC,IAAI;IACJC,QAAQ;IACRC,SAAS;IACTC;EACF,CAAC,GAAAJ,IAAA;EACC,MAAM;IACJK,QAAQ,GAAG,CAAC;IACZC,MAAM,GAAGC;EACX,CAAC,GAAGJ,SAAS;EACb,MAAMK,KAAK,GAAGP,IAAI,CAACQ,MAAM;EACzB,IAAIC,YAAY,GAAGF,KAAK;EACxB,IAAIG,UAAU,GAAGH,KAAK;EAEtB,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,EAAEI,CAAC,EAAE,EAAE;IAC9B,MAAMC,GAAG,GAAGX,QAAQ,CAACD,IAAI,CAACW,CAAC,CAAC,CAAC;IAE7B,IAAIF,YAAY,GAAGE,CAAC,IAAIC,GAAG,IAAIR,QAAQ,EAAE;MACvCK,YAAY,GAAGE,CAAC;IAClB;IAEA,IAAIC,GAAG,IAAIP,MAAM,EAAE;MACjBK,UAAU,GAAGC,CAAC;MACd;IACF;EACF;EAEA,IAAIE,KAAK,GAAGJ,YAAY;EACxB,MAAMK,iBAAiB,GAAGJ,UAAU,GAAGD,YAAY,KAAKN,OAAO,CAACK,MAAM;EACtE,MAAMO,QAAQ,GAAGD,iBAAiB,GAAGd,IAAI,CAACgB,KAAK,CAACN,UAAU,CAAC,GAAGO,SAAS;EAEvE,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,OAAO,CAACK,MAAM,EAAEG,CAAC,EAAE,EAAE;IACvCX,IAAI,CAACa,KAAK,EAAE,CAAC,GAAGV,OAAO,CAACQ,CAAC,CAAC;EAC5B;EAEA,IAAII,QAAQ,EAAE;IACZ,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGI,QAAQ,CAACP,MAAM,EAAEG,CAAC,EAAE,EAAE;MACxCX,IAAI,CAACa,KAAK,EAAE,CAAC,GAAGE,QAAQ,CAACJ,CAAC,CAAC;IAC7B;IAEAX,IAAI,CAACQ,MAAM,GAAGK,KAAK;EACrB;EAEA,OAAO;IACLT,QAAQ,EAAEK,YAAY;IACtBJ,MAAM,EAAEI,YAAY,GAAGN,OAAO,CAACK;EACjC,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}