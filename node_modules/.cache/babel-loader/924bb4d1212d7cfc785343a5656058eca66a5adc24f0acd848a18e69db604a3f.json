{"ast":null,"code":"function formatArrayValue(v, opts) {\n  const {\n    maxElts = 16,\n    size = 1\n  } = opts;\n  let string = '[';\n  for (let i = 0; i < v.length && i < maxElts; ++i) {\n    if (i > 0) {\n      string += \",\".concat(i % size === 0 ? ' ' : '');\n    }\n    string += formatValue(v[i], opts);\n  }\n  const terminator = v.length > maxElts ? '...' : ']';\n  return \"\".concat(string).concat(terminator);\n}\nexport function formatValue(v) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const EPSILON = 1e-16;\n  const {\n    isInteger = false\n  } = opts;\n  if (Array.isArray(v) || ArrayBuffer.isView(v)) {\n    return formatArrayValue(v, opts);\n  }\n  if (!Number.isFinite(v)) {\n    return String(v);\n  }\n  if (Math.abs(v) < EPSILON) {\n    return isInteger ? '0' : '0.';\n  }\n  if (isInteger) {\n    return v.toFixed(0);\n  }\n  if (Math.abs(v) > 100 && Math.abs(v) < 10000) {\n    return v.toFixed(0);\n  }\n  const string = v.toPrecision(2);\n  const decimal = string.indexOf('.0');\n  return decimal === string.length - 2 ? string.slice(0, -1) : string;\n}","map":{"version":3,"names":["formatArrayValue","v","opts","maxElts","size","string","i","length","concat","formatValue","terminator","arguments","undefined","EPSILON","isInteger","Array","isArray","ArrayBuffer","isView","Number","isFinite","String","Math","abs","toFixed","toPrecision","decimal","indexOf","slice"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@luma.gl/webgl/src/utils/format-value.js"],"sourcesContent":["// TODO / DEPRECATED - delete when confident that probe.gl logging implements all opts\n/* eslint-disable no-console */\nfunction formatArrayValue(v, opts) {\n  const {maxElts = 16, size = 1} = opts;\n  let string = '[';\n  for (let i = 0; i < v.length && i < maxElts; ++i) {\n    if (i > 0) {\n      string += `,${i % size === 0 ? ' ' : ''}`;\n    }\n    string += formatValue(v[i], opts);\n  }\n  const terminator = v.length > maxElts ? '...' : ']';\n  return `${string}${terminator}`;\n}\n\nexport function formatValue(v, opts = {}) {\n  const EPSILON = 1e-16;\n  const {isInteger = false} = opts;\n  if (Array.isArray(v) || ArrayBuffer.isView(v)) {\n    return formatArrayValue(v, opts);\n  }\n  if (!Number.isFinite(v)) {\n    return String(v);\n  }\n  if (Math.abs(v) < EPSILON) {\n    return isInteger ? '0' : '0.';\n  }\n  if (isInteger) {\n    return v.toFixed(0);\n  }\n  if (Math.abs(v) > 100 && Math.abs(v) < 10000) {\n    return v.toFixed(0);\n  }\n  const string = v.toPrecision(2);\n  const decimal = string.indexOf('.0');\n  return decimal === string.length - 2 ? string.slice(0, -1) : string;\n}\n"],"mappings":"AAEA,SAASA,gBAATA,CAA0BC,CAA1B,EAA6BC,IAA7B,EAAmC;EACjC,MAAM;IAACC,OAAO,GAAG,EAAX;IAAeC,IAAI,GAAG;EAAtB,IAA2BF,IAAjC;EACA,IAAIG,MAAM,GAAG,GAAb;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,CAAC,CAACM,MAAN,IAAgBD,CAAC,GAAGH,OAApC,EAA6C,EAAEG,CAA/C,EAAkD;IAChD,IAAIA,CAAC,GAAG,CAAR,EAAW;MACTD,MAAM,QAAAG,MAAA,CAAQF,CAAC,GAAGF,IAAJ,KAAa,CAAb,GAAiB,GAAjB,GAAuB,EAA/B,CAAN;IACD;IACDC,MAAM,IAAII,WAAW,CAACR,CAAC,CAACK,CAAD,CAAF,EAAOJ,IAAP,CAArB;EACD;EACD,MAAMQ,UAAU,GAAGT,CAAC,CAACM,MAAF,GAAWJ,OAAX,GAAqB,KAArB,GAA6B,GAAhD;EACA,UAAAK,MAAA,CAAUH,MAAV,EAAAG,MAAA,CAAmBE,UAAnB;AACD;AAED,OAAO,SAASD,WAATA,CAAqBR,CAArB,EAAmC;EAAA,IAAXC,IAAW,GAAAS,SAAA,CAAAJ,MAAA,QAAAI,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAJ,EAAI;EACxC,MAAME,OAAO,GAAG,KAAhB;EACA,MAAM;IAACC,SAAS,GAAG;EAAb,IAAsBZ,IAA5B;EACA,IAAIa,KAAK,CAACC,OAAN,CAAcf,CAAd,KAAoBgB,WAAW,CAACC,MAAZ,CAAmBjB,CAAnB,CAAxB,EAA+C;IAC7C,OAAOD,gBAAgB,CAACC,CAAD,EAAIC,IAAJ,CAAvB;EACD;EACD,IAAI,CAACiB,MAAM,CAACC,QAAP,CAAgBnB,CAAhB,CAAL,EAAyB;IACvB,OAAOoB,MAAM,CAACpB,CAAD,CAAb;EACD;EACD,IAAIqB,IAAI,CAACC,GAAL,CAAStB,CAAT,IAAcY,OAAlB,EAA2B;IACzB,OAAOC,SAAS,GAAG,GAAH,GAAS,IAAzB;EACD;EACD,IAAIA,SAAJ,EAAe;IACb,OAAOb,CAAC,CAACuB,OAAF,CAAU,CAAV,CAAP;EACD;EACD,IAAIF,IAAI,CAACC,GAAL,CAAStB,CAAT,IAAc,GAAd,IAAqBqB,IAAI,CAACC,GAAL,CAAStB,CAAT,IAAc,KAAvC,EAA8C;IAC5C,OAAOA,CAAC,CAACuB,OAAF,CAAU,CAAV,CAAP;EACD;EACD,MAAMnB,MAAM,GAAGJ,CAAC,CAACwB,WAAF,CAAc,CAAd,CAAf;EACA,MAAMC,OAAO,GAAGrB,MAAM,CAACsB,OAAP,CAAe,IAAf,CAAhB;EACA,OAAOD,OAAO,KAAKrB,MAAM,CAACE,MAAP,GAAgB,CAA5B,GAAgCF,MAAM,CAACuB,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAhC,GAAsDvB,MAA7D;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}