{"ast":null,"code":"import { assert } from '../utils/assert';\nexport function glFormatToComponents(format) {\n  switch (format) {\n    case 6406:\n    case 33326:\n    case 6403:\n      return 1;\n    case 33328:\n    case 33319:\n      return 2;\n    case 6407:\n    case 34837:\n      return 3;\n    case 6408:\n    case 34836:\n      return 4;\n    default:\n      assert(false);\n      return 0;\n  }\n}\nexport function glTypeToBytes(type) {\n  switch (type) {\n    case 5121:\n      return 1;\n    case 33635:\n    case 32819:\n    case 32820:\n      return 2;\n    case 5126:\n      return 4;\n    default:\n      assert(false);\n      return 0;\n  }\n}","map":{"version":3,"names":["assert","glFormatToComponents","format","glTypeToBytes","type"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@luma.gl/webgl/src/webgl-utils/format-utils.js"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport {assert} from '../utils/assert';\n\n// Returns number of components in a specific readPixels WebGL format\nexport function glFormatToComponents(format) {\n  switch (format) {\n    case GL.ALPHA:\n    case GL.R32F:\n    case GL.RED:\n      return 1;\n    case GL.RG32F:\n    case GL.RG:\n      return 2;\n    case GL.RGB:\n    case GL.RGB32F:\n      return 3;\n    case GL.RGBA:\n    case GL.RGBA32F:\n      return 4;\n    // TODO: Add support for additional WebGL2 formats\n    default:\n      assert(false);\n      return 0;\n  }\n}\n\n// Return byte count for given readPixels WebGL type\nexport function glTypeToBytes(type) {\n  switch (type) {\n    case GL.UNSIGNED_BYTE:\n      return 1;\n    case GL.UNSIGNED_SHORT_5_6_5:\n    case GL.UNSIGNED_SHORT_4_4_4_4:\n    case GL.UNSIGNED_SHORT_5_5_5_1:\n      return 2;\n    case GL.FLOAT:\n      return 4;\n    // TODO: Add support for additional WebGL2 types\n    default:\n      assert(false);\n      return 0;\n  }\n}\n"],"mappings":"AACA,SAAQA,MAAR,QAAqB,iBAArB;AAGA,OAAO,SAASC,oBAATA,CAA8BC,MAA9B,EAAsC;EAC3C,QAAQA,MAAR;IACE;IACA;IACA;MACE,OAAO,CAAP;IACF;IACA;MACE,OAAO,CAAP;IACF;IACA;MACE,OAAO,CAAP;IACF;IACA;MACE,OAAO,CAAP;IAEF;MACEF,MAAM,CAAC,KAAD,CAAN;MACA,OAAO,CAAP;EAAA;AAEL;AAGD,OAAO,SAASG,aAATA,CAAuBC,IAAvB,EAA6B;EAClC,QAAQA,IAAR;IACE;MACE,OAAO,CAAP;IACF;IACA;IACA;MACE,OAAO,CAAP;IACF;MACE,OAAO,CAAP;IAEF;MACEJ,MAAM,CAAC,KAAD,CAAN;MACA,OAAO,CAAP;EAAA;AAEL"},"metadata":{},"sourceType":"module","externalDependencies":[]}