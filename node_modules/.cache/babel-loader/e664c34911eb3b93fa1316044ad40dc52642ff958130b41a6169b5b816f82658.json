{"ast":null,"code":"import Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { vec3_transformMat2, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nconst ORIGIN = [0, 0, 0];\nlet ZERO;\nexport default class Vector3 extends Vector {\n  static get ZERO() {\n    if (!ZERO) {\n      ZERO = new Vector3(0, 0, 0);\n      Object.freeze(ZERO);\n    }\n    return ZERO;\n  }\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    super(-0, -0, -0);\n    if (arguments.length === 1 && isArray(x)) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n    }\n  }\n  set(x, y, z) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    return this.check();\n  }\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    return this.check();\n  }\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    return this.check();\n  }\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    return object;\n  }\n  get ELEMENTS() {\n    return 3;\n  }\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n  angle(vector) {\n    return vec3.angle(this, vector);\n  }\n  cross(vector) {\n    vec3.cross(this, this, vector);\n    return this.check();\n  }\n  rotateX(_ref) {\n    let {\n      radians,\n      origin = ORIGIN\n    } = _ref;\n    vec3.rotateX(this, this, origin, radians);\n    return this.check();\n  }\n  rotateY(_ref2) {\n    let {\n      radians,\n      origin = ORIGIN\n    } = _ref2;\n    vec3.rotateY(this, this, origin, radians);\n    return this.check();\n  }\n  rotateZ(_ref3) {\n    let {\n      radians,\n      origin = ORIGIN\n    } = _ref3;\n    vec3.rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n  transformAsPoint(matrix4) {\n    vec3.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n  transformAsVector(matrix4) {\n    vec3_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n  transformByMatrix3(matrix3) {\n    vec3.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n  transformByMatrix2(matrix2) {\n    vec3_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n  transformByQuaternion(quaternion) {\n    vec3.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n}","map":{"version":3,"names":["Vector","config","isArray","checkNumber","vec3","vec3_transformMat2","vec3_transformMat4AsVector","ORIGIN","ZERO","Vector3","Object","freeze","constructor","x","arguments","length","undefined","y","z","copy","debug","set","check","array","fromObject","object","toObject","ELEMENTS","value","angle","vector","cross","rotateX","_ref","radians","origin","rotateY","_ref2","rotateZ","_ref3","transform","matrix4","transformAsPoint","transformMat4","transformAsVector","transformByMatrix3","matrix3","transformMat3","transformByMatrix2","matrix2","transformByQuaternion","quaternion","transformQuat"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@math.gl/core/src/classes/vector3.ts"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport {NumericArray} from '@math.gl/types';\nimport Vector from './base/vector';\nimport {config, isArray} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\n/* eslint-disable camelcase */\nimport {vec3_transformMat2, vec3_transformMat4AsVector} from '../lib/gl-matrix-extras';\n\nconst ORIGIN = [0, 0, 0];\n\nlet ZERO: Vector3;\n\n/**\n * Three-element vector class.\n * Subclass of Array<number>\n */\nexport default class Vector3 extends Vector {\n  static get ZERO(): Vector3 {\n    if (!ZERO) {\n      ZERO = new Vector3(0, 0, 0);\n      Object.freeze(ZERO);\n    }\n    return ZERO;\n  }\n\n  /**\n   * @class\n   * @param x\n   * @param y\n   * @param z\n   */\n  constructor(x: number | Readonly<NumericArray> = 0, y: number = 0, z: number = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0);\n    if (arguments.length === 1 && isArray(x)) {\n      this.copy(x as NumericArray);\n    } else {\n      // this.set(x, y, z);\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n      // @ts-expect-error TS2412: Property '0' of type 'number | [number, number, number]' is not assignable to numeric index type 'number'\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n    }\n  }\n\n  set(x: number, y: number, z: number): this {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    return this.check();\n  }\n\n  copy(array: Readonly<NumericArray>): this {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    return this.check();\n  }\n\n  fromObject(object: {x: number; y: number; z: number}): this {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    return this.check();\n  }\n\n  toObject(object: {x?: number; y?: number; z?: number}): {x: number; y: number; z: number} {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    return object as {x: number; y: number; z: number};\n  }\n\n  // Getters/setters\n\n  get ELEMENTS(): number {\n    return 3;\n  }\n  get z(): number {\n    return this[2];\n  }\n  set z(value: number) {\n    this[2] = checkNumber(value);\n  }\n\n  // ACCESSORS\n\n  angle(vector: Readonly<NumericArray>): number {\n    return vec3.angle(this, vector);\n  }\n\n  // MODIFIERS\n\n  cross(vector: Readonly<NumericArray>): this {\n    vec3.cross(this, this, vector);\n    return this.check();\n  }\n\n  rotateX({radians, origin = ORIGIN}: {radians: number; origin?: Readonly<NumericArray>}): this {\n    vec3.rotateX(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateY({radians, origin = ORIGIN}: {radians: number; origin?: Readonly<NumericArray>}): this {\n    vec3.rotateY(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateZ({radians, origin = ORIGIN}: {radians: number; origin?: Readonly<NumericArray>}): this {\n    vec3.rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n\n  // Transforms\n\n  // transforms as point (4th component is implicitly 1)\n  transform(matrix4: Readonly<NumericArray>): this {\n    return this.transformAsPoint(matrix4);\n  }\n\n  // transforms as point (4th component is implicitly 1)\n  transformAsPoint(matrix4: Readonly<NumericArray>): this {\n    vec3.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  // transforms as vector  (4th component is implicitly 0, ignores translation. slightly faster)\n  transformAsVector(matrix4: Readonly<NumericArray>): this {\n    vec3_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3: Readonly<NumericArray>): this {\n    vec3.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2: Readonly<NumericArray>): this {\n    vec3_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion: Readonly<NumericArray>): this {\n    vec3.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n}\n"],"mappings":"AAGA,OAAOA,MAAP,MAAmB,eAAnB;AACA,SAAQC,MAAR,EAAgBC,OAAhB,QAA8B,eAA9B;AACA,SAAQC,WAAR,QAA0B,mBAA1B;AACA,OAAO,KAAKC,IAAZ,MAAsB,gBAAtB;AAEA,SAAQC,kBAAR,EAA4BC,0BAA5B,QAA6D,yBAA7D;AAEA,MAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAf;AAEA,IAAIC,IAAJ;AAMA,eAAe,MAAMC,OAAN,SAAsBT,MAAtB,CAA6B;EAC3B,WAAJQ,IAAIA,CAAA,EAAY;IACzB,IAAI,CAACA,IAAL,EAAW;MACTA,IAAI,GAAG,IAAIC,OAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAP;MACAC,MAAM,CAACC,MAAP,CAAcH,IAAd;IACD;IACD,OAAOA,IAAP;EACD;EAQDI,WAAWA,CAAA,EAAuE;IAAA,IAAtEC,CAAkC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAtC;IAAA,IAAyCG,CAAS,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAArD;IAAA,IAAwDI,CAAS,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAApE;IAET,MAAM,CAAC,CAAP,EAAU,CAAC,CAAX,EAAc,CAAC,CAAf;IACA,IAAIA,SAAS,CAACC,MAAV,KAAqB,CAArB,IAA0Bb,OAAO,CAACW,CAAD,CAArC,EAA0C;MACxC,KAAKM,IAAL,CAAUN,CAAV;IACD,CAFD,MAEO;MAEL,IAAIZ,MAAM,CAACmB,KAAX,EAAkB;QAChBjB,WAAW,CAACU,CAAD,CAAX;QACAV,WAAW,CAACc,CAAD,CAAX;QACAd,WAAW,CAACe,CAAD,CAAX;MACD;MAED,KAAK,CAAL,IAAUL,CAAV;MACA,KAAK,CAAL,IAAUI,CAAV;MACA,KAAK,CAAL,IAAUC,CAAV;IACD;EACF;EAEDG,GAAGA,CAACR,CAAD,EAAYI,CAAZ,EAAuBC,CAAvB,EAAwC;IACzC,KAAK,CAAL,IAAUL,CAAV;IACA,KAAK,CAAL,IAAUI,CAAV;IACA,KAAK,CAAL,IAAUC,CAAV;IACA,OAAO,KAAKI,KAAL,EAAP;EACD;EAEDH,IAAIA,CAACI,KAAD,EAAsC;IACxC,KAAK,CAAL,IAAUA,KAAK,CAAC,CAAD,CAAf;IACA,KAAK,CAAL,IAAUA,KAAK,CAAC,CAAD,CAAf;IACA,KAAK,CAAL,IAAUA,KAAK,CAAC,CAAD,CAAf;IACA,OAAO,KAAKD,KAAL,EAAP;EACD;EAEDE,UAAUA,CAACC,MAAD,EAAkD;IAC1D,IAAIxB,MAAM,CAACmB,KAAX,EAAkB;MAChBjB,WAAW,CAACsB,MAAM,CAACZ,CAAR,CAAX;MACAV,WAAW,CAACsB,MAAM,CAACR,CAAR,CAAX;MACAd,WAAW,CAACsB,MAAM,CAACP,CAAR,CAAX;IACD;IACD,KAAK,CAAL,IAAUO,MAAM,CAACZ,CAAjB;IACA,KAAK,CAAL,IAAUY,MAAM,CAACR,CAAjB;IACA,KAAK,CAAL,IAAUQ,MAAM,CAACP,CAAjB;IACA,OAAO,KAAKI,KAAL,EAAP;EACD;EAEDI,QAAQA,CAACD,MAAD,EAAkF;IACxFA,MAAM,CAACZ,CAAP,GAAW,KAAK,CAAL,CAAX;IACAY,MAAM,CAACR,CAAP,GAAW,KAAK,CAAL,CAAX;IACAQ,MAAM,CAACP,CAAP,GAAW,KAAK,CAAL,CAAX;IACA,OAAOO,MAAP;EACD;EAIW,IAARE,QAAQA,CAAA,EAAW;IACrB,OAAO,CAAP;EACD;EACI,IAADT,CAACA,CAAA,EAAW;IACd,OAAO,KAAK,CAAL,CAAP;EACD;EACI,IAADA,CAACA,CAACU,KAAD,EAAgB;IACnB,KAAK,CAAL,IAAUzB,WAAW,CAACyB,KAAD,CAArB;EACD;EAIDC,KAAKA,CAACC,MAAD,EAAyC;IAC5C,OAAO1B,IAAI,CAACyB,KAAL,CAAW,IAAX,EAAiBC,MAAjB,CAAP;EACD;EAIDC,KAAKA,CAACD,MAAD,EAAuC;IAC1C1B,IAAI,CAAC2B,KAAL,CAAW,IAAX,EAAiB,IAAjB,EAAuBD,MAAvB;IACA,OAAO,KAAKR,KAAL,EAAP;EACD;EAEDU,OAAOA,CAAAC,IAAA,EAAuF;IAAA,IAAtF;MAACC,OAAD;MAAUC,MAAM,GAAG5B;IAAnB,CAAD,GAAA0B,IAAA;IACL7B,IAAI,CAAC4B,OAAL,CAAa,IAAb,EAAmB,IAAnB,EAAyBG,MAAzB,EAAiCD,OAAjC;IACA,OAAO,KAAKZ,KAAL,EAAP;EACD;EAEDc,OAAOA,CAAAC,KAAA,EAAuF;IAAA,IAAtF;MAACH,OAAD;MAAUC,MAAM,GAAG5B;IAAnB,CAAD,GAAA8B,KAAA;IACLjC,IAAI,CAACgC,OAAL,CAAa,IAAb,EAAmB,IAAnB,EAAyBD,MAAzB,EAAiCD,OAAjC;IACA,OAAO,KAAKZ,KAAL,EAAP;EACD;EAEDgB,OAAOA,CAAAC,KAAA,EAAuF;IAAA,IAAtF;MAACL,OAAD;MAAUC,MAAM,GAAG5B;IAAnB,CAAD,GAAAgC,KAAA;IACLnC,IAAI,CAACkC,OAAL,CAAa,IAAb,EAAmB,IAAnB,EAAyBH,MAAzB,EAAiCD,OAAjC;IACA,OAAO,KAAKZ,KAAL,EAAP;EACD;EAKDkB,SAASA,CAACC,OAAD,EAAwC;IAC/C,OAAO,KAAKC,gBAAL,CAAsBD,OAAtB,CAAP;EACD;EAGDC,gBAAgBA,CAACD,OAAD,EAAwC;IACtDrC,IAAI,CAACuC,aAAL,CAAmB,IAAnB,EAAyB,IAAzB,EAA+BF,OAA/B;IACA,OAAO,KAAKnB,KAAL,EAAP;EACD;EAGDsB,iBAAiBA,CAACH,OAAD,EAAwC;IACvDnC,0BAA0B,CAAC,IAAD,EAAO,IAAP,EAAamC,OAAb,CAA1B;IACA,OAAO,KAAKnB,KAAL,EAAP;EACD;EAEDuB,kBAAkBA,CAACC,OAAD,EAAwC;IACxD1C,IAAI,CAAC2C,aAAL,CAAmB,IAAnB,EAAyB,IAAzB,EAA+BD,OAA/B;IACA,OAAO,KAAKxB,KAAL,EAAP;EACD;EAED0B,kBAAkBA,CAACC,OAAD,EAAwC;IACxD5C,kBAAkB,CAAC,IAAD,EAAO,IAAP,EAAa4C,OAAb,CAAlB;IACA,OAAO,KAAK3B,KAAL,EAAP;EACD;EAED4B,qBAAqBA,CAACC,UAAD,EAA2C;IAC9D/C,IAAI,CAACgD,aAAL,CAAmB,IAAnB,EAAyB,IAAzB,EAA+BD,UAA/B;IACA,OAAO,KAAK7B,KAAL,EAAP;EACD;AA3IyC"},"metadata":{},"sourceType":"module","externalDependencies":[]}