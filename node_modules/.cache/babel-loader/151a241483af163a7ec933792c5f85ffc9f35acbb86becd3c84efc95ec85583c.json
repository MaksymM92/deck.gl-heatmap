{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { ClipSpace, setParameters, withParameters, clear } from '@luma.gl/core';\nimport Pass from './pass';\nexport default class ScreenPass extends Pass {\n  constructor(gl, props) {\n    super(gl, props);\n    _defineProperty(this, \"model\", void 0);\n    const {\n      module,\n      fs,\n      id\n    } = props;\n    this.model = new ClipSpace(gl, {\n      id,\n      fs,\n      modules: [module]\n    });\n  }\n  render(params) {\n    const gl = this.gl;\n    setParameters(gl, {\n      viewport: [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]\n    });\n    withParameters(gl, {\n      framebuffer: params.outputBuffer,\n      clearColor: [0, 0, 0, 0]\n    }, () => this._renderPass(gl, params));\n  }\n  delete() {\n    this.model.delete();\n    this.model = null;\n  }\n  _renderPass(gl, options) {\n    const {\n      inputBuffer\n    } = options;\n    clear(gl, {\n      color: true\n    });\n    this.model.draw({\n      moduleSettings: options.moduleSettings,\n      uniforms: {\n        texture: inputBuffer,\n        texSize: [inputBuffer.width, inputBuffer.height]\n      },\n      parameters: {\n        depthWrite: false,\n        depthTest: false\n      }\n    });\n  }\n}","map":{"version":3,"names":["ClipSpace","setParameters","withParameters","clear","Pass","ScreenPass","constructor","gl","props","_defineProperty","module","fs","id","model","modules","render","params","viewport","drawingBufferWidth","drawingBufferHeight","framebuffer","outputBuffer","clearColor","_renderPass","delete","options","inputBuffer","color","draw","moduleSettings","uniforms","texture","texSize","width","height","parameters","depthWrite","depthTest"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@deck.gl/core/src/passes/screen-pass.ts"],"sourcesContent":["//\n// A base render pass.\n//\n// Attribution: This class and the multipass system were inspired by\n// the THREE.js EffectComposer and *Pass classes\n\nimport type {Framebuffer} from '@luma.gl/core';\nimport {ClipSpace, setParameters, withParameters, clear} from '@luma.gl/core';\nimport Pass from './pass';\n\nimport type {ShaderModule} from '../types/types';\n\ntype ScreenPassProps = {\n  module: ShaderModule;\n  fs: string | null;\n  id: string;\n};\n\ntype ScreenPassRenderOptions = {\n  inputBuffer: Framebuffer;\n  outputBuffer: Framebuffer;\n  moduleSettings: any;\n};\n\nexport default class ScreenPass extends Pass {\n  model: ClipSpace;\n\n  constructor(gl: WebGLRenderingContext, props: ScreenPassProps) {\n    super(gl, props);\n    const {module, fs, id} = props;\n    this.model = new ClipSpace(gl, {id, fs, modules: [module]});\n  }\n\n  render(params: ScreenPassRenderOptions): void {\n    const gl = this.gl;\n\n    setParameters(gl, {viewport: [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]});\n\n    withParameters(gl, {framebuffer: params.outputBuffer, clearColor: [0, 0, 0, 0]}, () =>\n      this._renderPass(gl, params)\n    );\n  }\n\n  delete() {\n    this.model.delete();\n    this.model = null;\n  }\n\n  // Private methods\n\n  /**\n   * Renders the pass.\n   * This is an abstract method that should be overridden.\n   * @param inputBuffer - Frame buffer that contains the result of the previous pass\n   * @param outputBuffer - Frame buffer that serves as the output render target\n   */\n  protected _renderPass(gl: WebGLRenderingContext, options: ScreenPassRenderOptions) {\n    const {inputBuffer} = options;\n    clear(gl, {color: true});\n    this.model.draw({\n      moduleSettings: options.moduleSettings,\n      uniforms: {\n        texture: inputBuffer,\n        texSize: [inputBuffer.width, inputBuffer.height]\n      },\n      parameters: {\n        depthWrite: false,\n        depthTest: false\n      }\n    });\n  }\n}\n"],"mappings":";AAOA,SAAQA,SAAR,EAAmBC,aAAnB,EAAkCC,cAAlC,EAAkDC,KAAlD,QAA8D,eAA9D;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAgBA,eAAe,MAAMC,UAAN,SAAyBD,IAAzB,CAA8B;EAG3CE,WAAWA,CAACC,EAAD,EAA4BC,KAA5B,EAAoD;IAC7D,MAAMD,EAAN,EAAUC,KAAV;IAD6DC,eAAA;IAE7D,MAAM;MAACC,MAAD;MAASC,EAAT;MAAaC;IAAb,IAAmBJ,KAAzB;IACA,KAAKK,KAAL,GAAa,IAAIb,SAAJ,CAAcO,EAAd,EAAkB;MAACK,EAAD;MAAKD,EAAL;MAASG,OAAO,EAAE,CAACJ,MAAD;IAAlB,CAAlB,CAAb;EACD;EAEDK,MAAMA,CAACC,MAAD,EAAwC;IAC5C,MAAMT,EAAE,GAAG,KAAKA,EAAhB;IAEAN,aAAa,CAACM,EAAD,EAAK;MAACU,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAOV,EAAE,CAACW,kBAAV,EAA8BX,EAAE,CAACY,mBAAjC;IAAX,CAAL,CAAb;IAEAjB,cAAc,CAACK,EAAD,EAAK;MAACa,WAAW,EAAEJ,MAAM,CAACK,YAArB;MAAmCC,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;IAA/C,CAAL,EAAmE,MAC/E,KAAKC,WAAL,CAAiBhB,EAAjB,EAAqBS,MAArB,CADY,CAAd;EAGD;EAEDQ,MAAMA,CAAA,EAAG;IACP,KAAKX,KAAL,CAAWW,MAAX;IACA,KAAKX,KAAL,GAAa,IAAb;EACD;EAUSU,WAAWA,CAAChB,EAAD,EAA4BkB,OAA5B,EAA8D;IACjF,MAAM;MAACC;IAAD,IAAgBD,OAAtB;IACAtB,KAAK,CAACI,EAAD,EAAK;MAACoB,KAAK,EAAE;IAAR,CAAL,CAAL;IACA,KAAKd,KAAL,CAAWe,IAAX,CAAgB;MACdC,cAAc,EAAEJ,OAAO,CAACI,cADV;MAEdC,QAAQ,EAAE;QACRC,OAAO,EAAEL,WADD;QAERM,OAAO,EAAE,CAACN,WAAW,CAACO,KAAb,EAAoBP,WAAW,CAACQ,MAAhC;MAFD,CAFI;MAMdC,UAAU,EAAE;QACVC,UAAU,EAAE,KADF;QAEVC,SAAS,EAAE;MAFD;IANE,CAAhB;EAWD;AA9C0C"},"metadata":{},"sourceType":"module","externalDependencies":[]}