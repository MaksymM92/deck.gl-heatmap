{"ast":null,"code":"import Input from './input';\nimport { INPUT_EVENT_TYPES } from '../constants';\nconst {\n  KEY_EVENTS\n} = INPUT_EVENT_TYPES;\nconst DOWN_EVENT_TYPE = 'keydown';\nconst UP_EVENT_TYPE = 'keyup';\nexport default class KeyInput extends Input {\n  constructor(element, callback, options) {\n    super(element, callback, options);\n    this.handleEvent = event => {\n      // Ignore if focused on text input\n      const targetElement = event.target || event.srcElement;\n      if (targetElement.tagName === 'INPUT' && targetElement.type === 'text' || targetElement.tagName === 'TEXTAREA') {\n        return;\n      }\n      if (this.enableDownEvent && event.type === 'keydown') {\n        this.callback({\n          type: DOWN_EVENT_TYPE,\n          srcEvent: event,\n          key: event.key,\n          target: event.target\n        });\n      }\n      if (this.enableUpEvent && event.type === 'keyup') {\n        this.callback({\n          type: UP_EVENT_TYPE,\n          srcEvent: event,\n          key: event.key,\n          target: event.target\n        });\n      }\n    };\n    this.enableDownEvent = this.options.enable;\n    this.enableUpEvent = this.options.enable;\n    this.events = (this.options.events || []).concat(KEY_EVENTS);\n    element.tabIndex = this.options.tabIndex || 0;\n    element.style.outline = 'none';\n    this.events.forEach(event => element.addEventListener(event, this.handleEvent));\n  }\n  destroy() {\n    this.events.forEach(event => this.element.removeEventListener(event, this.handleEvent));\n  }\n  /**\n   * Enable this input (begin processing events)\n   * if the specified event type is among those handled by this input.\n   */\n  enableEventType(eventType, enabled) {\n    if (eventType === DOWN_EVENT_TYPE) {\n      this.enableDownEvent = enabled;\n    }\n    if (eventType === UP_EVENT_TYPE) {\n      this.enableUpEvent = enabled;\n    }\n  }\n}","map":{"version":3,"names":["Input","INPUT_EVENT_TYPES","KEY_EVENTS","DOWN_EVENT_TYPE","UP_EVENT_TYPE","KeyInput","constructor","element","callback","options","handleEvent","event","targetElement","target","srcElement","tagName","type","enableDownEvent","srcEvent","key","enableUpEvent","enable","events","concat","tabIndex","style","outline","forEach","addEventListener","destroy","removeEventListener","enableEventType","eventType","enabled"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/mjolnir.js/src/inputs/key-input.ts"],"sourcesContent":["import type {MjolnirKeyEventRaw} from '../types';\nimport Input, {InputOptions} from './input';\n\nimport {INPUT_EVENT_TYPES} from '../constants';\n\nconst {KEY_EVENTS} = INPUT_EVENT_TYPES;\nconst DOWN_EVENT_TYPE = 'keydown';\nconst UP_EVENT_TYPE = 'keyup';\n\ntype KeyInputOptions = InputOptions & {\n  events?: string[];\n  tabIndex?: number;\n};\n\nexport default class KeyInput extends Input<MjolnirKeyEventRaw, KeyInputOptions> {\n  enableDownEvent: boolean;\n  enableUpEvent: boolean;\n\n  events: string[];\n\n  constructor(\n    element: HTMLElement,\n    callback: (event: MjolnirKeyEventRaw) => void,\n    options: KeyInputOptions\n  ) {\n    super(element, callback, options);\n\n    this.enableDownEvent = this.options.enable;\n    this.enableUpEvent = this.options.enable;\n\n    this.events = (this.options.events || []).concat(KEY_EVENTS);\n\n    element.tabIndex = this.options.tabIndex || 0;\n    element.style.outline = 'none';\n    this.events.forEach(event => element.addEventListener(event, this.handleEvent));\n  }\n\n  destroy() {\n    this.events.forEach(event => this.element.removeEventListener(event, this.handleEvent));\n  }\n\n  /**\n   * Enable this input (begin processing events)\n   * if the specified event type is among those handled by this input.\n   */\n  enableEventType(eventType: string, enabled: boolean) {\n    if (eventType === DOWN_EVENT_TYPE) {\n      this.enableDownEvent = enabled;\n    }\n    if (eventType === UP_EVENT_TYPE) {\n      this.enableUpEvent = enabled;\n    }\n  }\n\n  handleEvent = (event: KeyboardEvent) => {\n    // Ignore if focused on text input\n    const targetElement = (event.target || event.srcElement) as HTMLElement;\n    if (\n      (targetElement.tagName === 'INPUT' && (targetElement as HTMLInputElement).type === 'text') ||\n      targetElement.tagName === 'TEXTAREA'\n    ) {\n      return;\n    }\n\n    if (this.enableDownEvent && event.type === 'keydown') {\n      this.callback({\n        type: DOWN_EVENT_TYPE,\n        srcEvent: event,\n        key: event.key,\n        target: event.target as HTMLElement\n      });\n    }\n\n    if (this.enableUpEvent && event.type === 'keyup') {\n      this.callback({\n        type: UP_EVENT_TYPE,\n        srcEvent: event,\n        key: event.key,\n        target: event.target as HTMLElement\n      });\n    }\n  };\n}\n"],"mappings":"AACA,OAAOA,KAAqB,MAAM,SAAS;AAE3C,SAAQC,iBAAiB,QAAO,cAAc;AAE9C,MAAM;EAACC;AAAU,CAAC,GAAGD,iBAAiB;AACtC,MAAME,eAAe,GAAG,SAAS;AACjC,MAAMC,aAAa,GAAG,OAAO;AAO7B,eAAc,MAAOC,QAAS,SAAQL,KAA0C;EAM9EM,YACEC,OAAoB,EACpBC,QAA6C,EAC7CC,OAAwB;IAExB,KAAK,CAACF,OAAO,EAAEC,QAAQ,EAAEC,OAAO,CAAC;IA6BnC,KAAAC,WAAW,GAAIC,KAAoB,IAAI;MACrC;MACA,MAAMC,aAAa,GAAID,KAAK,CAACE,MAAM,IAAIF,KAAK,CAACG,UAA0B;MACvE,IACGF,aAAa,CAACG,OAAO,KAAK,OAAO,IAAKH,aAAkC,CAACI,IAAI,KAAK,MAAM,IACzFJ,aAAa,CAACG,OAAO,KAAK,UAAU,EACpC;QACA;;MAGF,IAAI,IAAI,CAACE,eAAe,IAAIN,KAAK,CAACK,IAAI,KAAK,SAAS,EAAE;QACpD,IAAI,CAACR,QAAQ,CAAC;UACZQ,IAAI,EAAEb,eAAe;UACrBe,QAAQ,EAAEP,KAAK;UACfQ,GAAG,EAAER,KAAK,CAACQ,GAAG;UACdN,MAAM,EAAEF,KAAK,CAACE;SACf,CAAC;;MAGJ,IAAI,IAAI,CAACO,aAAa,IAAIT,KAAK,CAACK,IAAI,KAAK,OAAO,EAAE;QAChD,IAAI,CAACR,QAAQ,CAAC;UACZQ,IAAI,EAAEZ,aAAa;UACnBc,QAAQ,EAAEP,KAAK;UACfQ,GAAG,EAAER,KAAK,CAACQ,GAAG;UACdN,MAAM,EAAEF,KAAK,CAACE;SACf,CAAC;;IAEN,CAAC;IAtDC,IAAI,CAACI,eAAe,GAAG,IAAI,CAACR,OAAO,CAACY,MAAM;IAC1C,IAAI,CAACD,aAAa,GAAG,IAAI,CAACX,OAAO,CAACY,MAAM;IAExC,IAAI,CAACC,MAAM,GAAG,CAAC,IAAI,CAACb,OAAO,CAACa,MAAM,IAAI,EAAE,EAAEC,MAAM,CAACrB,UAAU,CAAC;IAE5DK,OAAO,CAACiB,QAAQ,GAAG,IAAI,CAACf,OAAO,CAACe,QAAQ,IAAI,CAAC;IAC7CjB,OAAO,CAACkB,KAAK,CAACC,OAAO,GAAG,MAAM;IAC9B,IAAI,CAACJ,MAAM,CAACK,OAAO,CAAChB,KAAK,IAAIJ,OAAO,CAACqB,gBAAgB,CAACjB,KAAK,EAAE,IAAI,CAACD,WAAW,CAAC,CAAC;EACjF;EAEAmB,OAAOA,CAAA;IACL,IAAI,CAACP,MAAM,CAACK,OAAO,CAAChB,KAAK,IAAI,IAAI,CAACJ,OAAO,CAACuB,mBAAmB,CAACnB,KAAK,EAAE,IAAI,CAACD,WAAW,CAAC,CAAC;EACzF;EAEA;;;;EAIAqB,eAAeA,CAACC,SAAiB,EAAEC,OAAgB;IACjD,IAAID,SAAS,KAAK7B,eAAe,EAAE;MACjC,IAAI,CAACc,eAAe,GAAGgB,OAAO;;IAEhC,IAAID,SAAS,KAAK5B,aAAa,EAAE;MAC/B,IAAI,CAACgB,aAAa,GAAGa,OAAO;;EAEhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}