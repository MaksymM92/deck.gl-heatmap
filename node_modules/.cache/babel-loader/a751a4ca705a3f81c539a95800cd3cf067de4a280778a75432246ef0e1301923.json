{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Model, Geometry } from '@luma.gl/core';\nimport { Layer, project32 } from '@deck.gl/core';\nimport vs from './triangle-layer-vertex.glsl';\nimport fs from './triangle-layer-fragment.glsl';\nexport default class TriangleLayer extends Layer {\n  getShaders() {\n    return {\n      vs,\n      fs,\n      modules: [project32]\n    };\n  }\n  initializeState(_ref) {\n    let {\n      gl\n    } = _ref;\n    const attributeManager = this.getAttributeManager();\n    attributeManager.add({\n      positions: {\n        size: 3,\n        noAlloc: true\n      },\n      texCoords: {\n        size: 2,\n        noAlloc: true\n      }\n    });\n    this.setState({\n      model: this._getModel(gl)\n    });\n  }\n  _getModel(gl) {\n    const {\n      vertexCount\n    } = this.props;\n    return new Model(gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: 6,\n        vertexCount\n      })\n    });\n  }\n  draw(_ref2) {\n    let {\n      uniforms\n    } = _ref2;\n    const {\n      model\n    } = this.state;\n    const {\n      texture,\n      maxTexture,\n      colorTexture,\n      intensity,\n      threshold,\n      aggregationMode,\n      colorDomain\n    } = this.props;\n    model.setUniforms({\n      ...uniforms,\n      texture,\n      maxTexture,\n      colorTexture,\n      intensity,\n      threshold,\n      aggregationMode,\n      colorDomain\n    }).draw();\n  }\n}\n_defineProperty(TriangleLayer, \"layerName\", 'TriangleLayer');","map":{"version":3,"names":["_defineProperty","Model","Geometry","Layer","project32","vs","fs","TriangleLayer","getShaders","modules","initializeState","_ref","gl","attributeManager","getAttributeManager","add","positions","size","noAlloc","texCoords","setState","model","_getModel","vertexCount","props","id","geometry","drawMode","draw","_ref2","uniforms","state","texture","maxTexture","colorTexture","intensity","threshold","aggregationMode","colorDomain","setUniforms"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@deck.gl/aggregation-layers/dist/esm/heatmap-layer/triangle-layer.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Model, Geometry } from '@luma.gl/core';\nimport { Layer, project32 } from '@deck.gl/core';\nimport vs from './triangle-layer-vertex.glsl';\nimport fs from './triangle-layer-fragment.glsl';\nexport default class TriangleLayer extends Layer {\n  getShaders() {\n    return {\n      vs,\n      fs,\n      modules: [project32]\n    };\n  }\n\n  initializeState({\n    gl\n  }) {\n    const attributeManager = this.getAttributeManager();\n    attributeManager.add({\n      positions: {\n        size: 3,\n        noAlloc: true\n      },\n      texCoords: {\n        size: 2,\n        noAlloc: true\n      }\n    });\n    this.setState({\n      model: this._getModel(gl)\n    });\n  }\n\n  _getModel(gl) {\n    const {\n      vertexCount\n    } = this.props;\n    return new Model(gl, { ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: 6,\n        vertexCount\n      })\n    });\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      model\n    } = this.state;\n    const {\n      texture,\n      maxTexture,\n      colorTexture,\n      intensity,\n      threshold,\n      aggregationMode,\n      colorDomain\n    } = this.props;\n    model.setUniforms({ ...uniforms,\n      texture,\n      maxTexture,\n      colorTexture,\n      intensity,\n      threshold,\n      aggregationMode,\n      colorDomain\n    }).draw();\n  }\n\n}\n\n_defineProperty(TriangleLayer, \"layerName\", 'TriangleLayer');\n//# sourceMappingURL=triangle-layer.js.map"],"mappings":"AAAA,OAAOA,eAAe,MAAM,2CAA2C;AACvE,SAASC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AAC/C,SAASC,KAAK,EAAEC,SAAS,QAAQ,eAAe;AAChD,OAAOC,EAAE,MAAM,8BAA8B;AAC7C,OAAOC,EAAE,MAAM,gCAAgC;AAC/C,eAAe,MAAMC,aAAa,SAASJ,KAAK,CAAC;EAC/CK,UAAUA,CAAA,EAAG;IACX,OAAO;MACLH,EAAE;MACFC,EAAE;MACFG,OAAO,EAAE,CAACL,SAAS;IACrB,CAAC;EACH;EAEAM,eAAeA,CAAAC,IAAA,EAEZ;IAAA,IAFa;MACdC;IACF,CAAC,GAAAD,IAAA;IACC,MAAME,gBAAgB,GAAG,IAAI,CAACC,mBAAmB,EAAE;IACnDD,gBAAgB,CAACE,GAAG,CAAC;MACnBC,SAAS,EAAE;QACTC,IAAI,EAAE,CAAC;QACPC,OAAO,EAAE;MACX,CAAC;MACDC,SAAS,EAAE;QACTF,IAAI,EAAE,CAAC;QACPC,OAAO,EAAE;MACX;IACF,CAAC,CAAC;IACF,IAAI,CAACE,QAAQ,CAAC;MACZC,KAAK,EAAE,IAAI,CAACC,SAAS,CAACV,EAAE;IAC1B,CAAC,CAAC;EACJ;EAEAU,SAASA,CAACV,EAAE,EAAE;IACZ,MAAM;MACJW;IACF,CAAC,GAAG,IAAI,CAACC,KAAK;IACd,OAAO,IAAIvB,KAAK,CAACW,EAAE,EAAE;MAAE,GAAG,IAAI,CAACJ,UAAU,EAAE;MACzCiB,EAAE,EAAE,IAAI,CAACD,KAAK,CAACC,EAAE;MACjBC,QAAQ,EAAE,IAAIxB,QAAQ,CAAC;QACrByB,QAAQ,EAAE,CAAC;QACXJ;MACF,CAAC;IACH,CAAC,CAAC;EACJ;EAEAK,IAAIA,CAAAC,KAAA,EAED;IAAA,IAFE;MACHC;IACF,CAAC,GAAAD,KAAA;IACC,MAAM;MACJR;IACF,CAAC,GAAG,IAAI,CAACU,KAAK;IACd,MAAM;MACJC,OAAO;MACPC,UAAU;MACVC,YAAY;MACZC,SAAS;MACTC,SAAS;MACTC,eAAe;MACfC;IACF,CAAC,GAAG,IAAI,CAACd,KAAK;IACdH,KAAK,CAACkB,WAAW,CAAC;MAAE,GAAGT,QAAQ;MAC7BE,OAAO;MACPC,UAAU;MACVC,YAAY;MACZC,SAAS;MACTC,SAAS;MACTC,eAAe;MACfC;IACF,CAAC,CAAC,CAACV,IAAI,EAAE;EACX;AAEF;AAEA5B,eAAe,CAACO,aAAa,EAAE,WAAW,EAAE,eAAe,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}