{"ast":null,"code":"var thirdPi = Math.PI / 3,\n  angles = [0, thirdPi, 2 * thirdPi, 3 * thirdPi, 4 * thirdPi, 5 * thirdPi];\nfunction pointX(d) {\n  return d[0];\n}\nfunction pointY(d) {\n  return d[1];\n}\nexport default function () {\n  var x0 = 0,\n    y0 = 0,\n    x1 = 1,\n    y1 = 1,\n    x = pointX,\n    y = pointY,\n    r,\n    dx,\n    dy;\n  function hexbin(points) {\n    var binsById = {},\n      bins = [],\n      i,\n      n = points.length;\n    for (i = 0; i < n; ++i) {\n      if (isNaN(px = +x.call(null, point = points[i], i, points)) || isNaN(py = +y.call(null, point, i, points))) continue;\n      var point,\n        px,\n        py,\n        pj = Math.round(py = py / dy),\n        pi = Math.round(px = px / dx - (pj & 1) / 2),\n        py1 = py - pj;\n      if (Math.abs(py1) * 3 > 1) {\n        var px1 = px - pi,\n          pi2 = pi + (px < pi ? -1 : 1) / 2,\n          pj2 = pj + (py < pj ? -1 : 1),\n          px2 = px - pi2,\n          py2 = py - pj2;\n        if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n      }\n      var id = pi + \"-\" + pj,\n        bin = binsById[id];\n      if (bin) bin.push(point);else {\n        bins.push(bin = binsById[id] = [point]);\n        bin.x = (pi + (pj & 1) / 2) * dx;\n        bin.y = pj * dy;\n      }\n    }\n    return bins;\n  }\n  function hexagon(radius) {\n    var x0 = 0,\n      y0 = 0;\n    return angles.map(function (angle) {\n      var x1 = Math.sin(angle) * radius,\n        y1 = -Math.cos(angle) * radius,\n        dx = x1 - x0,\n        dy = y1 - y0;\n      x0 = x1, y0 = y1;\n      return [dx, dy];\n    });\n  }\n  hexbin.hexagon = function (radius) {\n    return \"m\" + hexagon(radius == null ? r : +radius).join(\"l\") + \"z\";\n  };\n  hexbin.centers = function () {\n    var centers = [],\n      j = Math.round(y0 / dy),\n      i = Math.round(x0 / dx);\n    for (var y = j * dy; y < y1 + r; y += dy, ++j) {\n      for (var x = i * dx + (j & 1) * dx / 2; x < x1 + dx / 2; x += dx) {\n        centers.push([x, y]);\n      }\n    }\n    return centers;\n  };\n  hexbin.mesh = function () {\n    var fragment = hexagon(r).slice(0, 4).join(\"l\");\n    return hexbin.centers().map(function (p) {\n      return \"M\" + p + \"m\" + fragment;\n    }).join(\"\");\n  };\n  hexbin.x = function (_) {\n    return arguments.length ? (x = _, hexbin) : x;\n  };\n  hexbin.y = function (_) {\n    return arguments.length ? (y = _, hexbin) : y;\n  };\n  hexbin.radius = function (_) {\n    return arguments.length ? (r = +_, dx = r * 2 * Math.sin(thirdPi), dy = r * 1.5, hexbin) : r;\n  };\n  hexbin.size = function (_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], hexbin) : [x1 - x0, y1 - y0];\n  };\n  hexbin.extent = function (_) {\n    return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], hexbin) : [[x0, y0], [x1, y1]];\n  };\n  return hexbin.radius(1);\n}","map":{"version":3,"names":["thirdPi","Math","PI","angles","pointX","d","pointY","x0","y0","x1","y1","x","y","r","dx","dy","hexbin","points","binsById","bins","i","n","length","isNaN","px","call","point","py","pj","round","pi","py1","abs","px1","pi2","pj2","px2","py2","id","bin","push","hexagon","radius","map","angle","sin","cos","join","centers","j","mesh","fragment","slice","p","_","arguments","size","extent"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/d3-hexbin/src/hexbin.js"],"sourcesContent":["var thirdPi = Math.PI / 3,\n    angles = [0, thirdPi, 2 * thirdPi, 3 * thirdPi, 4 * thirdPi, 5 * thirdPi];\n\nfunction pointX(d) {\n  return d[0];\n}\n\nfunction pointY(d) {\n  return d[1];\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 1,\n      y1 = 1,\n      x = pointX,\n      y = pointY,\n      r,\n      dx,\n      dy;\n\n  function hexbin(points) {\n    var binsById = {}, bins = [], i, n = points.length;\n\n    for (i = 0; i < n; ++i) {\n      if (isNaN(px = +x.call(null, point = points[i], i, points))\n          || isNaN(py = +y.call(null, point, i, points))) continue;\n\n      var point,\n          px,\n          py,\n          pj = Math.round(py = py / dy),\n          pi = Math.round(px = px / dx - (pj & 1) / 2),\n          py1 = py - pj;\n\n      if (Math.abs(py1) * 3 > 1) {\n        var px1 = px - pi,\n            pi2 = pi + (px < pi ? -1 : 1) / 2,\n            pj2 = pj + (py < pj ? -1 : 1),\n            px2 = px - pi2,\n            py2 = py - pj2;\n        if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n      }\n\n      var id = pi + \"-\" + pj, bin = binsById[id];\n      if (bin) bin.push(point);\n      else {\n        bins.push(bin = binsById[id] = [point]);\n        bin.x = (pi + (pj & 1) / 2) * dx;\n        bin.y = pj * dy;\n      }\n    }\n\n    return bins;\n  }\n\n  function hexagon(radius) {\n    var x0 = 0, y0 = 0;\n    return angles.map(function(angle) {\n      var x1 = Math.sin(angle) * radius,\n          y1 = -Math.cos(angle) * radius,\n          dx = x1 - x0,\n          dy = y1 - y0;\n      x0 = x1, y0 = y1;\n      return [dx, dy];\n    });\n  }\n\n  hexbin.hexagon = function(radius) {\n    return \"m\" + hexagon(radius == null ? r : +radius).join(\"l\") + \"z\";\n  };\n\n  hexbin.centers = function() {\n    var centers = [],\n        j = Math.round(y0 / dy),\n        i = Math.round(x0 / dx);\n    for (var y = j * dy; y < y1 + r; y += dy, ++j) {\n      for (var x = i * dx + (j & 1) * dx / 2; x < x1 + dx / 2; x += dx) {\n        centers.push([x, y]);\n      }\n    }\n    return centers;\n  };\n\n  hexbin.mesh = function() {\n    var fragment = hexagon(r).slice(0, 4).join(\"l\");\n    return hexbin.centers().map(function(p) { return \"M\" + p + \"m\" + fragment; }).join(\"\");\n  };\n\n  hexbin.x = function(_) {\n    return arguments.length ? (x = _, hexbin) : x;\n  };\n\n  hexbin.y = function(_) {\n    return arguments.length ? (y = _, hexbin) : y;\n  };\n\n  hexbin.radius = function(_) {\n    return arguments.length ? (r = +_, dx = r * 2 * Math.sin(thirdPi), dy = r * 1.5, hexbin) : r;\n  };\n\n  hexbin.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], hexbin) : [x1 - x0, y1 - y0];\n  };\n\n  hexbin.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], hexbin) : [[x0, y0], [x1, y1]];\n  };\n\n  return hexbin.radius(1);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}