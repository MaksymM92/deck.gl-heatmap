{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Layer, project32, picking, UNIT } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/core';\nimport vs from './scatterplot-layer-vertex.glsl';\nimport fs from './scatterplot-layer-fragment.glsl';\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n  radiusUnits: 'meters',\n  radiusScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  radiusMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  radiusMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  lineWidthUnits: 'meters',\n  lineWidthScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  lineWidthMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  lineWidthMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  stroked: false,\n  filled: true,\n  billboard: false,\n  antialiasing: true,\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  getRadius: {\n    type: 'accessor',\n    value: 1\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  strokeWidth: {\n    deprecatedFor: 'getLineWidth'\n  },\n  outline: {\n    deprecatedFor: 'stroked'\n  },\n  getColor: {\n    deprecatedFor: ['getFillColor', 'getLineColor']\n  }\n};\nexport default class ScatterplotLayer extends Layer {\n  getShaders() {\n    return super.getShaders({\n      vs,\n      fs,\n      modules: [project32, picking]\n    });\n  }\n  initializeState() {\n    this.getAttributeManager().addInstanced({\n      instancePositions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceRadius: {\n        size: 1,\n        transition: true,\n        accessor: 'getRadius',\n        defaultValue: 1\n      },\n      instanceFillColors: {\n        size: this.props.colorFormat.length,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getFillColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineColors: {\n        size: this.props.colorFormat.length,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getLineColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getLineWidth',\n        defaultValue: 1\n      }\n    });\n  }\n  updateState(params) {\n    super.updateState(params);\n    if (params.changeFlags.extensionsChanged) {\n      var _this$state$model;\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n  draw(_ref) {\n    let {\n      uniforms\n    } = _ref;\n    const {\n      radiusUnits,\n      radiusScale,\n      radiusMinPixels,\n      radiusMaxPixels,\n      stroked,\n      filled,\n      billboard,\n      antialiasing,\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels\n    } = this.props;\n    this.state.model.setUniforms(uniforms).setUniforms({\n      stroked: stroked ? 1 : 0,\n      filled,\n      billboard,\n      antialiasing,\n      radiusUnits: UNIT[radiusUnits],\n      radiusScale,\n      radiusMinPixels,\n      radiusMaxPixels,\n      lineWidthUnits: UNIT[lineWidthUnits],\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels\n    }).draw();\n  }\n  _getModel(gl) {\n    const positions = [-1, -1, 0, 1, -1, 0, 1, 1, 0, -1, 1, 0];\n    return new Model(gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: 6,\n        vertexCount: 4,\n        attributes: {\n          positions: {\n            size: 3,\n            value: new Float32Array(positions)\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n}\n_defineProperty(ScatterplotLayer, \"defaultProps\", defaultProps);\n_defineProperty(ScatterplotLayer, \"layerName\", 'ScatterplotLayer');","map":{"version":3,"names":["_defineProperty","Layer","project32","picking","UNIT","Model","Geometry","vs","fs","DEFAULT_COLOR","defaultProps","radiusUnits","radiusScale","type","min","value","radiusMinPixels","radiusMaxPixels","Number","MAX_SAFE_INTEGER","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","stroked","filled","billboard","antialiasing","getPosition","x","position","getRadius","getFillColor","getLineColor","getLineWidth","strokeWidth","deprecatedFor","outline","getColor","ScatterplotLayer","getShaders","modules","initializeState","getAttributeManager","addInstanced","instancePositions","size","fp64","use64bitPositions","transition","accessor","instanceRadius","defaultValue","instanceFillColors","props","colorFormat","length","normalized","instanceLineColors","instanceLineWidths","updateState","params","changeFlags","extensionsChanged","_this$state$model","gl","context","state","model","delete","_getModel","invalidateAll","draw","_ref","uniforms","setUniforms","positions","id","geometry","drawMode","vertexCount","attributes","Float32Array","isInstanced"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Layer, project32, picking, UNIT } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/core';\nimport vs from './scatterplot-layer-vertex.glsl';\nimport fs from './scatterplot-layer-fragment.glsl';\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n  radiusUnits: 'meters',\n  radiusScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  radiusMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  radiusMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  lineWidthUnits: 'meters',\n  lineWidthScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  lineWidthMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  lineWidthMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  stroked: false,\n  filled: true,\n  billboard: false,\n  antialiasing: true,\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  getRadius: {\n    type: 'accessor',\n    value: 1\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  strokeWidth: {\n    deprecatedFor: 'getLineWidth'\n  },\n  outline: {\n    deprecatedFor: 'stroked'\n  },\n  getColor: {\n    deprecatedFor: ['getFillColor', 'getLineColor']\n  }\n};\nexport default class ScatterplotLayer extends Layer {\n  getShaders() {\n    return super.getShaders({\n      vs,\n      fs,\n      modules: [project32, picking]\n    });\n  }\n\n  initializeState() {\n    this.getAttributeManager().addInstanced({\n      instancePositions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceRadius: {\n        size: 1,\n        transition: true,\n        accessor: 'getRadius',\n        defaultValue: 1\n      },\n      instanceFillColors: {\n        size: this.props.colorFormat.length,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getFillColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineColors: {\n        size: this.props.colorFormat.length,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getLineColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getLineWidth',\n        defaultValue: 1\n      }\n    });\n  }\n\n  updateState(params) {\n    super.updateState(params);\n\n    if (params.changeFlags.extensionsChanged) {\n      var _this$state$model;\n\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      radiusUnits,\n      radiusScale,\n      radiusMinPixels,\n      radiusMaxPixels,\n      stroked,\n      filled,\n      billboard,\n      antialiasing,\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels\n    } = this.props;\n    this.state.model.setUniforms(uniforms).setUniforms({\n      stroked: stroked ? 1 : 0,\n      filled,\n      billboard,\n      antialiasing,\n      radiusUnits: UNIT[radiusUnits],\n      radiusScale,\n      radiusMinPixels,\n      radiusMaxPixels,\n      lineWidthUnits: UNIT[lineWidthUnits],\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels\n    }).draw();\n  }\n\n  _getModel(gl) {\n    const positions = [-1, -1, 0, 1, -1, 0, 1, 1, 0, -1, 1, 0];\n    return new Model(gl, { ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: 6,\n        vertexCount: 4,\n        attributes: {\n          positions: {\n            size: 3,\n            value: new Float32Array(positions)\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n\n}\n\n_defineProperty(ScatterplotLayer, \"defaultProps\", defaultProps);\n\n_defineProperty(ScatterplotLayer, \"layerName\", 'ScatterplotLayer');\n//# sourceMappingURL=scatterplot-layer.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}