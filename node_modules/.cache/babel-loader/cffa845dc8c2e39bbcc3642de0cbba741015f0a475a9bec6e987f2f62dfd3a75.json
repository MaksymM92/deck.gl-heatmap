{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { CompositeLayer } from '@deck.gl/core';\nimport GPUGridAggregator from '../utils/gpu-grid-aggregation/gpu-grid-aggregator';\nimport GPUGridLayer from '../gpu-grid-layer/gpu-grid-layer';\nimport CPUGridLayer from '../cpu-grid-layer/cpu-grid-layer';\nconst defaultProps = {\n  ...GPUGridLayer.defaultProps,\n  ...CPUGridLayer.defaultProps,\n  gpuAggregation: false\n};\nexport default class GridLayer extends CompositeLayer {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", void 0);\n  }\n  initializeState() {\n    this.state = {\n      useGPUAggregation: true\n    };\n  }\n  updateState(_ref) {\n    let {\n      props\n    } = _ref;\n    this.setState({\n      useGPUAggregation: this.canUseGPUAggregation(props)\n    });\n  }\n  renderLayers() {\n    const {\n      data,\n      updateTriggers\n    } = this.props;\n    const id = this.state.useGPUAggregation ? 'GPU' : 'CPU';\n    const LayerType = this.state.useGPUAggregation ? this.getSubLayerClass('GPU', GPUGridLayer) : this.getSubLayerClass('CPU', CPUGridLayer);\n    return new LayerType(this.props, this.getSubLayerProps({\n      id,\n      updateTriggers\n    }), {\n      data\n    });\n  }\n  canUseGPUAggregation(props) {\n    const {\n      gpuAggregation,\n      lowerPercentile,\n      upperPercentile,\n      getColorValue,\n      getElevationValue,\n      colorScaleType\n    } = props;\n    if (!gpuAggregation) {\n      return false;\n    }\n    if (!GPUGridAggregator.isSupported(this.context.gl)) {\n      return false;\n    }\n    if (lowerPercentile !== 0 || upperPercentile !== 100) {\n      return false;\n    }\n    if (getColorValue !== null || getElevationValue !== null) {\n      return false;\n    }\n    if (colorScaleType === 'quantile' || colorScaleType === 'ordinal') {\n      return false;\n    }\n    return true;\n  }\n}\n_defineProperty(GridLayer, \"layerName\", 'GridLayer');\n_defineProperty(GridLayer, \"defaultProps\", defaultProps);","map":{"version":3,"names":["_defineProperty","CompositeLayer","GPUGridAggregator","GPUGridLayer","CPUGridLayer","defaultProps","gpuAggregation","GridLayer","constructor","arguments","initializeState","state","useGPUAggregation","updateState","_ref","props","setState","canUseGPUAggregation","renderLayers","data","updateTriggers","id","LayerType","getSubLayerClass","getSubLayerProps","lowerPercentile","upperPercentile","getColorValue","getElevationValue","colorScaleType","isSupported","context","gl"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@deck.gl/aggregation-layers/dist/esm/grid-layer/grid-layer.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { CompositeLayer } from '@deck.gl/core';\nimport GPUGridAggregator from '../utils/gpu-grid-aggregation/gpu-grid-aggregator';\nimport GPUGridLayer from '../gpu-grid-layer/gpu-grid-layer';\nimport CPUGridLayer from '../cpu-grid-layer/cpu-grid-layer';\nconst defaultProps = { ...GPUGridLayer.defaultProps,\n  ...CPUGridLayer.defaultProps,\n  gpuAggregation: false\n};\nexport default class GridLayer extends CompositeLayer {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", void 0);\n  }\n\n  initializeState() {\n    this.state = {\n      useGPUAggregation: true\n    };\n  }\n\n  updateState({\n    props\n  }) {\n    this.setState({\n      useGPUAggregation: this.canUseGPUAggregation(props)\n    });\n  }\n\n  renderLayers() {\n    const {\n      data,\n      updateTriggers\n    } = this.props;\n    const id = this.state.useGPUAggregation ? 'GPU' : 'CPU';\n    const LayerType = this.state.useGPUAggregation ? this.getSubLayerClass('GPU', GPUGridLayer) : this.getSubLayerClass('CPU', CPUGridLayer);\n    return new LayerType(this.props, this.getSubLayerProps({\n      id,\n      updateTriggers\n    }), {\n      data\n    });\n  }\n\n  canUseGPUAggregation(props) {\n    const {\n      gpuAggregation,\n      lowerPercentile,\n      upperPercentile,\n      getColorValue,\n      getElevationValue,\n      colorScaleType\n    } = props;\n\n    if (!gpuAggregation) {\n      return false;\n    }\n\n    if (!GPUGridAggregator.isSupported(this.context.gl)) {\n      return false;\n    }\n\n    if (lowerPercentile !== 0 || upperPercentile !== 100) {\n      return false;\n    }\n\n    if (getColorValue !== null || getElevationValue !== null) {\n      return false;\n    }\n\n    if (colorScaleType === 'quantile' || colorScaleType === 'ordinal') {\n      return false;\n    }\n\n    return true;\n  }\n\n}\n\n_defineProperty(GridLayer, \"layerName\", 'GridLayer');\n\n_defineProperty(GridLayer, \"defaultProps\", defaultProps);\n//# sourceMappingURL=grid-layer.js.map"],"mappings":"AAAA,OAAOA,eAAe,MAAM,2CAA2C;AACvE,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,iBAAiB,MAAM,mDAAmD;AACjF,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,MAAMC,YAAY,GAAG;EAAE,GAAGF,YAAY,CAACE,YAAY;EACjD,GAAGD,YAAY,CAACC,YAAY;EAC5BC,cAAc,EAAE;AAClB,CAAC;AACD,eAAe,MAAMC,SAAS,SAASN,cAAc,CAAC;EACpDO,WAAWA,CAAA,EAAU;IACnB,KAAK,CAAC,GAAAC,SAAO,CAAC;IAEdT,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;EACxC;EAEAU,eAAeA,CAAA,EAAG;IAChB,IAAI,CAACC,KAAK,GAAG;MACXC,iBAAiB,EAAE;IACrB,CAAC;EACH;EAEAC,WAAWA,CAAAC,IAAA,EAER;IAAA,IAFS;MACVC;IACF,CAAC,GAAAD,IAAA;IACC,IAAI,CAACE,QAAQ,CAAC;MACZJ,iBAAiB,EAAE,IAAI,CAACK,oBAAoB,CAACF,KAAK;IACpD,CAAC,CAAC;EACJ;EAEAG,YAAYA,CAAA,EAAG;IACb,MAAM;MACJC,IAAI;MACJC;IACF,CAAC,GAAG,IAAI,CAACL,KAAK;IACd,MAAMM,EAAE,GAAG,IAAI,CAACV,KAAK,CAACC,iBAAiB,GAAG,KAAK,GAAG,KAAK;IACvD,MAAMU,SAAS,GAAG,IAAI,CAACX,KAAK,CAACC,iBAAiB,GAAG,IAAI,CAACW,gBAAgB,CAAC,KAAK,EAAEpB,YAAY,CAAC,GAAG,IAAI,CAACoB,gBAAgB,CAAC,KAAK,EAAEnB,YAAY,CAAC;IACxI,OAAO,IAAIkB,SAAS,CAAC,IAAI,CAACP,KAAK,EAAE,IAAI,CAACS,gBAAgB,CAAC;MACrDH,EAAE;MACFD;IACF,CAAC,CAAC,EAAE;MACFD;IACF,CAAC,CAAC;EACJ;EAEAF,oBAAoBA,CAACF,KAAK,EAAE;IAC1B,MAAM;MACJT,cAAc;MACdmB,eAAe;MACfC,eAAe;MACfC,aAAa;MACbC,iBAAiB;MACjBC;IACF,CAAC,GAAGd,KAAK;IAET,IAAI,CAACT,cAAc,EAAE;MACnB,OAAO,KAAK;IACd;IAEA,IAAI,CAACJ,iBAAiB,CAAC4B,WAAW,CAAC,IAAI,CAACC,OAAO,CAACC,EAAE,CAAC,EAAE;MACnD,OAAO,KAAK;IACd;IAEA,IAAIP,eAAe,KAAK,CAAC,IAAIC,eAAe,KAAK,GAAG,EAAE;MACpD,OAAO,KAAK;IACd;IAEA,IAAIC,aAAa,KAAK,IAAI,IAAIC,iBAAiB,KAAK,IAAI,EAAE;MACxD,OAAO,KAAK;IACd;IAEA,IAAIC,cAAc,KAAK,UAAU,IAAIA,cAAc,KAAK,SAAS,EAAE;MACjE,OAAO,KAAK;IACd;IAEA,OAAO,IAAI;EACb;AAEF;AAEA7B,eAAe,CAACO,SAAS,EAAE,WAAW,EAAE,WAAW,CAAC;AAEpDP,eAAe,CAACO,SAAS,EAAE,cAAc,EAAEF,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}