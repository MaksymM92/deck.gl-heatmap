{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { CubeGeometry } from '@luma.gl/core';\nimport { UNIT } from '@deck.gl/core';\nimport ColumnLayer from './column-layer';\nconst defaultProps = {\n  cellSize: {\n    type: 'number',\n    min: 0,\n    value: 1000\n  },\n  offset: {\n    type: 'array',\n    value: [1, 1]\n  }\n};\nexport default class GridCellLayer extends ColumnLayer {\n  getGeometry(diskResolution) {\n    return new CubeGeometry();\n  }\n  draw(_ref) {\n    let {\n      uniforms\n    } = _ref;\n    const {\n      elevationScale,\n      extruded,\n      offset,\n      coverage,\n      cellSize,\n      angle,\n      radiusUnits\n    } = this.props;\n    this.state.model.setUniforms(uniforms).setUniforms({\n      radius: cellSize / 2,\n      radiusUnits: UNIT[radiusUnits],\n      angle,\n      offset,\n      extruded,\n      coverage,\n      elevationScale,\n      edgeDistance: 1,\n      isWireframe: false\n    }).draw();\n  }\n}\n_defineProperty(GridCellLayer, \"layerName\", 'GridCellLayer');\n_defineProperty(GridCellLayer, \"defaultProps\", defaultProps);","map":{"version":3,"names":["_defineProperty","CubeGeometry","UNIT","ColumnLayer","defaultProps","cellSize","type","min","value","offset","GridCellLayer","getGeometry","diskResolution","draw","_ref","uniforms","elevationScale","extruded","coverage","angle","radiusUnits","props","state","model","setUniforms","radius","edgeDistance","isWireframe"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@deck.gl/layers/dist/esm/column-layer/grid-cell-layer.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { CubeGeometry } from '@luma.gl/core';\nimport { UNIT } from '@deck.gl/core';\nimport ColumnLayer from './column-layer';\nconst defaultProps = {\n  cellSize: {\n    type: 'number',\n    min: 0,\n    value: 1000\n  },\n  offset: {\n    type: 'array',\n    value: [1, 1]\n  }\n};\nexport default class GridCellLayer extends ColumnLayer {\n  getGeometry(diskResolution) {\n    return new CubeGeometry();\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      elevationScale,\n      extruded,\n      offset,\n      coverage,\n      cellSize,\n      angle,\n      radiusUnits\n    } = this.props;\n    this.state.model.setUniforms(uniforms).setUniforms({\n      radius: cellSize / 2,\n      radiusUnits: UNIT[radiusUnits],\n      angle,\n      offset,\n      extruded,\n      coverage,\n      elevationScale,\n      edgeDistance: 1,\n      isWireframe: false\n    }).draw();\n  }\n\n}\n\n_defineProperty(GridCellLayer, \"layerName\", 'GridCellLayer');\n\n_defineProperty(GridCellLayer, \"defaultProps\", defaultProps);\n//# sourceMappingURL=grid-cell-layer.js.map"],"mappings":"AAAA,OAAOA,eAAe,MAAM,2CAA2C;AACvE,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,IAAI,QAAQ,eAAe;AACpC,OAAOC,WAAW,MAAM,gBAAgB;AACxC,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE;IACRC,IAAI,EAAE,QAAQ;IACdC,GAAG,EAAE,CAAC;IACNC,KAAK,EAAE;EACT,CAAC;EACDC,MAAM,EAAE;IACNH,IAAI,EAAE,OAAO;IACbE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC;EACd;AACF,CAAC;AACD,eAAe,MAAME,aAAa,SAASP,WAAW,CAAC;EACrDQ,WAAWA,CAACC,cAAc,EAAE;IAC1B,OAAO,IAAIX,YAAY,EAAE;EAC3B;EAEAY,IAAIA,CAAAC,IAAA,EAED;IAAA,IAFE;MACHC;IACF,CAAC,GAAAD,IAAA;IACC,MAAM;MACJE,cAAc;MACdC,QAAQ;MACRR,MAAM;MACNS,QAAQ;MACRb,QAAQ;MACRc,KAAK;MACLC;IACF,CAAC,GAAG,IAAI,CAACC,KAAK;IACd,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,WAAW,CAACT,QAAQ,CAAC,CAACS,WAAW,CAAC;MACjDC,MAAM,EAAEpB,QAAQ,GAAG,CAAC;MACpBe,WAAW,EAAElB,IAAI,CAACkB,WAAW,CAAC;MAC9BD,KAAK;MACLV,MAAM;MACNQ,QAAQ;MACRC,QAAQ;MACRF,cAAc;MACdU,YAAY,EAAE,CAAC;MACfC,WAAW,EAAE;IACf,CAAC,CAAC,CAACd,IAAI,EAAE;EACX;AAEF;AAEAb,eAAe,CAACU,aAAa,EAAE,WAAW,EAAE,eAAe,CAAC;AAE5DV,eAAe,CAACU,aAAa,EAAE,cAAc,EAAEN,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}