{"ast":null,"code":"var _jsxFileName = \"/Users/maks/Desktop/projects/geo-viz/src/components/MapBox/components/Widget.jsx\",\n  _s = $RefreshSig$();\nimport './Widget.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Widget = _ref => {\n  _s();\n  let {\n    handleUpdateLayers\n  } = _ref;\n  const [inputValues, setInputValues] = useState({\n    intensity: 2,\n    radiusPixels: 30,\n    threshold: 0.03\n  });\n  const handleInputsChange = (event, type) => {\n    inputValues[type] = +event.target.value;\n    const updatedValues = inputValues;\n    setInputValues(updatedValues);\n    handleUpdateLayers(inputValues);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Change heatmap view\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-widget-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"intensity\",\n        children: \"Intensity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"intensity\",\n        name: \"intensity\",\n        type: \"range\",\n        min: 2,\n        max: 9,\n        onChange: event => handleInputsChange(event, 'intensity')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-widget-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"radius\",\n        children: \"Radius\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"radius\",\n        name: \"radius\",\n        type: \"range\",\n        min: 1,\n        max: 30,\n        onChange: event => handleInputsChange(event, 'radiusPixels')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-widget-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"threshold\",\n        children: \"Threshold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"threshold\",\n        name: \"threshold\",\n        type: \"range\",\n        min: 0.1,\n        max: 1,\n        step: 0.1,\n        onChange: event => handleInputsChange(event, 'threshold')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(Widget, \"v0REbzPdlQ//ToVDxeyBgSDnHEI=\");\n_c = Widget;\nvar _c;\n$RefreshReg$(_c, \"Widget\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Widget","_ref","_s","handleUpdateLayers","inputValues","setInputValues","intensity","radiusPixels","threshold","handleInputsChange","event","type","target","value","updatedValues","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","name","min","max","onChange","step","_c","$RefreshReg$"],"sources":["/Users/maks/Desktop/projects/geo-viz/src/components/MapBox/components/Widget.jsx"],"sourcesContent":["import './Widget.css';\nimport {useState} from \"react\";\n\nexport const Widget = ({handleUpdateLayers}) => {\n    const [inputValues, setInputValues] = useState({\n        intensity: 2,\n        radiusPixels: 30,\n        threshold:  0.03,\n    })\n\n    const handleInputsChange = (event, type) => {\n        inputValues[type] = +event.target.value;\n        const updatedValues = inputValues;\n        setInputValues(updatedValues);\n        handleUpdateLayers(inputValues);\n    }\n\n    return (\n        <div className=\"map-widget\">\n            <div>\n                <h3>Change heatmap view</h3>\n            </div>\n            <div className=\"map-widget-input\">\n                <label htmlFor=\"intensity\">Intensity</label>\n                <input id=\"intensity\" name=\"intensity\" type=\"range\" min={2} max={9} onChange={(event) => handleInputsChange(event, 'intensity')}/>\n            </div>\n            <div className=\"map-widget-input\">\n                <label htmlFor=\"radius\">Radius</label>\n                <input id=\"radius\" name=\"radius\" type=\"range\" min={1} max={30} onChange={(event) => handleInputsChange(event, 'radiusPixels')}/>\n            </div>\n            <div className=\"map-widget-input\">\n                <label htmlFor=\"threshold\">Threshold</label>\n                <input id=\"threshold\" name=\"threshold\" type=\"range\" min={0.1} max={1} step={0.1} onChange={(event) => handleInputsChange(event, 'threshold')}/>\n            </div>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}