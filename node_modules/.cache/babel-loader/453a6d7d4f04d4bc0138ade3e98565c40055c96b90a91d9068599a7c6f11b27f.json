{"ast":null,"code":"import Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec4 from 'gl-matrix/vec3';\nimport { vec4_transformMat2, vec4_transformMat3 } from '../lib/gl-matrix-extras';\nlet ZERO;\nexport default class Vector4 extends Vector {\n  static get ZERO() {\n    if (!ZERO) {\n      ZERO = new Vector4(0, 0, 0, 0);\n      Object.freeze(ZERO);\n    }\n    return ZERO;\n  }\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let w = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    super(-0, -0, -0, -0);\n    if (isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n        checkNumber(w);\n      }\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n      this[3] = w;\n    }\n  }\n  set(x, y, z, w) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = w;\n    return this.check();\n  }\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    return this.check();\n  }\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n      checkNumber(object.w);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    this[3] = object.w;\n    return this;\n  }\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    object.w = this[3];\n    return object;\n  }\n  get ELEMENTS() {\n    return 4;\n  }\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n  get w() {\n    return this[3];\n  }\n  set w(value) {\n    this[3] = checkNumber(value);\n  }\n  transform(matrix4) {\n    vec4.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n  transformByMatrix3(matrix3) {\n    vec4_transformMat3(this, this, matrix3);\n    return this.check();\n  }\n  transformByMatrix2(matrix2) {\n    vec4_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n  transformByQuaternion(quaternion) {\n    vec4.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n  applyMatrix4(m) {\n    m.transform(this, this);\n    return this;\n  }\n}","map":{"version":3,"names":["Vector","config","isArray","checkNumber","vec4","vec4_transformMat2","vec4_transformMat3","ZERO","Vector4","Object","freeze","constructor","x","arguments","length","undefined","y","z","w","copy","debug","set","check","array","fromObject","object","toObject","ELEMENTS","value","transform","matrix4","transformMat4","transformByMatrix3","matrix3","transformByMatrix2","matrix2","transformByQuaternion","quaternion","transformQuat","applyMatrix4","m"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@math.gl/core/src/classes/vector4.ts"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\n\nimport Vector from './base/vector';\nimport {config, isArray} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\nimport * as vec4 from 'gl-matrix/vec3';\n/* eslint-disable camelcase */\nimport {vec4_transformMat2, vec4_transformMat3} from '../lib/gl-matrix-extras';\nimport {NumericArray} from '@math.gl/types';\n\nimport type Matrix4 from './matrix4';\n\nlet ZERO: Vector4;\n\n/**\n * Four-element vector class.\n * Subclass of Array<number>\n */\nexport default class Vector4 extends Vector {\n  static get ZERO(): Vector4 {\n    if (!ZERO) {\n      ZERO = new Vector4(0, 0, 0, 0);\n      Object.freeze(ZERO);\n    }\n    return ZERO;\n  }\n\n  constructor(x: number | Readonly<NumericArray> = 0, y: number = 0, z: number = 0, w: number = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0);\n    if (isArray(x) && arguments.length === 1) {\n      this.copy(x as Readonly<NumericArray>);\n    } else {\n      // this.set(x, y, z, w);\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n        checkNumber(w);\n      }\n      this[0] = x as number;\n      this[1] = y;\n      this[2] = z;\n      this[3] = w;\n    }\n  }\n\n  set(x: number, y: number, z: number, w: number): this {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = w;\n    return this.check();\n  }\n\n  copy(array: Readonly<NumericArray>): this {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    return this.check();\n  }\n\n  fromObject(object: {x: number; y: number; z: number; w: number}): this {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n      checkNumber(object.w);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    this[3] = object.w;\n    return this;\n  }\n\n  toObject(object: {x?: number; y?: number; z?: number; w?: number}): {\n    x: number;\n    y: number;\n    z: number;\n    w: number;\n  } {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    object.w = this[3];\n    return object as {\n      x: number;\n      y: number;\n      z: number;\n      w: number;\n    };\n  }\n\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS(): number {\n    return 4;\n  }\n\n  get z(): number {\n    return this[2];\n  }\n  set z(value: number) {\n    this[2] = checkNumber(value);\n  }\n  get w(): number {\n    return this[3];\n  }\n  set w(value: number) {\n    this[3] = checkNumber(value);\n  }\n\n  transform(matrix4: Readonly<NumericArray>): this {\n    vec4.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3: Readonly<NumericArray>): this {\n    vec4_transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2: Readonly<NumericArray>): this {\n    vec4_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion: Readonly<NumericArray>): this {\n    vec4.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n\n  // three.js compatibility\n  applyMatrix4(m: Matrix4): this {\n    m.transform(this, this);\n    return this;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}