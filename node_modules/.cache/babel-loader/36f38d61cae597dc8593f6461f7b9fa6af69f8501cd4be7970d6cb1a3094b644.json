{"ast":null,"code":"import { normalizeTransitionSettings } from './attribute/attribute-transition-utils';\nimport CPUInterpolationTransition from '../transitions/cpu-interpolation-transition';\nimport CPUSpringTransition from '../transitions/cpu-spring-transition';\nimport log from '../utils/log';\nconst TRANSITION_TYPES = {\n  interpolation: CPUInterpolationTransition,\n  spring: CPUSpringTransition\n};\nexport default class UniformTransitionManager {\n  constructor(timeline) {\n    this.transitions = new Map();\n    this.timeline = timeline;\n  }\n  get active() {\n    return this.transitions.size > 0;\n  }\n  add(key, fromValue, toValue, settings) {\n    const {\n      transitions\n    } = this;\n    if (transitions.has(key)) {\n      const transition = transitions.get(key);\n      const {\n        value = transition.settings.fromValue\n      } = transition;\n      fromValue = value;\n      this.remove(key);\n    }\n    settings = normalizeTransitionSettings(settings);\n    if (!settings) {\n      return;\n    }\n    const TransitionType = TRANSITION_TYPES[settings.type];\n    if (!TransitionType) {\n      log.error(\"unsupported transition type '\".concat(settings.type, \"'\"))();\n      return;\n    }\n    const transition = new TransitionType(this.timeline);\n    transition.start({\n      ...settings,\n      fromValue,\n      toValue\n    });\n    transitions.set(key, transition);\n  }\n  remove(key) {\n    const {\n      transitions\n    } = this;\n    if (transitions.has(key)) {\n      transitions.get(key).cancel();\n      transitions.delete(key);\n    }\n  }\n  update() {\n    const propsInTransition = {};\n    for (const [key, transition] of this.transitions) {\n      transition.update();\n      propsInTransition[key] = transition.value;\n      if (!transition.inProgress) {\n        this.remove(key);\n      }\n    }\n    return propsInTransition;\n  }\n  clear() {\n    for (const key of this.transitions.keys()) {\n      this.remove(key);\n    }\n  }\n}","map":{"version":3,"names":["normalizeTransitionSettings","CPUInterpolationTransition","CPUSpringTransition","log","TRANSITION_TYPES","interpolation","spring","UniformTransitionManager","constructor","timeline","transitions","Map","active","size","add","key","fromValue","toValue","settings","has","transition","get","value","remove","TransitionType","type","error","concat","start","set","cancel","delete","update","propsInTransition","inProgress","clear","keys"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@deck.gl/core/src/lib/uniform-transition-manager.js"],"sourcesContent":["import {normalizeTransitionSettings} from './attribute/attribute-transition-utils';\nimport CPUInterpolationTransition from '../transitions/cpu-interpolation-transition';\nimport CPUSpringTransition from '../transitions/cpu-spring-transition';\nimport log from '../utils/log';\n\nconst TRANSITION_TYPES = {\n  interpolation: CPUInterpolationTransition,\n  spring: CPUSpringTransition\n};\n\nexport default class UniformTransitionManager {\n  constructor(timeline) {\n    this.transitions = new Map();\n    this.timeline = timeline;\n  }\n\n  get active() {\n    return this.transitions.size > 0;\n  }\n\n  add(key, fromValue, toValue, settings) {\n    const {transitions} = this;\n    if (transitions.has(key)) {\n      const transition = transitions.get(key);\n      // value may not be available if `update()` has not been called. Fallback to `fromValue`\n      const {value = transition.settings.fromValue} = transition;\n      // start from interrupted position\n      fromValue = value;\n      this.remove(key);\n    }\n\n    settings = normalizeTransitionSettings(settings);\n    if (!settings) {\n      return;\n    }\n\n    const TransitionType = TRANSITION_TYPES[settings.type];\n    if (!TransitionType) {\n      log.error(`unsupported transition type '${settings.type}'`)();\n      return;\n    }\n    const transition = new TransitionType(this.timeline);\n    transition.start({\n      ...settings,\n      fromValue,\n      toValue\n    });\n    transitions.set(key, transition);\n  }\n\n  remove(key) {\n    const {transitions} = this;\n    if (transitions.has(key)) {\n      transitions.get(key).cancel();\n      transitions.delete(key);\n    }\n  }\n\n  update() {\n    const propsInTransition = {};\n\n    for (const [key, transition] of this.transitions) {\n      transition.update();\n      propsInTransition[key] = transition.value;\n      if (!transition.inProgress) {\n        // transition ended\n        this.remove(key);\n      }\n    }\n\n    return propsInTransition;\n  }\n\n  clear() {\n    for (const key of this.transitions.keys()) {\n      this.remove(key);\n    }\n  }\n}\n"],"mappings":"AAAA,SAAQA,2BAAR,QAA0C,wCAA1C;AACA,OAAOC,0BAAP,MAAuC,6CAAvC;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAEA,MAAMC,gBAAgB,GAAG;EACvBC,aAAa,EAAEJ,0BADQ;EAEvBK,MAAM,EAAEJ;AAFe,CAAzB;AAKA,eAAe,MAAMK,wBAAN,CAA+B;EAC5CC,WAAWA,CAACC,QAAD,EAAW;IACpB,KAAKC,WAAL,GAAmB,IAAIC,GAAJ,EAAnB;IACA,KAAKF,QAAL,GAAgBA,QAAhB;EACD;EAES,IAANG,MAAMA,CAAA,EAAG;IACX,OAAO,KAAKF,WAAL,CAAiBG,IAAjB,GAAwB,CAA/B;EACD;EAEDC,GAAGA,CAACC,GAAD,EAAMC,SAAN,EAAiBC,OAAjB,EAA0BC,QAA1B,EAAoC;IACrC,MAAM;MAACR;IAAD,IAAgB,IAAtB;IACA,IAAIA,WAAW,CAACS,GAAZ,CAAgBJ,GAAhB,CAAJ,EAA0B;MACxB,MAAMK,UAAU,GAAGV,WAAW,CAACW,GAAZ,CAAgBN,GAAhB,CAAnB;MAEA,MAAM;QAACO,KAAK,GAAGF,UAAU,CAACF,QAAX,CAAoBF;MAA7B,IAA0CI,UAAhD;MAEAJ,SAAS,GAAGM,KAAZ;MACA,KAAKC,MAAL,CAAYR,GAAZ;IACD;IAEDG,QAAQ,GAAGlB,2BAA2B,CAACkB,QAAD,CAAtC;IACA,IAAI,CAACA,QAAL,EAAe;MACb;IACD;IAED,MAAMM,cAAc,GAAGpB,gBAAgB,CAACc,QAAQ,CAACO,IAAV,CAAvC;IACA,IAAI,CAACD,cAAL,EAAqB;MACnBrB,GAAG,CAACuB,KAAJ,iCAAAC,MAAA,CAA0CT,QAAQ,CAACO,IAAnD;MACA;IACD;IACD,MAAML,UAAU,GAAG,IAAII,cAAJ,CAAmB,KAAKf,QAAxB,CAAnB;IACAW,UAAU,CAACQ,KAAX,CAAiB;MACf,GAAGV,QADY;MAEfF,SAFe;MAGfC;IAHe,CAAjB;IAKAP,WAAW,CAACmB,GAAZ,CAAgBd,GAAhB,EAAqBK,UAArB;EACD;EAEDG,MAAMA,CAACR,GAAD,EAAM;IACV,MAAM;MAACL;IAAD,IAAgB,IAAtB;IACA,IAAIA,WAAW,CAACS,GAAZ,CAAgBJ,GAAhB,CAAJ,EAA0B;MACxBL,WAAW,CAACW,GAAZ,CAAgBN,GAAhB,EAAqBe,MAArB;MACApB,WAAW,CAACqB,MAAZ,CAAmBhB,GAAnB;IACD;EACF;EAEDiB,MAAMA,CAAA,EAAG;IACP,MAAMC,iBAAiB,GAAG,EAA1B;IAEA,KAAK,MAAM,CAAClB,GAAD,EAAMK,UAAN,CAAX,IAAgC,KAAKV,WAArC,EAAkD;MAChDU,UAAU,CAACY,MAAX;MACAC,iBAAiB,CAAClB,GAAD,CAAjB,GAAyBK,UAAU,CAACE,KAApC;MACA,IAAI,CAACF,UAAU,CAACc,UAAhB,EAA4B;QAE1B,KAAKX,MAAL,CAAYR,GAAZ;MACD;IACF;IAED,OAAOkB,iBAAP;EACD;EAEDE,KAAKA,CAAA,EAAG;IACN,KAAK,MAAMpB,GAAX,IAAkB,KAAKL,WAAL,CAAiB0B,IAAjB,EAAlB,EAA2C;MACzC,KAAKb,MAAL,CAAYR,GAAZ;IACD;EACF;AAnE2C"},"metadata":{},"sourceType":"module","externalDependencies":[]}