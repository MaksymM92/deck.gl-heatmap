{"ast":null,"code":"import { Framebuffer, Texture2D, isWebGL2 } from '@luma.gl/core';\nconst DEFAULT_PARAMETERS = {\n  [10240]: 9728,\n  [10241]: 9728\n};\nexport function getFloatTexture(gl) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    width = 1,\n    height = 1,\n    data = null,\n    unpackFlipY = true,\n    parameters = DEFAULT_PARAMETERS\n  } = opts;\n  const texture = new Texture2D(gl, {\n    data,\n    format: isWebGL2(gl) ? 34836 : 6408,\n    type: 5126,\n    border: 0,\n    mipmaps: false,\n    parameters,\n    dataFormat: 6408,\n    width,\n    height,\n    unpackFlipY\n  });\n  return texture;\n}\nexport function getFramebuffer(gl, opts) {\n  const {\n    id,\n    width = 1,\n    height = 1,\n    texture\n  } = opts;\n  const fb = new Framebuffer(gl, {\n    id,\n    width,\n    height,\n    attachments: {\n      [36064]: texture\n    }\n  });\n  return fb;\n}\nexport function getFloatArray(array, size) {\n  let fillValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  if (!array || array.length < size) {\n    return new Float32Array(size).fill(fillValue);\n  }\n  return array;\n}","map":{"version":3,"names":["Framebuffer","Texture2D","isWebGL2","DEFAULT_PARAMETERS","getFloatTexture","gl","opts","arguments","length","undefined","width","height","data","unpackFlipY","parameters","texture","format","type","border","mipmaps","dataFormat","getFramebuffer","id","fb","attachments","getFloatArray","array","size","fillValue","Float32Array","fill"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@deck.gl/aggregation-layers/dist/esm/utils/resource-utils.js"],"sourcesContent":["import { Framebuffer, Texture2D, isWebGL2 } from '@luma.gl/core';\nconst DEFAULT_PARAMETERS = {\n  [10240]: 9728,\n  [10241]: 9728\n};\nexport function getFloatTexture(gl, opts = {}) {\n  const {\n    width = 1,\n    height = 1,\n    data = null,\n    unpackFlipY = true,\n    parameters = DEFAULT_PARAMETERS\n  } = opts;\n  const texture = new Texture2D(gl, {\n    data,\n    format: isWebGL2(gl) ? 34836 : 6408,\n    type: 5126,\n    border: 0,\n    mipmaps: false,\n    parameters,\n    dataFormat: 6408,\n    width,\n    height,\n    unpackFlipY\n  });\n  return texture;\n}\nexport function getFramebuffer(gl, opts) {\n  const {\n    id,\n    width = 1,\n    height = 1,\n    texture\n  } = opts;\n  const fb = new Framebuffer(gl, {\n    id,\n    width,\n    height,\n    attachments: {\n      [36064]: texture\n    }\n  });\n  return fb;\n}\nexport function getFloatArray(array, size, fillValue = 0) {\n  if (!array || array.length < size) {\n    return new Float32Array(size).fill(fillValue);\n  }\n\n  return array;\n}\n//# sourceMappingURL=resource-utils.js.map"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,eAAe;AAChE,MAAMC,kBAAkB,GAAG;EACzB,CAAC,KAAK,GAAG,IAAI;EACb,CAAC,KAAK,GAAG;AACX,CAAC;AACD,OAAO,SAASC,eAAeA,CAACC,EAAE,EAAa;EAAA,IAAXC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC3C,MAAM;IACJG,KAAK,GAAG,CAAC;IACTC,MAAM,GAAG,CAAC;IACVC,IAAI,GAAG,IAAI;IACXC,WAAW,GAAG,IAAI;IAClBC,UAAU,GAAGX;EACf,CAAC,GAAGG,IAAI;EACR,MAAMS,OAAO,GAAG,IAAId,SAAS,CAACI,EAAE,EAAE;IAChCO,IAAI;IACJI,MAAM,EAAEd,QAAQ,CAACG,EAAE,CAAC,GAAG,KAAK,GAAG,IAAI;IACnCY,IAAI,EAAE,IAAI;IACVC,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE,KAAK;IACdL,UAAU;IACVM,UAAU,EAAE,IAAI;IAChBV,KAAK;IACLC,MAAM;IACNE;EACF,CAAC,CAAC;EACF,OAAOE,OAAO;AAChB;AACA,OAAO,SAASM,cAAcA,CAAChB,EAAE,EAAEC,IAAI,EAAE;EACvC,MAAM;IACJgB,EAAE;IACFZ,KAAK,GAAG,CAAC;IACTC,MAAM,GAAG,CAAC;IACVI;EACF,CAAC,GAAGT,IAAI;EACR,MAAMiB,EAAE,GAAG,IAAIvB,WAAW,CAACK,EAAE,EAAE;IAC7BiB,EAAE;IACFZ,KAAK;IACLC,MAAM;IACNa,WAAW,EAAE;MACX,CAAC,KAAK,GAAGT;IACX;EACF,CAAC,CAAC;EACF,OAAOQ,EAAE;AACX;AACA,OAAO,SAASE,aAAaA,CAACC,KAAK,EAAEC,IAAI,EAAiB;EAAA,IAAfC,SAAS,GAAArB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EACtD,IAAI,CAACmB,KAAK,IAAIA,KAAK,CAAClB,MAAM,GAAGmB,IAAI,EAAE;IACjC,OAAO,IAAIE,YAAY,CAACF,IAAI,CAAC,CAACG,IAAI,CAACF,SAAS,CAAC;EAC/C;EAEA,OAAOF,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}