{"ast":null,"code":"export function replaceInRange(_ref) {\n  let {\n    data,\n    getIndex,\n    dataRange,\n    replace\n  } = _ref;\n  const {\n    startRow = 0,\n    endRow = Infinity\n  } = dataRange;\n  const count = data.length;\n  let replaceStart = count;\n  let replaceEnd = count;\n  for (let i = 0; i < count; i++) {\n    const row = getIndex(data[i]);\n    if (replaceStart > i && row >= startRow) {\n      replaceStart = i;\n    }\n    if (row >= endRow) {\n      replaceEnd = i;\n      break;\n    }\n  }\n  let index = replaceStart;\n  const dataLengthChanged = replaceEnd - replaceStart !== replace.length;\n  const endChunk = dataLengthChanged ? data.slice(replaceEnd) : undefined;\n  for (let i = 0; i < replace.length; i++) {\n    data[index++] = replace[i];\n  }\n  if (endChunk) {\n    for (let i = 0; i < endChunk.length; i++) {\n      data[index++] = endChunk[i];\n    }\n    data.length = index;\n  }\n  return {\n    startRow: replaceStart,\n    endRow: replaceStart + replace.length\n  };\n}","map":{"version":3,"names":["replaceInRange","_ref","data","getIndex","dataRange","replace","startRow","endRow","Infinity","count","length","replaceStart","replaceEnd","i","row","index","dataLengthChanged","endChunk","slice","undefined"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@deck.gl/layers/src/utils.ts"],"sourcesContent":["// Assume data array is sorted by <accessor>\n// Replaces the specified range with a new subarray\n// Mutates the data array\n// Returns {startRow, endRow} of the inserted items\nexport function replaceInRange({\n  data,\n  getIndex,\n  dataRange,\n  replace\n}: {\n  data: any[];\n  getIndex: (d: any) => number;\n  dataRange: {startRow?: number; endRow?: number};\n  replace: any[];\n}): {startRow: Number; endRow: number} {\n  const {startRow = 0, endRow = Infinity} = dataRange;\n  const count = data.length;\n  let replaceStart = count;\n  let replaceEnd = count;\n  for (let i = 0; i < count; i++) {\n    const row = getIndex(data[i]);\n    if (replaceStart > i && row >= startRow) {\n      replaceStart = i;\n    }\n    if (row >= endRow) {\n      replaceEnd = i;\n      break;\n    }\n  }\n  let index = replaceStart;\n  const dataLengthChanged = replaceEnd - replaceStart !== replace.length;\n  // Save the items after replaceEnd before we overwrite data\n  const endChunk = dataLengthChanged ? data.slice(replaceEnd) : undefined;\n  // Insert new items\n  for (let i = 0; i < replace.length; i++) {\n    data[index++] = replace[i];\n  }\n  if (endChunk) {\n    // Append items after replaceEnd\n    for (let i = 0; i < endChunk.length; i++) {\n      data[index++] = endChunk[i];\n    }\n    // Trim additional items\n    data.length = index;\n  }\n\n  return {\n    startRow: replaceStart,\n    endRow: replaceStart + replace.length\n  };\n}\n"],"mappings":"AAIA,OAAO,SAASA,cAATA,CAAAC,IAAA,EAUgC;EAAA,IAVR;IAC7BC,IAD6B;IAE7BC,QAF6B;IAG7BC,SAH6B;IAI7BC;EAJ6B,CAAxB,GAAAJ,IAAA;EAWL,MAAM;IAACK,QAAQ,GAAG,CAAZ;IAAeC,MAAM,GAAGC;EAAxB,IAAoCJ,SAA1C;EACA,MAAMK,KAAK,GAAGP,IAAI,CAACQ,MAAnB;EACA,IAAIC,YAAY,GAAGF,KAAnB;EACA,IAAIG,UAAU,GAAGH,KAAjB;EACA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAApB,EAA2BI,CAAC,EAA5B,EAAgC;IAC9B,MAAMC,GAAG,GAAGX,QAAQ,CAACD,IAAI,CAACW,CAAD,CAAL,CAApB;IACA,IAAIF,YAAY,GAAGE,CAAf,IAAoBC,GAAG,IAAIR,QAA/B,EAAyC;MACvCK,YAAY,GAAGE,CAAf;IACD;IACD,IAAIC,GAAG,IAAIP,MAAX,EAAmB;MACjBK,UAAU,GAAGC,CAAb;MACA;IACD;EACF;EACD,IAAIE,KAAK,GAAGJ,YAAZ;EACA,MAAMK,iBAAiB,GAAGJ,UAAU,GAAGD,YAAb,KAA8BN,OAAO,CAACK,MAAhE;EAEA,MAAMO,QAAQ,GAAGD,iBAAiB,GAAGd,IAAI,CAACgB,KAAL,CAAWN,UAAX,CAAH,GAA4BO,SAA9D;EAEA,KAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,OAAO,CAACK,MAA5B,EAAoCG,CAAC,EAArC,EAAyC;IACvCX,IAAI,CAACa,KAAK,EAAN,CAAJ,GAAgBV,OAAO,CAACQ,CAAD,CAAvB;EACD;EACD,IAAII,QAAJ,EAAc;IAEZ,KAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGI,QAAQ,CAACP,MAA7B,EAAqCG,CAAC,EAAtC,EAA0C;MACxCX,IAAI,CAACa,KAAK,EAAN,CAAJ,GAAgBE,QAAQ,CAACJ,CAAD,CAAxB;IACD;IAEDX,IAAI,CAACQ,MAAL,GAAcK,KAAd;EACD;EAED,OAAO;IACLT,QAAQ,EAAEK,YADL;IAELJ,MAAM,EAAEI,YAAY,GAAGN,OAAO,CAACK;EAF1B,CAAP;AAID"},"metadata":{},"sourceType":"module","externalDependencies":[]}