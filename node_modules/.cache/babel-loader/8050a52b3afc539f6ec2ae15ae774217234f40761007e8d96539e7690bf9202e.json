{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { VERSION, isBrowser } from '@probe.gl/env';\nimport { LocalStorage } from './utils/local-storage';\nimport { formatImage, formatTime, leftPad } from './utils/formatters';\nimport { addColor } from './utils/color';\nimport { autobind } from './utils/autobind';\nimport assert from './utils/assert';\nimport { getHiResTimestamp } from './utils/hi-res-timestamp';\nconst originalConsole = {\n  debug: isBrowser ? console.debug || console.log : console.log,\n  log: console.log,\n  info: console.info,\n  warn: console.warn,\n  error: console.error\n};\nconst DEFAULT_SETTINGS = {\n  enabled: true,\n  level: 0\n};\nfunction noop() {}\nconst cache = {};\nconst ONCE = {\n  once: true\n};\nexport class Log {\n  constructor() {\n    let {\n      id\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      id: ''\n    };\n    _defineProperty(this, \"id\", void 0);\n    _defineProperty(this, \"VERSION\", VERSION);\n    _defineProperty(this, \"_startTs\", getHiResTimestamp());\n    _defineProperty(this, \"_deltaTs\", getHiResTimestamp());\n    _defineProperty(this, \"_storage\", void 0);\n    _defineProperty(this, \"userData\", {});\n    _defineProperty(this, \"LOG_THROTTLE_TIMEOUT\", 0);\n    this.id = id;\n    this.userData = {};\n    this._storage = new LocalStorage(\"__probe-\".concat(this.id, \"__\"), DEFAULT_SETTINGS);\n    this.timeStamp(\"\".concat(this.id, \" started\"));\n    autobind(this);\n    Object.seal(this);\n  }\n  set level(newLevel) {\n    this.setLevel(newLevel);\n  }\n  get level() {\n    return this.getLevel();\n  }\n  isEnabled() {\n    return this._storage.config.enabled;\n  }\n  getLevel() {\n    return this._storage.config.level;\n  }\n  getTotal() {\n    return Number((getHiResTimestamp() - this._startTs).toPrecision(10));\n  }\n  getDelta() {\n    return Number((getHiResTimestamp() - this._deltaTs).toPrecision(10));\n  }\n  set priority(newPriority) {\n    this.level = newPriority;\n  }\n  get priority() {\n    return this.level;\n  }\n  getPriority() {\n    return this.level;\n  }\n  enable() {\n    let enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this._storage.setConfiguration({\n      enabled\n    });\n    return this;\n  }\n  setLevel(level) {\n    this._storage.setConfiguration({\n      level\n    });\n    return this;\n  }\n  get(setting) {\n    return this._storage.config[setting];\n  }\n  set(setting, value) {\n    this._storage.setConfiguration({\n      [setting]: value\n    });\n  }\n  settings() {\n    if (console.table) {\n      console.table(this._storage.config);\n    } else {\n      console.log(this._storage.config);\n    }\n  }\n  assert(condition, message) {\n    assert(condition, message);\n  }\n  warn(message) {\n    return this._getLogFunction(0, message, originalConsole.warn, arguments, ONCE);\n  }\n  error(message) {\n    return this._getLogFunction(0, message, originalConsole.error, arguments);\n  }\n  deprecated(oldUsage, newUsage) {\n    return this.warn(\"`\".concat(oldUsage, \"` is deprecated and will be removed in a later version. Use `\").concat(newUsage, \"` instead\"));\n  }\n  removed(oldUsage, newUsage) {\n    return this.error(\"`\".concat(oldUsage, \"` has been removed. Use `\").concat(newUsage, \"` instead\"));\n  }\n  probe(logLevel, message) {\n    return this._getLogFunction(logLevel, message, originalConsole.log, arguments, {\n      time: true,\n      once: true\n    });\n  }\n  log(logLevel, message) {\n    return this._getLogFunction(logLevel, message, originalConsole.debug, arguments);\n  }\n  info(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.info, arguments);\n  }\n  once(logLevel, message) {\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n    return this._getLogFunction(logLevel, message, originalConsole.debug || originalConsole.info, arguments, ONCE);\n  }\n  table(logLevel, table, columns) {\n    if (table) {\n      return this._getLogFunction(logLevel, table, console.table || noop, columns && [columns], {\n        tag: getTableHeader(table)\n      });\n    }\n    return noop;\n  }\n  image(_ref) {\n    let {\n      logLevel,\n      priority,\n      image,\n      message = '',\n      scale = 1\n    } = _ref;\n    if (!this._shouldLog(logLevel || priority)) {\n      return noop;\n    }\n    return isBrowser ? logImageInBrowser({\n      image,\n      message,\n      scale\n    }) : logImageInNode({\n      image,\n      message,\n      scale\n    });\n  }\n  time(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.time ? console.time : console.info);\n  }\n  timeEnd(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.timeEnd ? console.timeEnd : console.info);\n  }\n  timeStamp(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.timeStamp || noop);\n  }\n  group(logLevel, message) {\n    let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      collapsed: false\n    };\n    const options = normalizeArguments({\n      logLevel,\n      message,\n      opts\n    });\n    const {\n      collapsed\n    } = opts;\n    options.method = (collapsed ? console.groupCollapsed : console.group) || console.info;\n    return this._getLogFunction(options);\n  }\n  groupCollapsed(logLevel, message) {\n    let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.group(logLevel, message, Object.assign({}, opts, {\n      collapsed: true\n    }));\n  }\n  groupEnd(logLevel) {\n    return this._getLogFunction(logLevel, '', console.groupEnd || noop);\n  }\n  withGroup(logLevel, message, func) {\n    this.group(logLevel, message)();\n    try {\n      func();\n    } finally {\n      this.groupEnd(logLevel)();\n    }\n  }\n  trace() {\n    if (console.trace) {\n      console.trace();\n    }\n  }\n  _shouldLog(logLevel) {\n    return this.isEnabled() && this.getLevel() >= normalizeLogLevel(logLevel);\n  }\n  _getLogFunction(logLevel, message, method, args, opts) {\n    if (this._shouldLog(logLevel)) {\n      opts = normalizeArguments({\n        logLevel,\n        message,\n        args,\n        opts\n      });\n      method = method || opts.method;\n      assert(method);\n      opts.total = this.getTotal();\n      opts.delta = this.getDelta();\n      this._deltaTs = getHiResTimestamp();\n      const tag = opts.tag || opts.message;\n      if (opts.once) {\n        if (!cache[tag]) {\n          cache[tag] = getHiResTimestamp();\n        } else {\n          return noop;\n        }\n      }\n      message = decorateMessage(this.id, opts.message, opts);\n      return method.bind(console, message, ...opts.args);\n    }\n    return noop;\n  }\n}\n_defineProperty(Log, \"VERSION\", VERSION);\nfunction normalizeLogLevel(logLevel) {\n  if (!logLevel) {\n    return 0;\n  }\n  let resolvedLevel;\n  switch (typeof logLevel) {\n    case 'number':\n      resolvedLevel = logLevel;\n      break;\n    case 'object':\n      resolvedLevel = logLevel.logLevel || logLevel.priority || 0;\n      break;\n    default:\n      return 0;\n  }\n  assert(Number.isFinite(resolvedLevel) && resolvedLevel >= 0);\n  return resolvedLevel;\n}\nexport function normalizeArguments(opts) {\n  const {\n    logLevel,\n    message\n  } = opts;\n  opts.logLevel = normalizeLogLevel(logLevel);\n  const args = opts.args ? Array.from(opts.args) : [];\n  while (args.length && args.shift() !== message) {}\n  switch (typeof logLevel) {\n    case 'string':\n    case 'function':\n      if (message !== undefined) {\n        args.unshift(message);\n      }\n      opts.message = logLevel;\n      break;\n    case 'object':\n      Object.assign(opts, logLevel);\n      break;\n    default:\n  }\n  if (typeof opts.message === 'function') {\n    opts.message = opts.message();\n  }\n  const messageType = typeof opts.message;\n  assert(messageType === 'string' || messageType === 'object');\n  return Object.assign(opts, {\n    args\n  }, opts.opts);\n}\nfunction decorateMessage(id, message, opts) {\n  if (typeof message === 'string') {\n    const time = opts.time ? leftPad(formatTime(opts.total)) : '';\n    message = opts.time ? \"\".concat(id, \": \").concat(time, \"  \").concat(message) : \"\".concat(id, \": \").concat(message);\n    message = addColor(message, opts.color, opts.background);\n  }\n  return message;\n}\nfunction logImageInNode(_ref2) {\n  let {\n    image,\n    message = '',\n    scale = 1\n  } = _ref2;\n  console.warn('removed');\n  return noop;\n}\nfunction logImageInBrowser(_ref3) {\n  let {\n    image,\n    message = '',\n    scale = 1\n  } = _ref3;\n  if (typeof image === 'string') {\n    const img = new Image();\n    img.onload = () => {\n      const args = formatImage(img, message, scale);\n      console.log(...args);\n    };\n    img.src = image;\n    return noop;\n  }\n  const element = image.nodeName || '';\n  if (element.toLowerCase() === 'img') {\n    console.log(...formatImage(image, message, scale));\n    return noop;\n  }\n  if (element.toLowerCase() === 'canvas') {\n    const img = new Image();\n    img.onload = () => console.log(...formatImage(img, message, scale));\n    img.src = image.toDataURL();\n    return noop;\n  }\n  return noop;\n}\nfunction getTableHeader(table) {\n  for (const key in table) {\n    for (const title in table[key]) {\n      return title || 'untitled';\n    }\n  }\n  return 'empty';\n}","map":{"version":3,"names":["VERSION","isBrowser","LocalStorage","formatImage","formatTime","leftPad","addColor","autobind","assert","getHiResTimestamp","originalConsole","debug","console","log","info","warn","error","DEFAULT_SETTINGS","enabled","level","noop","cache","ONCE","once","Log","constructor","id","arguments","length","undefined","_defineProperty","userData","_storage","concat","timeStamp","Object","seal","newLevel","setLevel","getLevel","isEnabled","config","getTotal","Number","_startTs","toPrecision","getDelta","_deltaTs","priority","newPriority","getPriority","enable","setConfiguration","get","setting","set","value","settings","table","condition","message","_getLogFunction","deprecated","oldUsage","newUsage","removed","probe","logLevel","time","_len","args","Array","_key","columns","tag","getTableHeader","image","_ref","scale","_shouldLog","logImageInBrowser","logImageInNode","timeEnd","group","opts","collapsed","options","normalizeArguments","method","groupCollapsed","assign","groupEnd","withGroup","func","trace","normalizeLogLevel","total","delta","decorateMessage","bind","resolvedLevel","isFinite","from","shift","unshift","messageType","color","background","_ref2","_ref3","img","Image","onload","src","element","nodeName","toLowerCase","toDataURL","key","title"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@probe.gl/log/src/log.ts"],"sourcesContent":["// probe.gl, MIT license\n\n/* eslint-disable no-console */\nimport {VERSION, isBrowser} from '@probe.gl/env';\nimport {LocalStorage} from './utils/local-storage';\nimport {formatImage, formatTime, leftPad} from './utils/formatters';\nimport {addColor} from './utils/color';\nimport {autobind} from './utils/autobind';\nimport assert from './utils/assert';\nimport {getHiResTimestamp} from './utils/hi-res-timestamp';\n\n// Instrumentation in other packages may override console methods, so preserve them here\nconst originalConsole = {\n  debug: isBrowser ? console.debug || console.log : console.log,\n  log: console.log,\n  info: console.info,\n  warn: console.warn,\n  error: console.error\n};\n\ntype Table = Record<string, any>;\n\ntype LogFunction = () => void;\n\ntype LogOptions = {\n  method?;\n  time?;\n  total?: number;\n  delta?: number;\n  tag?: string;\n  message?: string;\n  once?: boolean;\n  nothrottle?: boolean;\n  args?: any;\n};\n\ntype LogSettings = {\n  enabled?: boolean;\n  level?: number;\n  [key: string]: any;\n};\n\nconst DEFAULT_SETTINGS: Required<LogSettings> = {\n  enabled: true,\n  level: 0\n};\n\nfunction noop() {} // eslint-disable-line @typescript-eslint/no-empty-function\n\nconst cache = {};\nconst ONCE = {once: true};\n\ntype LogConfiguration = {\n  enabled?: boolean;\n  level?: number;\n};\n\n/** A console wrapper */\n\nexport class Log {\n  static VERSION = VERSION;\n\n  id: string;\n  VERSION: string = VERSION;\n  _startTs: number = getHiResTimestamp();\n  _deltaTs: number = getHiResTimestamp();\n  _storage: LocalStorage<LogConfiguration>;\n  userData = {};\n\n  // TODO - fix support from throttling groups\n  LOG_THROTTLE_TIMEOUT: number = 0; // Time before throttled messages are logged again\n\n  constructor({id} = {id: ''}) {\n    this.id = id;\n    this.userData = {};\n    this._storage = new LocalStorage<LogConfiguration>(`__probe-${this.id}__`, DEFAULT_SETTINGS);\n\n    this.timeStamp(`${this.id} started`);\n\n    autobind(this);\n    Object.seal(this);\n  }\n\n  set level(newLevel: number) {\n    this.setLevel(newLevel);\n  }\n\n  get level(): number {\n    return this.getLevel();\n  }\n\n  isEnabled(): boolean {\n    return this._storage.config.enabled;\n  }\n\n  getLevel(): number {\n    return this._storage.config.level;\n  }\n\n  /** @return milliseconds, with fractions */\n  getTotal(): number {\n    return Number((getHiResTimestamp() - this._startTs).toPrecision(10));\n  }\n\n  /** @return milliseconds, with fractions */\n  getDelta(): number {\n    return Number((getHiResTimestamp() - this._deltaTs).toPrecision(10));\n  }\n\n  /** @deprecated use logLevel */\n  set priority(newPriority: number) {\n    this.level = newPriority;\n  }\n\n  /** @deprecated use logLevel */\n  get priority(): number {\n    return this.level;\n  }\n\n  /** @deprecated use logLevel */\n  getPriority(): number {\n    return this.level;\n  }\n\n  // Configure\n\n  enable(enabled: boolean = true): this {\n    this._storage.setConfiguration({enabled});\n    return this;\n  }\n\n  setLevel(level: number): this {\n    this._storage.setConfiguration({level});\n    return this;\n  }\n\n  /** return the current status of the setting */\n  get(setting: string): any {\n    return this._storage.config[setting];\n  }\n\n  // update the status of the setting\n  set(setting: string, value: any): void {\n    this._storage.setConfiguration({[setting]: value});\n  }\n\n  /** Logs the current settings as a table */\n  settings(): void {\n    if (console.table) {\n      console.table(this._storage.config);\n    } else {\n      console.log(this._storage.config);\n    }\n  }\n\n  // Unconditional logging\n\n  assert(condition: unknown, message?: string): asserts condition {\n    assert(condition, message);\n  }\n\n  /** Warn, but only once, no console flooding */\n  warn(message: string, ...args): LogFunction;\n  warn(message: string): LogFunction {\n    return this._getLogFunction(0, message, originalConsole.warn, arguments, ONCE);\n  }\n\n  /** Print an error */\n  error(message: string, ...args): LogFunction;\n  error(message: string): LogFunction {\n    return this._getLogFunction(0, message, originalConsole.error, arguments);\n  }\n\n  /** Print a deprecation warning */\n  deprecated(oldUsage: string, newUsage: string): LogFunction {\n    return this.warn(`\\`${oldUsage}\\` is deprecated and will be removed \\\nin a later version. Use \\`${newUsage}\\` instead`);\n  }\n\n  /** Print a removal warning */\n  removed(oldUsage: string, newUsage: string): LogFunction {\n    return this.error(`\\`${oldUsage}\\` has been removed. Use \\`${newUsage}\\` instead`);\n  }\n\n  // Conditional logging\n\n  /** Log to a group */\n  probe(logLevel, message?, ...args): LogFunction;\n  probe(logLevel, message?): LogFunction {\n    return this._getLogFunction(logLevel, message, originalConsole.log, arguments, {\n      time: true,\n      once: true\n    });\n  }\n\n  /** Log a debug message */\n  log(logLevel, message?, ...args): LogFunction;\n  log(logLevel, message?): LogFunction {\n    return this._getLogFunction(logLevel, message, originalConsole.debug, arguments);\n  }\n\n  /** Log a normal message */\n  info(logLevel, message?, ...args): LogFunction;\n  info(logLevel, message?): LogFunction {\n    return this._getLogFunction(logLevel, message, console.info, arguments);\n  }\n\n  /** Log a normal message, but only once, no console flooding */\n  once(logLevel, message?, ...args): LogFunction;\n  once(logLevel, message?, ...args) {\n    return this._getLogFunction(\n      logLevel,\n      message,\n      originalConsole.debug || originalConsole.info,\n      arguments,\n      ONCE\n    );\n  }\n\n  /** Logs an object as a table */\n  table(logLevel, table?, columns?): LogFunction {\n    if (table) {\n      // @ts-expect-error Not clear how this works, columns being passed as arguments\n      return this._getLogFunction(logLevel, table, console.table || noop, columns && [columns], {\n        tag: getTableHeader(table)\n      });\n    }\n    return noop;\n  }\n\n  /** logs an image under Chrome */\n  image({logLevel, priority, image, message = '', scale = 1}): LogFunction {\n    if (!this._shouldLog(logLevel || priority)) {\n      return noop;\n    }\n    return isBrowser\n      ? logImageInBrowser({image, message, scale})\n      : logImageInNode({image, message, scale});\n  }\n\n  time(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.time ? console.time : console.info);\n  }\n\n  timeEnd(logLevel, message) {\n    return this._getLogFunction(\n      logLevel,\n      message,\n      console.timeEnd ? console.timeEnd : console.info\n    );\n  }\n\n  timeStamp(logLevel, message?) {\n    return this._getLogFunction(logLevel, message, console.timeStamp || noop);\n  }\n\n  group(logLevel, message, opts = {collapsed: false}) {\n    const options = normalizeArguments({logLevel, message, opts});\n    const {collapsed} = opts;\n    // @ts-expect-error\n    options.method = (collapsed ? console.groupCollapsed : console.group) || console.info;\n\n    return this._getLogFunction(options);\n  }\n\n  groupCollapsed(logLevel, message, opts = {}) {\n    return this.group(logLevel, message, Object.assign({}, opts, {collapsed: true}));\n  }\n\n  groupEnd(logLevel) {\n    return this._getLogFunction(logLevel, '', console.groupEnd || noop);\n  }\n\n  // EXPERIMENTAL\n\n  withGroup(logLevel: number, message: string, func: Function): void {\n    this.group(logLevel, message)();\n\n    try {\n      func();\n    } finally {\n      this.groupEnd(logLevel)();\n    }\n  }\n\n  trace(): void {\n    if (console.trace) {\n      console.trace();\n    }\n  }\n\n  // PRIVATE METHODS\n\n  /** Deduces log level from a variety of arguments */\n  _shouldLog(logLevel: unknown): boolean {\n    return this.isEnabled() && this.getLevel() >= normalizeLogLevel(logLevel);\n  }\n\n  _getLogFunction(\n    logLevel: unknown,\n    message?: unknown,\n    method?: Function,\n    args?: IArguments,\n    opts?: LogOptions\n  ): LogFunction {\n    if (this._shouldLog(logLevel)) {\n      // normalized opts + timings\n      opts = normalizeArguments({logLevel, message, args, opts});\n      method = method || opts.method;\n      assert(method);\n\n      opts.total = this.getTotal();\n      opts.delta = this.getDelta();\n      // reset delta timer\n      this._deltaTs = getHiResTimestamp();\n\n      const tag = opts.tag || opts.message;\n\n      if (opts.once) {\n        if (!cache[tag]) {\n          cache[tag] = getHiResTimestamp();\n        } else {\n          return noop;\n        }\n      }\n\n      // TODO - Make throttling work with groups\n      // if (opts.nothrottle || !throttle(tag, this.LOG_THROTTLE_TIMEOUT)) {\n      //   return noop;\n      // }\n\n      message = decorateMessage(this.id, opts.message, opts);\n\n      // Bind console function so that it can be called after being returned\n      return method.bind(console, message, ...opts.args);\n    }\n    return noop;\n  }\n}\n\n/**\n * Get logLevel from first argument:\n * - log(logLevel, message, args) => logLevel\n * - log(message, args) => 0\n * - log({logLevel, ...}, message, args) => logLevel\n * - log({logLevel, message, args}) => logLevel\n */\nfunction normalizeLogLevel(logLevel: unknown): number {\n  if (!logLevel) {\n    return 0;\n  }\n  let resolvedLevel;\n\n  switch (typeof logLevel) {\n    case 'number':\n      resolvedLevel = logLevel;\n      break;\n\n    case 'object':\n      // Backward compatibility\n      // TODO - deprecate `priority`\n      // @ts-expect-error\n      resolvedLevel = logLevel.logLevel || logLevel.priority || 0;\n      break;\n\n    default:\n      return 0;\n  }\n  // 'log level must be a number'\n  assert(Number.isFinite(resolvedLevel) && resolvedLevel >= 0);\n\n  return resolvedLevel;\n}\n\n/**\n * \"Normalizes\" the various argument patterns into an object with known types\n * - log(logLevel, message, args) => {logLevel, message, args}\n * - log(message, args) => {logLevel: 0, message, args}\n * - log({logLevel, ...}, message, args) => {logLevel, message, args}\n * - log({logLevel, message, args}) => {logLevel, message, args}\n */\nexport function normalizeArguments(opts: {\n  logLevel;\n  message;\n  collapsed?: boolean;\n  args?: IArguments;\n  opts?;\n}): {\n  logLevel: number;\n  message: string;\n  args: any[];\n} {\n  const {logLevel, message} = opts;\n  opts.logLevel = normalizeLogLevel(logLevel);\n\n  // We use `arguments` instead of rest parameters (...args) because IE\n  // does not support the syntax. Rest parameters is transpiled to code with\n  // perf impact. Doing it here instead avoids constructing args when logging is\n  // disabled.\n  // TODO - remove when/if IE support is dropped\n  const args: any[] = opts.args ? Array.from(opts.args) : [];\n  // args should only contain arguments that appear after `message`\n  // eslint-disable-next-line no-empty\n  while (args.length && args.shift() !== message) {}\n\n  switch (typeof logLevel) {\n    case 'string':\n    case 'function':\n      if (message !== undefined) {\n        args.unshift(message);\n      }\n      opts.message = logLevel;\n      break;\n\n    case 'object':\n      Object.assign(opts, logLevel);\n      break;\n\n    default:\n  }\n\n  // Resolve functions into strings by calling them\n  if (typeof opts.message === 'function') {\n    opts.message = opts.message();\n  }\n  const messageType = typeof opts.message;\n  // 'log message must be a string' or object\n  assert(messageType === 'string' || messageType === 'object');\n\n  // original opts + normalized opts + opts arg + fixed up message\n  return Object.assign(opts, {args}, opts.opts);\n}\n\nfunction decorateMessage(id, message, opts) {\n  if (typeof message === 'string') {\n    const time = opts.time ? leftPad(formatTime(opts.total)) : '';\n    message = opts.time ? `${id}: ${time}  ${message}` : `${id}: ${message}`;\n    message = addColor(message, opts.color, opts.background);\n  }\n  return message;\n}\n\n/** @deprecated Function removed */\nfunction logImageInNode({image, message = '', scale = 1}) {\n  console.warn('removed');\n  return noop;\n}\n\nfunction logImageInBrowser({image, message = '', scale = 1}) {\n  if (typeof image === 'string') {\n    const img = new Image();\n    img.onload = () => {\n      const args = formatImage(img, message, scale);\n      console.log(...args);\n    };\n    img.src = image;\n    return noop;\n  }\n  const element = image.nodeName || '';\n  if (element.toLowerCase() === 'img') {\n    console.log(...formatImage(image, message, scale));\n    return noop;\n  }\n  if (element.toLowerCase() === 'canvas') {\n    const img = new Image();\n    img.onload = () => console.log(...formatImage(img, message, scale));\n    img.src = image.toDataURL();\n    return noop;\n  }\n  return noop;\n}\n\nfunction getTableHeader(table: Table): string {\n  for (const key in table) {\n    for (const title in table[key]) {\n      return title || 'untitled';\n    }\n  }\n  return 'empty';\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}