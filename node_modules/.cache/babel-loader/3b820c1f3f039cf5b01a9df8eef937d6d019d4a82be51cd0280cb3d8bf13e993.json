{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { projectPosition } from '../../shaderlib/project/project-functions';\nimport { COORDINATE_SYSTEM } from '../../lib/constants';\nconst DEFAULT_LIGHT_COLOR = [255, 255, 255];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\nconst DEFAULT_ATTENUATION = [0, 0, 1];\nconst DEFAULT_LIGHT_POSITION = [0.0, 0.0, 1.0];\nlet idCount = 0;\nexport class PointLight {\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _defineProperty(this, \"id\", void 0);\n    _defineProperty(this, \"color\", void 0);\n    _defineProperty(this, \"intensity\", void 0);\n    _defineProperty(this, \"type\", 'point');\n    _defineProperty(this, \"position\", void 0);\n    _defineProperty(this, \"attenuation\", void 0);\n    _defineProperty(this, \"projectedLight\", void 0);\n    const {\n      color = DEFAULT_LIGHT_COLOR\n    } = props;\n    const {\n      intensity = DEFAULT_LIGHT_INTENSITY\n    } = props;\n    const {\n      position = DEFAULT_LIGHT_POSITION\n    } = props;\n    this.id = props.id || \"point-\".concat(idCount++);\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'point';\n    this.position = position;\n    this.attenuation = getAttenuation(props);\n    this.projectedLight = {\n      ...this\n    };\n  }\n  getProjectedLight(_ref) {\n    let {\n      layer\n    } = _ref;\n    const {\n      projectedLight\n    } = this;\n    const viewport = layer.context.viewport;\n    const {\n      coordinateSystem,\n      coordinateOrigin\n    } = layer.props;\n    const position = projectPosition(this.position, {\n      viewport,\n      coordinateSystem,\n      coordinateOrigin,\n      fromCoordinateSystem: viewport.isGeospatial ? COORDINATE_SYSTEM.LNGLAT : COORDINATE_SYSTEM.CARTESIAN,\n      fromCoordinateOrigin: [0, 0, 0]\n    });\n    projectedLight.color = this.color;\n    projectedLight.intensity = this.intensity;\n    projectedLight.position = position;\n    return projectedLight;\n  }\n}\nfunction getAttenuation(props) {\n  if (props.attenuation) {\n    return props.attenuation;\n  }\n  if ('intensity' in props) {\n    return [0, 0, props.intensity || 0];\n  }\n  return DEFAULT_ATTENUATION;\n}","map":{"version":3,"names":["projectPosition","COORDINATE_SYSTEM","DEFAULT_LIGHT_COLOR","DEFAULT_LIGHT_INTENSITY","DEFAULT_ATTENUATION","DEFAULT_LIGHT_POSITION","idCount","PointLight","constructor","props","arguments","length","undefined","_defineProperty","color","intensity","position","id","concat","type","attenuation","getAttenuation","projectedLight","getProjectedLight","_ref","layer","viewport","context","coordinateSystem","coordinateOrigin","fromCoordinateSystem","isGeospatial","LNGLAT","CARTESIAN","fromCoordinateOrigin"],"sources":["/Users/maks/Desktop/projects/geo-viz/node_modules/@deck.gl/core/src/effects/lighting/point-light.ts"],"sourcesContent":["import {projectPosition} from '../../shaderlib/project/project-functions';\nimport {COORDINATE_SYSTEM} from '../../lib/constants';\n\nimport type Layer from '../../lib/layer';\n\nconst DEFAULT_LIGHT_COLOR = [255, 255, 255];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\nconst DEFAULT_ATTENUATION = [0, 0, 1];\nconst DEFAULT_LIGHT_POSITION = [0.0, 0.0, 1.0];\n\nlet idCount = 0;\n\nexport type PointLightOptions = {\n  id?: string;\n  /** Light color, [r, g, b] in the 0-255 range\n   * @default [255, 255, 255]\n   */\n  color?: number[];\n  /** Light intensity, higher number is brighter\n   * @default 1.0\n   */\n  intensity?: number;\n  /** Light position [x, y, z] in the common space\n   * @default [0.0, 0.0, 1.0]\n   */\n  position?: number[];\n  /** Light attenuation\n   * @default [0.0, 0.0, 1.0]\n   */\n  attenuation?: number[];\n};\n\nexport class PointLight {\n  id: string;\n  color: number[];\n  intensity: number;\n  type = 'point';\n  position: number[];\n  attenuation: number[];\n\n  protected projectedLight: PointLight;\n\n  constructor(props: PointLightOptions = {}) {\n    const {color = DEFAULT_LIGHT_COLOR} = props;\n    const {intensity = DEFAULT_LIGHT_INTENSITY} = props;\n    const {position = DEFAULT_LIGHT_POSITION} = props;\n\n    this.id = props.id || `point-${idCount++}`;\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'point';\n    this.position = position;\n    this.attenuation = getAttenuation(props);\n    this.projectedLight = {...this};\n  }\n\n  getProjectedLight({layer}: {layer: Layer}): PointLight {\n    const {projectedLight} = this;\n    const viewport = layer.context.viewport;\n    const {coordinateSystem, coordinateOrigin} = layer.props;\n    const position = projectPosition(this.position, {\n      viewport,\n      coordinateSystem,\n      coordinateOrigin,\n      fromCoordinateSystem: viewport.isGeospatial\n        ? COORDINATE_SYSTEM.LNGLAT\n        : COORDINATE_SYSTEM.CARTESIAN,\n      fromCoordinateOrigin: [0, 0, 0]\n    });\n    projectedLight.color = this.color;\n    projectedLight.intensity = this.intensity;\n    projectedLight.position = position;\n    return projectedLight;\n  }\n}\n\nfunction getAttenuation(props: PointLightOptions): number[] {\n  if (props.attenuation) {\n    return props.attenuation;\n  }\n  if ('intensity' in props) {\n    return [0, 0, props.intensity || 0];\n  }\n  return DEFAULT_ATTENUATION;\n}\n"],"mappings":";AAAA,SAAQA,eAAR,QAA8B,2CAA9B;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AAIA,MAAMC,mBAAmB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA5B;AACA,MAAMC,uBAAuB,GAAG,GAAhC;AACA,MAAMC,mBAAmB,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA5B;AACA,MAAMC,sBAAsB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA/B;AAEA,IAAIC,OAAO,GAAG,CAAd;AAsBA,OAAO,MAAMC,UAAN,CAAiB;EAUtBC,WAAWA,CAAA,EAAgC;IAAA,IAA/BC,KAAwB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAA5B;IAAgCG,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA,eANpC,OAMoC;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IACzC,MAAM;MAACC,KAAK,GAAGZ;IAAT,IAAgCO,KAAtC;IACA,MAAM;MAACM,SAAS,GAAGZ;IAAb,IAAwCM,KAA9C;IACA,MAAM;MAACO,QAAQ,GAAGX;IAAZ,IAAsCI,KAA5C;IAEA,KAAKQ,EAAL,GAAUR,KAAK,CAACQ,EAAN,aAAAC,MAAA,CAAqBZ,OAAO,EAA5B,CAAV;IACA,KAAKQ,KAAL,GAAaA,KAAb;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKI,IAAL,GAAY,OAAZ;IACA,KAAKH,QAAL,GAAgBA,QAAhB;IACA,KAAKI,WAAL,GAAmBC,cAAc,CAACZ,KAAD,CAAjC;IACA,KAAKa,cAAL,GAAsB;MAAC,GAAG;IAAJ,CAAtB;EACD;EAEDC,iBAAiBA,CAAAC,IAAA,EAAsC;IAAA,IAArC;MAACC;IAAD,CAAD,GAAAD,IAAA;IACf,MAAM;MAACF;IAAD,IAAmB,IAAzB;IACA,MAAMI,QAAQ,GAAGD,KAAK,CAACE,OAAN,CAAcD,QAA/B;IACA,MAAM;MAACE,gBAAD;MAAmBC;IAAnB,IAAuCJ,KAAK,CAAChB,KAAnD;IACA,MAAMO,QAAQ,GAAGhB,eAAe,CAAC,KAAKgB,QAAN,EAAgB;MAC9CU,QAD8C;MAE9CE,gBAF8C;MAG9CC,gBAH8C;MAI9CC,oBAAoB,EAAEJ,QAAQ,CAACK,YAAT,GAClB9B,iBAAiB,CAAC+B,MADA,GAElB/B,iBAAiB,CAACgC,SANwB;MAO9CC,oBAAoB,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;IAPwB,CAAhB,CAAhC;IASAZ,cAAc,CAACR,KAAf,GAAuB,KAAKA,KAA5B;IACAQ,cAAc,CAACP,SAAf,GAA2B,KAAKA,SAAhC;IACAO,cAAc,CAACN,QAAf,GAA0BA,QAA1B;IACA,OAAOM,cAAP;EACD;AAzCqB;AA4CxB,SAASD,cAATA,CAAwBZ,KAAxB,EAA4D;EAC1D,IAAIA,KAAK,CAACW,WAAV,EAAuB;IACrB,OAAOX,KAAK,CAACW,WAAb;EACD;EACD,IAAI,eAAeX,KAAnB,EAA0B;IACxB,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAOA,KAAK,CAACM,SAAN,IAAmB,CAA1B,CAAP;EACD;EACD,OAAOX,mBAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}